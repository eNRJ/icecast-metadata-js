{"version":3,"file":"icecast-metadata-player-1.11.9.min.js","mappings":"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","sources":["webpack://IcecastMetadataPlayer/./node_modules/web-worker/cjs/browser.js","webpack://IcecastMetadataPlayer/webpack/bootstrap","webpack://IcecastMetadataPlayer/webpack/runtime/define property getters","webpack://IcecastMetadataPlayer/webpack/runtime/hasOwnProperty shorthand","webpack://IcecastMetadataPlayer/./node_modules/icecast-metadata-js/src/IcecastMetadataQueue.js","webpack://IcecastMetadataPlayer/./src/global.js","webpack://IcecastMetadataPlayer/./node_modules/icecast-metadata-js/src/MetadataParser/Stats.js","webpack://IcecastMetadataPlayer/./node_modules/icecast-metadata-js/src/MetadataParser/MetadataParser.js","webpack://IcecastMetadataPlayer/./node_modules/icecast-metadata-js/src/MetadataParser/IcyMetadataParser.js","webpack://IcecastMetadataPlayer/./node_modules/icecast-metadata-js/src/MetadataParser/OggMetadataParser.js","webpack://IcecastMetadataPlayer/./node_modules/icecast-metadata-js/src/MetadataParser/DualMetadataParser.js","webpack://IcecastMetadataPlayer/./node_modules/icecast-metadata-js/src/IcecastMetadataReader.js","webpack://IcecastMetadataPlayer/./node_modules/icecast-metadata-js/src/IcecastReadableStream.js","webpack://IcecastMetadataPlayer/./node_modules/codec-parser/src/utilities.js","webpack://IcecastMetadataPlayer/./node_modules/codec-parser/src/codecs/HeaderCache.js","webpack://IcecastMetadataPlayer/./node_modules/codec-parser/src/globals.js","webpack://IcecastMetadataPlayer/./node_modules/codec-parser/src/codecs/Parser.js","webpack://IcecastMetadataPlayer/./node_modules/codec-parser/src/containers/Frame.js","webpack://IcecastMetadataPlayer/./node_modules/codec-parser/src/codecs/CodecFrame.js","webpack://IcecastMetadataPlayer/./node_modules/codec-parser/src/constants.js","webpack://IcecastMetadataPlayer/./node_modules/codec-parser/src/metadata/ID3v2.js","webpack://IcecastMetadataPlayer/./node_modules/codec-parser/src/codecs/CodecHeader.js","webpack://IcecastMetadataPlayer/./node_modules/codec-parser/src/codecs/mpeg/MPEGHeader.js","webpack://IcecastMetadataPlayer/./node_modules/codec-parser/src/codecs/mpeg/MPEGFrame.js","webpack://IcecastMetadataPlayer/./node_modules/codec-parser/src/codecs/mpeg/MPEGParser.js","webpack://IcecastMetadataPlayer/./node_modules/codec-parser/src/codecs/aac/AACHeader.js","webpack://IcecastMetadataPlayer/./node_modules/codec-parser/src/codecs/aac/AACFrame.js","webpack://IcecastMetadataPlayer/./node_modules/codec-parser/src/codecs/aac/AACParser.js","webpack://IcecastMetadataPlayer/./node_modules/codec-parser/src/codecs/flac/FLACFrame.js","webpack://IcecastMetadataPlayer/./node_modules/codec-parser/src/codecs/flac/FLACHeader.js","webpack://IcecastMetadataPlayer/./node_modules/codec-parser/src/codecs/flac/FLACParser.js","webpack://IcecastMetadataPlayer/./node_modules/codec-parser/src/containers/ogg/OggPageHeader.js","webpack://IcecastMetadataPlayer/./node_modules/codec-parser/src/containers/ogg/OggPage.js","webpack://IcecastMetadataPlayer/./node_modules/codec-parser/src/codecs/opus/OpusFrame.js","webpack://IcecastMetadataPlayer/./node_modules/codec-parser/src/codecs/opus/OpusHeader.js","webpack://IcecastMetadataPlayer/./node_modules/codec-parser/src/codecs/opus/OpusParser.js","webpack://IcecastMetadataPlayer/./node_modules/codec-parser/src/codecs/vorbis/VorbisFrame.js","webpack://IcecastMetadataPlayer/./node_modules/codec-parser/src/codecs/vorbis/VorbisHeader.js","webpack://IcecastMetadataPlayer/./node_modules/codec-parser/src/codecs/vorbis/VorbisParser.js","webpack://IcecastMetadataPlayer/./node_modules/codec-parser/src/containers/ogg/OggParser.js","webpack://IcecastMetadataPlayer/./node_modules/codec-parser/src/CodecParser.js","webpack://IcecastMetadataPlayer/./node_modules/codec-parser/index.js","webpack://IcecastMetadataPlayer/./src/players/Player.js","webpack://IcecastMetadataPlayer/./src/players/HTML5Player.js","webpack://IcecastMetadataPlayer/./node_modules/mse-audio-wrapper/src/constants.js","webpack://IcecastMetadataPlayer/./node_modules/mse-audio-wrapper/src/containers/ContainerElement.js","webpack://IcecastMetadataPlayer/./node_modules/mse-audio-wrapper/src/containers/isobmff/Box.js","webpack://IcecastMetadataPlayer/./node_modules/mse-audio-wrapper/src/containers/isobmff/ESTag.js","webpack://IcecastMetadataPlayer/./node_modules/mse-audio-wrapper/src/containers/isobmff/ISOBMFFContainer.js","webpack://IcecastMetadataPlayer/./node_modules/mse-audio-wrapper/src/utilities.js","webpack://IcecastMetadataPlayer/./node_modules/mse-audio-wrapper/src/containers/webm/EBML.js","webpack://IcecastMetadataPlayer/./node_modules/mse-audio-wrapper/src/containers/webm/WEBMContainer.js","webpack://IcecastMetadataPlayer/./node_modules/mse-audio-wrapper/src/MSEAudioWrapper.js","webpack://IcecastMetadataPlayer/./src/FrameQueue.js","webpack://IcecastMetadataPlayer/./src/players/MediaSourcePlayer.js","webpack://IcecastMetadataPlayer/./node_modules/@wasm-audio-decoders/common/src/WASMAudioDecoderCommon.js","webpack://IcecastMetadataPlayer/./node_modules/@wasm-audio-decoders/common/src/WASMAudioDecoderWorker.js","webpack://IcecastMetadataPlayer/./node_modules/opus-decoder/src/EmscriptenWasm.js","webpack://IcecastMetadataPlayer/./node_modules/opus-decoder/src/OpusDecoder.js","webpack://IcecastMetadataPlayer/./node_modules/opus-decoder/src/OpusDecoderWebWorker.js","webpack://IcecastMetadataPlayer/./node_modules/mpg123-decoder/src/EmscriptenWasm.js","webpack://IcecastMetadataPlayer/./node_modules/mpg123-decoder/src/MPEGDecoder.js","webpack://IcecastMetadataPlayer/./node_modules/mpg123-decoder/src/MPEGDecoderWebWorker.js","webpack://IcecastMetadataPlayer/./src/players/WebAudioPlayer.js","webpack://IcecastMetadataPlayer/./src/PlayerFactory.js","webpack://IcecastMetadataPlayer/./src/IcecastMetadataPlayer.js","webpack://IcecastMetadataPlayer/./src/EventTargetPolyfill.js"],"sourcesContent":["/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nmodule.exports = Worker;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/* Copyright 2020-2021 Ethan Halsall\n    This file is part of icecast-metadata-js.\n\n    icecast-metadata-js free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    icecast-metadata-js distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nconst noOp = () => {};\n\nexport default class IcecastMetadataQueue {\n  /**\n   * @description Schedules updates up to the millisecond for Icecast Metadata from the response body of an Icecast stream mountpoint\n   * @description The accuracy of metadata updates is a direct relationship of the icyMetaInt\n   * @param {Object} IcecastMetadataQueue constructor parameter\n   * @param {number} [IcecastMetadataQueue.icyBr] Bitrate of audio stream used to increase accuracy when to updating metadata\n   * @param {onMetadataUpdate} [IcecastMetadataQueue.onMetadataUpdate] Callback executed when metadata is scheduled to update\n   * @param {onMetadataEnqueue} [IcecastMetadataQueue.onMetadataEnqueue] Callback executed when metadata is enqueued\n   * @param {boolean} [IcecastMetadataQueue.paused] Set to true to start the queue in a paused mode\n   *\n   * @callback onMetadataUpdate\n   * @param {Object} metadata Object containing all metadata received.\n   * @param {string} [metadata.StreamTitle] Title of the metadata update.\n   * @param {string} [metadata.StreamUrl] Url (usually album art) of the metadata update.\n   * @param {number} timestampOffset Total time buffered when the metadata was added\n   * @param {number} timestamp Current time of the audio player when the metadata was added\n   *\n   * @callback onMetadataEnqueue\n   * @param {Object} metadata Object containing all metadata received.\n   * @param {string} [metadata.StreamTitle] Title of the metadata update.\n   * @param {string} [metadata.StreamUrl] Url (usually album art) of the metadata update.\n   * @param {number} timestampOffset Total time buffered when the metadata was added\n   * @param {number} timestamp Current time of the audio player when the metadata was added\n   *\n   */\n  constructor({\n    icyBr,\n    onMetadataUpdate = noOp,\n    onMetadataEnqueue = noOp,\n    paused = false,\n  }) {\n    this._icyBr = icyBr;\n    this._onMetadataUpdate = onMetadataUpdate;\n    this._onMetadataEnqueue = onMetadataEnqueue;\n    this._initialPaused = paused;\n    this._paused = paused;\n    this._isInitialMetadata = true;\n    this._metadataQueue = [];\n  }\n\n  /**\n   * @description Returns the metadata queued for updates\n   * @type {{metadata: string, time: number}[]} Queued metadata\n   */\n  get metadataQueue() {\n    return this._metadataQueue.map(({ _timeoutId, ...rest }) => rest);\n  }\n\n  /**\n   *\n   * @param {object} metadata Metadata object returned from IcecastMetadataReader\n   * @param {number} timestampOffset Total buffered audio in seconds\n   * @param {number} [timestamp] Current time in the audio player\n   */\n  addMetadata({ metadata, stats }, timestampOffset, timestamp = 0) {\n    /**\n     * Metadata time is derived from the total number of stream bytes read\n     * since the latest buffer input. The buffer offset should be the total\n     * seconds of audio in the player buffer when the metadata was read.\n     */\n    timestamp += stats ? this.getTimeByBytes(stats.currentStreamPosition) : 0;\n\n    const metadataPayload = {\n      metadata,\n      timestampOffset,\n      timestamp,\n    };\n\n    this._metadataQueue.push(metadataPayload);\n    if (!this._paused) this._enqueueMetadata(metadataPayload);\n  }\n\n  /**\n   * @description Calculates audio stream length based on bitrate\n   * @param {number} bytesRead Number of bytes\n   * @type {number} Seconds\n   */\n  getTimeByBytes(bytesRead) {\n    return this._icyBr ? bytesRead / (this._icyBr * 125) : 0;\n  }\n\n  /**\n   * @description Starts the metadata queue if it was paused\n   * @param {number} [timestamp] Current time of the audio player\n   */\n  startQueue(timestamp) {\n    if (this._paused) {\n      this._metadataQueue.forEach((u) => {\n        if (timestamp !== undefined) u.timestamp = timestamp;\n\n        this._enqueueMetadata(u);\n      });\n      this._paused = false;\n    }\n  }\n\n  /**\n   * @description Clears all metadata updates and empties the queue\n   */\n  purgeMetadataQueue() {\n    this._metadataQueue.forEach((i) => clearTimeout(i._timeoutId));\n    this._metadataQueue = [];\n    this._paused = this._initialPaused;\n    this._isInitialMetadata = true;\n  }\n\n  _enqueueMetadata(payload) {\n    this._onMetadataEnqueue(\n      payload.metadata,\n      payload.timestampOffset,\n      payload.timestamp\n    );\n\n    if (this._isInitialMetadata) {\n      this._dequeueMetadata();\n      this._isInitialMetadata = false;\n    } else {\n      payload._timeoutId = setTimeout(() => {\n        this._dequeueMetadata();\n      }, (payload.timestampOffset - payload.timestamp) * 1000); // trigger timeout relative to play position\n    }\n  }\n\n  _dequeueMetadata() {\n    const { metadata, timestampOffset, timestamp } =\n      this._metadataQueue.shift();\n    this._onMetadataUpdate(metadata, timestampOffset, timestamp);\n  }\n}\n","export const noOp = () => {};\nexport const p = new WeakMap();\n\nexport const state = {\n  LOADING: \"loading\",\n  PLAYING: \"playing\",\n  STOPPING: \"stopping\",\n  STOPPED: \"stopped\",\n  RETRYING: \"retrying\",\n};\n\nexport const event = {\n  BUFFER: \"buffer\",\n  PLAY: \"play\",\n  LOAD: \"load\",\n  STREAM_START: \"streamstart\",\n  STREAM: \"stream\",\n  STREAM_END: \"streamend\",\n  METADATA: \"metadata\",\n  METADATA_ENQUEUE: \"metadataenqueue\",\n  CODEC_UPDATE: \"codecupdate\",\n  STOP: \"stop\",\n  RETRY: \"retry\",\n  RETRY_TIMEOUT: \"retrytimeout\",\n  WARN: \"warn\",\n  ERROR: \"error\",\n};\n\n// options\nexport const endpoint = Symbol();\nexport const metadataTypes = Symbol();\nexport const playbackMethod = Symbol();\nexport const audioElement = Symbol();\nexport const bufferLength = Symbol();\nexport const icyMetaInt = Symbol();\nexport const icyCharacterEncoding = Symbol();\nexport const icyDetectionTimeout = Symbol();\nexport const enableLogging = Symbol();\nexport const retryDelayRate = Symbol();\nexport const retryDelayMin = Symbol();\nexport const retryDelayMax = Symbol();\nexport const retryTimeout = Symbol();\nexport const enableCodecUpdate = Symbol();\n\n// methods\nexport const fireEvent = Symbol();\nexport const attachAudioElement = Symbol();\nexport const shouldRetry = Symbol();\nexport const logError = Symbol();\n\n// variables\nexport const audioContext = Symbol();\nexport const hasIcy = Symbol();\nexport const icecastMetadataQueue = Symbol();\nexport const codecUpdateQueue = Symbol();\nexport const abortController = Symbol();\n\n// sync state\nexport const SYNCED = Symbol();\nexport const SYNCING = Symbol();\nexport const NOT_SYNCED = Symbol();\n\nexport const concatBuffers = (buffers) => {\n  const buffer = new Uint8Array(\n    buffers.reduce((acc, buf) => acc + buf.length, 0)\n  );\n\n  buffers.reduce((offset, buf) => {\n    buffer.set(buf, offset);\n    return offset + buf.length;\n  }, 0);\n\n  return buffer;\n};\n","/* Copyright 2020-2021 Ethan Halsall\n    This file is part of icecast-metadata-js.\n\n    icecast-metadata-js free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    icecast-metadata-js distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nexport default class Stats {\n  constructor() {\n    this._totalBytesRead = 0;\n    this._streamBytesRead = 0;\n    this._metadataLengthBytesRead = 0;\n    this._metadataBytesRead = 0;\n\n    this._currentBytesRemaining = 0;\n    this._currentStreamBytesRemaining = 0;\n    this._currentMetadataBytesRemaining = 0;\n  }\n\n  get stats() {\n    return {\n      totalBytesRead: this._totalBytesRead,\n      streamBytesRead: this._streamBytesRead,\n      metadataLengthBytesRead: this._metadataLengthBytesRead,\n      metadataBytesRead: this._metadataBytesRead,\n      currentBytesRemaining: this._currentBytesRemaining,\n      currentStreamBytesRemaining: this._currentStreamBytesRemaining,\n      currentMetadataBytesRemaining: this._currentMetadataBytesRemaining,\n    };\n  }\n\n  set currentStreamBytesRemaining(bytes) {\n    this._currentStreamBytesRemaining += bytes;\n  }\n\n  set currentMetadataBytesRemaining(bytes) {\n    this._currentMetadataBytesRemaining = bytes;\n  }\n\n  addBytes(bytes) {\n    this._totalBytesRead += bytes;\n    this._currentBytesRemaining -= bytes;\n  }\n\n  addStreamBytes(bytes) {\n    this._streamBytesRead += bytes;\n    this._currentStreamBytesRemaining -= bytes;\n  }\n\n  addMetadataLengthBytes(bytes) {\n    this._metadataLengthBytesRead += bytes;\n  }\n\n  addMetadataBytes(bytes) {\n    this._metadataBytesRead += bytes;\n    this._currentMetadataBytesRemaining -= bytes;\n  }\n\n  addCurrentBytesRemaining(bytes) {\n    this._currentBytesRemaining += bytes;\n  }\n}\n","/* Copyright 2020-2021 Ethan Halsall\n    This file is part of icecast-metadata-js.\n\n    icecast-metadata-js free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    icecast-metadata-js distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport Stats from \"./Stats.js\";\n\nconst noOp = () => {};\n\n/**\n * @description Passthrough parser\n * @protected\n * @see IcecastMetadataReader\n */\n\nexport default class MetadataParser {\n  constructor(params) {\n    this._remainingData = 0;\n    this._currentPosition = 0;\n    this._buffer = new Uint8Array(0);\n    this._streamBuffer = [];\n    this._streamBufferLength = 0;\n    this._stats = new Stats();\n\n    this._onStream = params.onStream || noOp;\n    this._onMetadata = params.onMetadata || noOp;\n    this._onMetadataFailed = params.onMetadataFailed || noOp;\n    this._onError = params.onError || noOp;\n    this._enableLogging = params.enableLogging || false;\n\n    this._onStreamPromise = Promise.resolve();\n    this._onMetadataPromise = Promise.resolve();\n    this._generator = this._passThroughParser();\n    this._generator.next();\n  }\n\n  *_passThroughParser() {\n    this._remainingData = Infinity;\n    while (true) {\n      this._addStream(yield* this._getNextValue());\n      yield* this._sendStream();\n    }\n  }\n\n  static _concatBuffers(...buffers) {\n    const length = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n    return this._concatBuffersKnownLength(buffers, length);\n  }\n\n  static _concatBuffersKnownLength(buffers, length) {\n    const buffer = new Uint8Array(length);\n\n    buffers.reduce((offset, buf) => {\n      buffer.set(buf, offset);\n      return offset + buf.length;\n    }, 0);\n\n    return buffer;\n  }\n\n  *iterator(chunk) {\n    for (\n      let i = this._generator.next(chunk);\n      i.value;\n      i = this._generator.next()\n    ) {\n      yield i.value;\n    }\n  }\n\n  readAll(chunk) {\n    for (\n      let i = this._generator.next(chunk);\n      i.value;\n      i = this._generator.next()\n    ) {}\n  }\n\n  async *asyncIterator(chunk) {\n    for (\n      let i = this._generator.next(chunk);\n      i.value;\n      i = this._generator.next()\n    ) {\n      await this._onStreamPromise;\n      await this._onMetadataPromise;\n      yield i.value;\n    }\n  }\n\n  async asyncReadAll(chunk) {\n    for (\n      let i = this._generator.next(chunk);\n      i.value;\n      i = this._generator.next()\n    ) {\n      await this._onStreamPromise;\n      await this._onMetadataPromise;\n    }\n  }\n\n  _logError(...messages) {\n    if (this._enableLogging) {\n      console.warn(\n        \"icecast-metadata-js\",\n        messages.reduce((acc, message) => acc + \"\\n  \" + message, \"\")\n      );\n    }\n    this._onError(...messages);\n  }\n\n  _addStream(stream) {\n    this._streamBuffer.push(stream);\n    this._streamBufferLength += stream.length;\n  }\n\n  *_sendStream() {\n    if (this._streamBuffer.length) {\n      const stream = MetadataParser._concatBuffersKnownLength(\n        this._streamBuffer,\n        this._streamBufferLength\n      );\n      this._streamBuffer = [];\n      this._streamBufferLength = 0;\n\n      this._stats.addStreamBytes(stream.length);\n\n      const streamPayload = { stream, stats: this._stats.stats };\n\n      this._onStreamPromise = this._onStream(streamPayload);\n      yield streamPayload;\n    }\n  }\n\n  *_sendMetadata(metadata) {\n    yield* this._sendStream();\n\n    const metadataPayload = {\n      metadata,\n      stats: this._stats.stats,\n    };\n\n    this._onMetadataPromise = this._onMetadata(metadataPayload);\n    yield metadataPayload;\n  }\n\n  *_getNextValue(minLength = 0) {\n    if (this._currentPosition === this._buffer.length) {\n      this._buffer = yield* this._readData();\n      this._currentPosition = 0;\n    }\n\n    while (this._buffer.length - this._currentPosition < minLength) {\n      this._buffer = MetadataParser._concatBuffers(\n        this._buffer,\n        yield* this._readData()\n      );\n    }\n\n    const value = this._buffer.subarray(\n      this._currentPosition,\n      (minLength || this._remainingData) + this._currentPosition\n    );\n\n    this._stats.addBytes(value.length);\n    this._remainingData =\n      value.length < this._remainingData\n        ? this._remainingData - value.length\n        : 0;\n\n    this._currentPosition += value.length;\n\n    return value;\n  }\n\n  *_readData() {\n    yield* this._sendStream();\n\n    let data;\n\n    do {\n      data = yield; // if out of data, accept new data in the .next() call\n    } while (!data || data.length === 0);\n\n    this._stats.addCurrentBytesRemaining(data.length);\n    return data;\n  }\n}\n","/* Copyright 2020-2021 Ethan Halsall\n    This file is part of icecast-metadata-js.\n\n    icecast-metadata-js free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    icecast-metadata-js distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport MetadataParser from \"./MetadataParser.js\";\n\n/**\n * @description Parses ICY metadata from an Icecast stream\n * @protected\n * @see IcecastMetadataReader\n */\n\nexport default class IcyMetadataParser extends MetadataParser {\n  constructor({\n    icyMetaInt,\n    icyDetectionTimeout = 2000,\n    icyCharacterEncoding = \"utf-8\",\n    ...rest\n  }) {\n    super(rest);\n\n    this._decoder = new globalThis.TextDecoder(icyCharacterEncoding);\n    this._icyMetaInt = icyMetaInt;\n    this._icyDetectionTimeout = icyDetectionTimeout;\n\n    this._generator = this._icyParser();\n    this._generator.next();\n  }\n\n  *_icyParser() {\n    if (yield* this._hasIcyMetadata()) {\n      do {\n        this._remainingData = this._icyMetaInt;\n        yield* this._getStream();\n        yield* this._getMetadataLength();\n        if (this._remainingData) yield* this._getMetadata();\n      } while (true);\n    }\n\n    this._remainingData = Infinity;\n    yield* this._getStream();\n  }\n\n  static parseIcyMetadata(metadataString) {\n    /**\n     * Metadata is a string of key='value' pairs delimited by a semicolon.\n     * The string is a fixed length and any unused bytes at the end are 0x00.\n     * i.e. \"StreamTitle='The Stream Title';StreamUrl='https://example.com';\\0\\0\\0\\0\\0\\0\"\n     */\n\n    const metadataRegex = /(?<key>[^\\0]+?)='(?<val>[^\\0]*?)(;$|';|'$|$)/;\n    const metadata = {};\n\n    // [{key: \"StreamTitle\", val: \"The Stream Title\"}, {key: \"StreamUrl\", val: \"https://example.com\"}]\n    for (const metadataElement of metadataString.match(\n      new RegExp(metadataRegex, \"g\")\n    ) || []) {\n      const match = metadataElement.match(metadataRegex);\n      if (match) metadata[match[\"groups\"][\"key\"]] = match[\"groups\"][\"val\"];\n    }\n\n    // {StreamTitle: \"The Stream Title\", StreamUrl: \"https://example.com\"}\n    return metadata;\n  }\n\n  get icyMetaInt() {\n    return this._icyMetaInt;\n  }\n\n  *_hasIcyMetadata() {\n    if (this._icyMetaInt > 0) return true;\n    if (!this._icyDetectionTimeout) return false;\n\n    this._logError(\n      \"Passed in Icy-MetaInt is invalid. Attempting to detect ICY Metadata.\",\n      \"See https://github.com/eshaz/icecast-metadata-js for information on how to properly request ICY Metadata.\"\n    );\n\n    // prettier-ignore\n    const METADATA_SEARCH = [null,83,116,114,101,97,109,84,105,116,108,101,61]; // StreamTitle=\n    const startTime = Date.now();\n    let metaInt = 0;\n\n    while (startTime + this._icyDetectionTimeout > Date.now()) {\n      this._buffer = MetadataParser._concatBuffers(\n        this._buffer,\n        yield* this._readData()\n      );\n\n      // search for metadata\n      detectMetadata: while (\n        metaInt <\n        this._buffer.length - METADATA_SEARCH.length\n      ) {\n        for (let i = 1; i < METADATA_SEARCH.length; i++) {\n          if (this._buffer[i + metaInt] !== METADATA_SEARCH[i]) {\n            metaInt++;\n            continue detectMetadata;\n          }\n        }\n\n        // found metadata\n        // prettier-ignore\n        this._logError(`Found ICY Metadata! Setting Icy-MetaInt to ${metaInt}.`);\n        this._icyMetaInt = metaInt;\n\n        return true;\n      }\n    }\n\n    // prettier-ignore\n    this._logError(\n      \"ICY Metadata not detected, but continuing anyway. Audio errors will occur if there is ICY metadata.\",\n      `Searched ${this._buffer.length} bytes for ${(Date.now() - startTime) / 1000} seconds.`,\n      \"Try increasing the `icyDetectionTimeout` value if ICY metadata is present in the stream.\"\n    );\n    this._onMetadataFailed(\"icy\");\n\n    return false;\n  }\n\n  *_getStream() {\n    this._stats.currentStreamBytesRemaining = this._remainingData;\n\n    while (this._remainingData) {\n      this._addStream(yield* super._getNextValue());\n    }\n  }\n\n  *_getMetadataLength() {\n    this._remainingData = 1;\n\n    do {\n      this._remainingData = (yield* this._getNextValue())[0] * 16;\n    } while (this._remainingData === 1);\n\n    this._stats.addMetadataLengthBytes(1);\n  }\n\n  *_getMetadata() {\n    this._stats.currentMetadataBytesRemaining = this._remainingData;\n\n    const metadata = yield* this._getNextValue(this._remainingData);\n    this._stats.addMetadataBytes(metadata.length);\n\n    yield* this._sendMetadata(\n      IcyMetadataParser.parseIcyMetadata(this._decoder.decode(metadata))\n    );\n  }\n}\n","/* Copyright 2020-2021 Ethan Halsall\n    This file is part of icecast-metadata-js.\n\n    icecast-metadata-js free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    icecast-metadata-js distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport MetadataParser from \"./MetadataParser.js\";\n\n/**\n * @description Parses OGG metadata from an Icecast stream\n * @protected\n * @see IcecastMetadataReader\n */\nexport default class OggMetadataParser extends MetadataParser {\n  constructor(params) {\n    super(params);\n\n    this._decoder = new globalThis.TextDecoder(\"utf-8\");\n    this._generator = this._oggParser();\n    this._generator.next();\n    this._isContinuePacket = false;\n  }\n\n  *_oggParser() {\n    if (yield* this._hasOggPage()) {\n      const codecMatcher = yield* this._identifyCodec();\n      if (codecMatcher) {\n        while (yield* this._hasOggPage()) {\n          if (!this._isContinuePacket) yield* this._getMetadata(codecMatcher);\n          yield* this._getStream();\n        }\n      }\n    }\n\n    this._remainingData = Infinity;\n    yield* this._getStream();\n  }\n\n  _getUint32(data, offset = 0) {\n    return new DataView(\n      Uint8Array.from([...data.subarray(offset, offset + 4)]).buffer\n    ).getUint32(0, true);\n  }\n\n  _matchBytes(matchString, bytes) {\n    return String.fromCharCode(...bytes).match(matchString);\n  }\n\n  *_hasOggPage() {\n    // Bytes (1-4 of 28)\n    // Frame sync (must equal OggS): `AAAAAAAA|AAAAAAAA|AAAAAAAA|AAAAAAAA`:\n    // Byte (5 of 28) stream_structure_version\n    // Byte (6 of 28)\n    // * `00000...`: All zeros\n    // * `.....C..`: (0 no, 1 yes) last page of logical bitstream (eos)\n    // * `......D.`: (0 no, 1 yes) first page of logical bitstream (bos)\n    // * `.......E`: (0 no, 1 yes) continued packet\n    let syncBytes = [];\n    while (syncBytes.length <= 65307) {\n      // max ogg page size\n      const bytes = yield* super._getNextValue(6); // Sync with OGG page without sending stream data\n      if (\n        bytes[0] === 0x4f &&\n        bytes[1] === 0x67 &&\n        bytes[2] === 0x67 &&\n        bytes[3] === 0x53 &&\n        !(bytes[5] & 0b11111000)\n      ) {\n        this._isContinuePacket = bytes[5] & 0b00000001;\n        this._currentPosition -= 6;\n        this._remainingData += 6;\n        this._stats._totalBytesRead -= 6;\n        this._stats._currentBytesRemaining += 6;\n        break;\n      }\n      syncBytes.push(bytes[0]);\n\n      this._currentPosition -= 4;\n      this._stats._totalBytesRead -= 4;\n      this._stats._currentBytesRemaining += 4;\n    }\n\n    if (syncBytes.length) this._addStream(Uint8Array.from(syncBytes));\n\n    if (syncBytes.length > 65307) {\n      this._logError(\n        \"This stream is not an OGG stream. No OGG metadata will be returned.\",\n        \"See https://github.com/eshaz/icecast-metadata-js for information on OGG metadata.\"\n      );\n      this._onMetadataFailed(\"ogg\");\n      return false;\n    }\n\n    const baseOggPage = yield* this._getNextValue(27);\n    // Byte (27 of 28)\n    // * `JJJJJJJJ`: Number of page segments in the segment table\n    const oggPageSegments = yield* this._getNextValue(baseOggPage[26]);\n\n    this._remainingData = oggPageSegments.reduce(\n      (acc, octet) => acc + octet,\n      0\n    );\n    return true;\n  }\n\n  *_identifyCodec() {\n    const data = yield* this._getNextValue(8);\n\n    yield* this._getStream();\n\n    if (this._matchBytes(/\\x7fFLAC/, data.subarray(0, 5))) {\n      return { regex: /^[\\x84|\\x04]/, length: 4 };\n    } else if (this._matchBytes(/OpusHead/, data.subarray(0, 8))) {\n      return { regex: /OpusTags/, length: 8 };\n    } else if (this._matchBytes(/\\x01vorbis/, data.subarray(0, 7))) {\n      return { regex: /\\x03vorbis/, length: 7 };\n    }\n  }\n\n  *_getMetadata({ regex, length }) {\n    if (this._matchBytes(regex, yield* this._getNextValue(length))) {\n      yield* this._sendMetadata(yield* this._readVorbisComment());\n    }\n  }\n\n  *_getStream() {\n    while (this._remainingData) {\n      yield* this._getNextValue();\n    }\n  }\n\n  *_getNextValue(length) {\n    const value = yield* super._getNextValue(length);\n\n    this._addStream(value);\n    return value;\n  }\n\n  *_readData() {\n    const data = yield* super._readData();\n    this._stats.currentStreamBytesRemaining = data.length;\n    return data;\n  }\n\n  *_readVorbisComment() {\n    /*\n    1) [vendor_length] = read an unsigned integer of 32 bits\n    2) [vendor_string] = read a UTF-8 vector as [vendor_length] octets\n    3) [user_comment_list_length] = read an unsigned integer of 32 bits\n    4) iterate [user_comment_list_length] times {\n       5) [length] = read an unsigned integer of 32 bits\n       6) this iteration's user comment = read a UTF-8 vector as [length] octets\n    }\n    7) [framing_bit] = read a single bit as boolean\n    8) if ( [framing_bit] unset or end of packet ) then ERROR\n    9) done.\n    */\n    const vendorStringLength = this._getUint32(yield* this._getNextValue(4));\n    this._stats.addMetadataBytes(4);\n\n    const vendorString = this._decoder.decode(\n      yield* this._getNextValue(vendorStringLength)\n    );\n    this._stats.addMetadataBytes(vendorStringLength);\n\n    const commentListLength = this._getUint32(yield* this._getNextValue(4));\n    this._stats.addMetadataBytes(4);\n\n    const comments = [];\n    for (let i = 0; i < commentListLength; i++) {\n      const commentLength = yield* this._getNextValue(4);\n      this._stats.addMetadataBytes(4);\n\n      comments.push(yield* this._getNextValue(this._getUint32(commentLength)));\n      this._stats.addMetadataBytes(comments[comments.length - 1].length);\n    }\n\n    this._stats.currentMetadataBytesRemaining = 0;\n\n    return comments.reduce(\n      (metadata, comment) => {\n        const delimiter = comment.indexOf(0x3d);\n        // prettier-ignore\n        const key = String.fromCharCode(...comment.subarray(0, delimiter)).toUpperCase();\n        const val = this._decoder.decode(comment.subarray(delimiter + 1));\n\n        metadata[key] = metadata[key] ? `${metadata[key]}; ${val}` : val;\n        return metadata;\n      },\n      { VENDOR_STRING: vendorString }\n    );\n  }\n}\n","/* Copyright 2020-2021 Ethan Halsall\n    This file is part of icecast-metadata-js.\n\n    icecast-metadata-js free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    icecast-metadata-js distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport IcyMetadataParser from \"./IcyMetadataParser.js\";\nimport OggMetadataParser from \"./OggMetadataParser.js\";\n\n/**\n * @description Parses ICY and OGG metadata from an Icecast stream\n * @protected\n * @see IcecastMetadataReader\n */\n\nexport default class DualMetadataParser {\n  constructor(params) {\n    const { onStream, ...rest } = params;\n    this._oggMetadataParser = new OggMetadataParser(params);\n    this._icyMetadataParser = new IcyMetadataParser(rest);\n  }\n\n  get icyMetaInt() {\n    return this._icyMetadataParser.icyMetaInt;\n  }\n\n  *iterator(chunk) {\n    for (const value of this._icyMetadataParser.iterator(chunk)) {\n      if (value.stream) {\n        yield* this._oggMetadataParser.iterator(value.stream);\n      } else {\n        yield value;\n      }\n    }\n  }\n\n  readAll(chunk) {\n    for (const value of this._icyMetadataParser.iterator(chunk)) {\n      if (value.stream) {\n        this._oggMetadataParser.readAll(value.stream);\n      }\n    }\n  }\n\n  async *asyncIterator(chunk) {\n    for await (const value of this._icyMetadataParser.asyncIterator(chunk)) {\n      if (value.stream) {\n        for await (const oggValue of this._oggMetadataParser.asyncIterator(\n          value.stream\n        )) {\n          yield oggValue;\n        }\n      } else {\n        yield value;\n      }\n    }\n  }\n\n  async asyncReadAll(chunk) {\n    for await (const value of this._icyMetadataParser.iterator(chunk)) {\n      if (value.stream) {\n        await this._oggMetadataParser.asyncReadAll(value.stream);\n      }\n    }\n  }\n}\n","/* Copyright 2020-2021 Ethan Halsall\n    This file is part of icecast-metadata-js.\n\n    icecast-metadata-js free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    icecast-metadata-js distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport MetadataParser from \"./MetadataParser/MetadataParser.js\";\nimport IcyMetadataParser from \"./MetadataParser/IcyMetadataParser.js\";\nimport OggMetadataParser from \"./MetadataParser/OggMetadataParser.js\";\nimport DualMetadataParser from \"./MetadataParser/DualMetadataParser.js\";\n\nexport default class IcecastMetadataReader {\n  /**\n   * @description Splits Icecast raw response into stream bytes and metadata key / value pairs.\n   * @param {number} IcecastMetadataReader.icyMetaInt Interval in bytes of metadata updates returned by the Icecast server\n   * @param {number} IcecastMetadataReader.icyCharacterEncoding Character encoding to use for ICY metadata (defaults to \"utf-8\")\n   * @param {number} IcecastMetadataReader.icyDetectionTimeout Duration in milliseconds to search for metadata if icyMetaInt isn't passed in\n   * @param {Array} IcecastMetadataReader.metadataTypes Types of metadata to capture: \"icy\" and/or \"ogg\"\n   *\n   * @callback onMetadata\n   * @param {object} value Object containing Metadata and Statistics\n   * @param {object} metadata Object containing the metadata received.\n   * @param {string} [metadata.StreamTitle] (ICY) Title of the metadata update.\n   * @param {string} [metadata.StreamUrl] (ICY) Url (usually album art) of the metadata update.\n   * @param {string} [metadata.TITLE] (OGG) Url Title of the metadata update.\n   * @param {object} stats Object containing statistics on how many bytes were read and the current read position.\n   *\n   * @callback onStream\n   * @param {object} value Object containing Stream data and Statistics\n   * @param {Uint8Array} stream Object containing the stream buffer.\n   * @param {object} stats Object containing statistics on how many bytes were read and the current read position.\n   *\n   * @callback onMetadataFailed Called when metadata detection has failed and no metadata will be returned\n   * @param {string} metadataType Metadata type that failed (\"icy\" or \"ogg\")\n   *\n   * @callback onError Called when an error is encountered\n   * @param {string} message Error message\n   */\n  constructor({ metadataTypes = [\"icy\"], ...rest } = {}) {\n    const hasIcy = metadataTypes.includes(\"icy\");\n    const hasOgg = metadataTypes.includes(\"ogg\");\n\n    if (hasIcy && hasOgg) this._metadataParser = new DualMetadataParser(rest);\n    else if (hasOgg) this._metadataParser = new OggMetadataParser(rest);\n    else if (hasIcy) this._metadataParser = new IcyMetadataParser(rest);\n    else this._metadataParser = new MetadataParser(rest);\n  }\n\n  /**\n   * @description Parses an already decoded ICY metadata string into key value pairs.\n   * @param {string} metadataString ICY formatted metadata string. (i.e. \"StreamTitle='A Title';\")\n   * @returns {object} Parsed metadata key value pairs. (i.e. {StreamTitle: \"A Title\"})\n   */\n  static parseIcyMetadata(string) {\n    return IcyMetadataParser.parseIcyMetadata(string);\n  }\n\n  /**\n   * @description Gets the ICY metadata interval for this instance.\n   * @returns {number} ICY metadata interval in bytes.\n   */\n  get icyMetaInt() {\n    return this._metadataParser.icyMetaInt;\n  }\n\n  /**\n   * @description Returns an iterator that yields stream or metadata.\n   * @param {Uint8Array} chunk Next chunk of data to read\n   * @returns {Iterator} Iterator that operates over a raw icecast response.\n   * @yields {object} Object containing stream or metadata.\n   */\n  *iterator(chunk) {\n    yield* this._metadataParser.iterator(chunk);\n  }\n\n  /**\n   * @description Reads all data in the passed in chunk and calls the onStream and onMetadata callbacks.\n   * @param {Uint8Array} chunk Next chunk of data to read\n   */\n  readAll(chunk) {\n    this._metadataParser.readAll(chunk);\n  }\n\n  /**\n   * @description Returns an async iterator that yields stream or metadata and awaits the onStream and onMetadata callbacks.\n   * @param {Uint8Array} chunk Next chunk of data to read\n   * @returns {IterableIterator} Iterator that operates over a raw icecast response.\n   * @yields {object} Object containing stream or metadata.\n   */\n  async *asyncIterator(chunk) {\n    return yield* this._metadataParser.asyncIterator(chunk);\n  }\n\n  /**\n   * @description Reads all data in the chunk and awaits the onStream and onMetadata callbacks.\n   * @param {Uint8Array} chunk Next chunk of data to read\n   */\n  async asyncReadAll(chunk) {\n    return this._metadataParser.asyncReadAll(chunk);\n  }\n}\n","/* Copyright 2020-2021 Ethan Halsall\n    This file is part of icecast-metadata-js.\n\n    icecast-metadata-js free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    icecast-metadata-js distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport IcecastMetadataReader from \"./IcecastMetadataReader.js\";\n\nconst noOp = () => {};\n\n/**\n * @description Browser ReadableStream wrapper for IcecastMetadataReader\n */\nexport default class IcecastReadableStream {\n  /**\n   * @param {ReadableStream} response ReadableStream for raw Icecast response data\n   * @param {object} options Configuration options for IcecastMetadataReader\n   * @see IcecastMetadataReader for information on the options parameter\n   */\n  constructor(response, { onStream = noOp, ...rest }) {\n    let icecast;\n\n    this._readableStream = new ReadableStream({\n      async start(controller) {\n        icecast = new IcecastMetadataReader({\n          icyMetaInt: parseInt(response.headers.get(\"Icy-MetaInt\")),\n          ...rest,\n          onStream: async (value) => {\n            controller.enqueue(value.stream);\n            return onStream(value);\n          },\n        });\n\n        for await (const chunk of IcecastReadableStream.asyncIterator(\n          response.body\n        )) {\n          await icecast.asyncReadAll(chunk);\n        }\n\n        controller.close();\n      },\n    });\n\n    this._icecast = icecast;\n  }\n\n  /**\n   * @returns Icecast Metadata Interval if it is present on this stream\n   */\n  get icyMetaInt() {\n    return this._icecast.icyMetaInt;\n  }\n\n  /**\n   * @returns The ReadableStream instance\n   */\n  get readableStream() {\n    return this._readableStream;\n  }\n\n  /**\n   * @description Starts reading from the response and processing stream and metadata.\n   */\n  async startReading() {\n    try {\n      for await (const i of IcecastReadableStream.asyncIterator(\n        this._readableStream\n      )) {\n      }\n    } catch (e) {\n      if (e.name !== \"AbortError\") throw e;\n    }\n  }\n\n  /**\n   * @description Wraps a ReadableStream as an Async Iterator.\n   * @param {ReadableStream} readableStream ReadableStream to convert to AsyncIterator\n   * @returns {Symbol.asyncIterator} Async Iterator that wraps the ReadableStream\n   */\n  static asyncIterator(readableStream) {\n    const reader = readableStream.getReader();\n    return {\n      [Symbol.asyncIterator]: () => ({\n        next: () => reader.read(),\n      }),\n    };\n  }\n}\n","/* Copyright 2020-2021 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nconst getCrcTable = (crcTable, crcInitialValueFunction, crcFunction) => {\n  for (let byte = 0; byte < crcTable.length; byte++) {\n    let crc = crcInitialValueFunction(byte);\n\n    for (let bit = 8; bit > 0; bit--) crc = crcFunction(crc);\n\n    crcTable[byte] = crc;\n  }\n  return crcTable;\n};\n\nconst crc8Table = getCrcTable(\n  new Uint8Array(256),\n  (b) => b,\n  (crc) => (crc & 0x80 ? 0x07 ^ (crc << 1) : crc << 1)\n);\n\nconst flacCrc16Table = [\n  getCrcTable(\n    new Uint16Array(256),\n    (b) => b << 8,\n    (crc) => (crc << 1) ^ (crc & (1 << 15) ? 0x8005 : 0)\n  ),\n];\n\nconst crc32Table = [\n  getCrcTable(\n    new Uint32Array(256),\n    (b) => b,\n    (crc) => (crc >>> 1) ^ ((crc & 1) * 0xedb88320)\n  ),\n];\n\n// build crc tables\nfor (let i = 0; i < 15; i++) {\n  flacCrc16Table.push(new Uint16Array(256));\n  crc32Table.push(new Uint32Array(256));\n\n  for (let j = 0; j <= 0xff; j++) {\n    flacCrc16Table[i + 1][j] =\n      flacCrc16Table[0][flacCrc16Table[i][j] >>> 8] ^\n      (flacCrc16Table[i][j] << 8);\n\n    crc32Table[i + 1][j] =\n      (crc32Table[i][j] >>> 8) ^ crc32Table[0][crc32Table[i][j] & 0xff];\n  }\n}\n\nconst crc8 = (data) => {\n  let crc = 0;\n  const dataLength = data.length;\n\n  for (let i = 0; i !== dataLength; i++) crc = crc8Table[crc ^ data[i]];\n\n  return crc;\n};\n\nconst flacCrc16 = (data) => {\n  const dataLength = data.length;\n  const crcChunkSize = dataLength - 16;\n  let crc = 0;\n  let i = 0;\n\n  while (i <= crcChunkSize) {\n    crc ^= (data[i++] << 8) | data[i++];\n    crc =\n      flacCrc16Table[15][crc >> 8] ^\n      flacCrc16Table[14][crc & 0xff] ^\n      flacCrc16Table[13][data[i++]] ^\n      flacCrc16Table[12][data[i++]] ^\n      flacCrc16Table[11][data[i++]] ^\n      flacCrc16Table[10][data[i++]] ^\n      flacCrc16Table[9][data[i++]] ^\n      flacCrc16Table[8][data[i++]] ^\n      flacCrc16Table[7][data[i++]] ^\n      flacCrc16Table[6][data[i++]] ^\n      flacCrc16Table[5][data[i++]] ^\n      flacCrc16Table[4][data[i++]] ^\n      flacCrc16Table[3][data[i++]] ^\n      flacCrc16Table[2][data[i++]] ^\n      flacCrc16Table[1][data[i++]] ^\n      flacCrc16Table[0][data[i++]];\n  }\n\n  while (i !== dataLength)\n    crc = ((crc & 0xff) << 8) ^ flacCrc16Table[0][(crc >> 8) ^ data[i++]];\n\n  return crc;\n};\n\nconst crc32 = (data) => {\n  const dataLength = data.length;\n  const crcChunkSize = dataLength - 16;\n  let crc = 0;\n  let i = 0;\n\n  while (i <= crcChunkSize)\n    crc =\n      crc32Table[15][(data[i++] ^ crc) & 0xff] ^\n      crc32Table[14][(data[i++] ^ (crc >>> 8)) & 0xff] ^\n      crc32Table[13][(data[i++] ^ (crc >>> 16)) & 0xff] ^\n      crc32Table[12][data[i++] ^ (crc >>> 24)] ^\n      crc32Table[11][data[i++]] ^\n      crc32Table[10][data[i++]] ^\n      crc32Table[9][data[i++]] ^\n      crc32Table[8][data[i++]] ^\n      crc32Table[7][data[i++]] ^\n      crc32Table[6][data[i++]] ^\n      crc32Table[5][data[i++]] ^\n      crc32Table[4][data[i++]] ^\n      crc32Table[3][data[i++]] ^\n      crc32Table[2][data[i++]] ^\n      crc32Table[1][data[i++]] ^\n      crc32Table[0][data[i++]];\n\n  while (i !== dataLength)\n    crc = crc32Table[0][(crc ^ data[i++]) & 0xff] ^ (crc >>> 8);\n\n  return crc ^ -1;\n};\n\nconst concatBuffers = (...buffers) => {\n  const buffer = new Uint8Array(\n    buffers.reduce((acc, buf) => acc + buf.length, 0)\n  );\n\n  buffers.reduce((offset, buf) => {\n    buffer.set(buf, offset);\n    return offset + buf.length;\n  }, 0);\n\n  return buffer;\n};\n\nconst bytesToString = (bytes) => String.fromCharCode(...bytes);\n\n// prettier-ignore\nconst reverseTable = [0x0,0x8,0x4,0xc,0x2,0xa,0x6,0xe,0x1,0x9,0x5,0xd,0x3,0xb,0x7,0xf];\nconst reverse = (val) =>\n  (reverseTable[val & 0b1111] << 4) | reverseTable[val >> 4];\n\nclass BitReader {\n  constructor(data) {\n    this._data = data;\n    this._pos = data.length * 8;\n  }\n\n  set position(position) {\n    this._pos = position;\n  }\n\n  get position() {\n    return this._pos;\n  }\n\n  read(bits) {\n    const byte = Math.floor(this._pos / 8);\n    const bit = this._pos % 8;\n    this._pos -= bits;\n\n    const window =\n      (reverse(this._data[byte - 1]) << 8) + reverse(this._data[byte]);\n\n    return (window >> (7 - bit)) & 0xff;\n  }\n}\n\nexport {\n  crc8,\n  flacCrc16,\n  crc32,\n  reverse,\n  concatBuffers,\n  bytesToString,\n  BitReader,\n};\n","/* Copyright 2020-2021 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nexport default class HeaderCache {\n  constructor(onCodecUpdate) {\n    this._onCodecUpdate = onCodecUpdate;\n    this.reset();\n  }\n\n  enable() {\n    this._isEnabled = true;\n  }\n\n  reset() {\n    this._headerCache = new Map();\n    this._codecUpdateData = new WeakMap();\n    this._codecShouldUpdate = false;\n    this._bitrate = null;\n    this._isEnabled = false;\n  }\n\n  checkCodecUpdate(bitrate, totalDuration) {\n    if (this._onCodecUpdate) {\n      if (this._bitrate !== bitrate) {\n        this._bitrate = bitrate;\n        this._codecShouldUpdate = true;\n      }\n\n      if (this._codecShouldUpdate) {\n        this._onCodecUpdate(\n          {\n            bitrate,\n            ...this._codecUpdateData.get(\n              this._headerCache.get(this._currentHeader)\n            ),\n          },\n          totalDuration\n        );\n      }\n\n      this._codecShouldUpdate = false;\n    }\n  }\n\n  updateCurrentHeader(key) {\n    if (this._onCodecUpdate && key !== this._currentHeader) {\n      this._codecShouldUpdate = true;\n      this._currentHeader = key;\n    }\n  }\n\n  getHeader(key) {\n    const header = this._headerCache.get(key);\n\n    if (header) {\n      this.updateCurrentHeader(key);\n    }\n\n    return header;\n  }\n\n  setHeader(key, header, codecUpdateFields) {\n    if (this._isEnabled) {\n      this.updateCurrentHeader(key);\n\n      this._headerCache.set(key, header);\n      this._codecUpdateData.set(header, codecUpdateFields);\n    }\n  }\n}\n","export const headerStore = new WeakMap();\nexport const frameStore = new WeakMap();\n","/* Copyright 2020-2021 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport { frameStore } from \"../globals.js\";\n\n/**\n * @abstract\n * @description Abstract class containing methods for parsing codec frames\n */\nexport default class Parser {\n  constructor(codecParser, headerCache) {\n    this._codecParser = codecParser;\n    this._headerCache = headerCache;\n  }\n\n  *syncFrame() {\n    let frame;\n\n    do {\n      frame = yield* this.Frame.getFrame(\n        this._codecParser,\n        this._headerCache,\n        0\n      );\n      if (frame) return frame;\n      this._codecParser.incrementRawData(1); // increment to continue syncing\n    } while (true);\n  }\n\n  /**\n   * @description Searches for Frames within bytes containing a sequence of known codec frames.\n   * @param {boolean} ignoreNextFrame Set to true to return frames even if the next frame may not exist at the expected location\n   * @returns {Frame}\n   */\n  *fixedLengthFrameSync(ignoreNextFrame) {\n    let frame = yield* this.syncFrame();\n    const frameLength = frameStore.get(frame).length;\n\n    if (\n      ignoreNextFrame ||\n      this._codecParser._flushing ||\n      // check if there is a frame right after this one\n      (yield* this.Header.getHeader(\n        this._codecParser,\n        this._headerCache,\n        frameLength\n      ))\n    ) {\n      this._headerCache.enable(); // start caching when synced\n\n      this._codecParser.incrementRawData(frameLength); // increment to the next frame\n      this._codecParser.mapFrameStats(frame);\n      return frame;\n    }\n\n    this._codecParser.logWarning(\n      `Missing frame frame at ${frameLength} bytes from current position.`,\n      \"Dropping current frame and trying again.\"\n    );\n    this._headerCache.reset(); // frame is invalid and must re-sync and clear cache\n    this._codecParser.incrementRawData(1); // increment to invalidate the current frame\n  }\n}\n","/* Copyright 2020-2021 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport { frameStore } from \"../globals.js\";\n\n/**\n * @abstract\n */\nexport default class Frame {\n  constructor(header, data) {\n    frameStore.set(this, { header });\n\n    this.data = data;\n  }\n}\n","/* Copyright 2020-2021 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport { frameStore, headerStore } from \"../globals.js\";\nimport Frame from \"../containers/Frame.js\";\n\nexport default class CodecFrame extends Frame {\n  static *getFrame(Header, Frame, codecParser, headerCache, readOffset) {\n    const header = yield* Header.getHeader(\n      codecParser,\n      headerCache,\n      readOffset\n    );\n\n    if (header) {\n      const frameLength = headerStore.get(header).frameLength;\n      const samples = headerStore.get(header).samples;\n\n      const frame = (yield* codecParser.readRawData(\n        frameLength,\n        readOffset\n      )).subarray(0, frameLength);\n\n      return new Frame(header, frame, samples);\n    } else {\n      return null;\n    }\n  }\n\n  constructor(header, data, samples) {\n    super(header, data);\n\n    this.header = header;\n    this.samples = samples;\n    this.duration = (samples / header.sampleRate) * 1000;\n    this.frameNumber = null;\n    this.totalBytesOut = null;\n    this.totalSamples = null;\n    this.totalDuration = null;\n\n    frameStore.get(this).length = data.length;\n  }\n}\n","export const reserved = \"reserved\";\nexport const bad = \"bad\";\nexport const free = \"free\";\nexport const none = \"none\";\nexport const sixteenBitCRC = \"16bit CRC\";\n\n// channel mappings\nconst mappingJoin = \", \";\n\nconst front = \"front\";\nconst side = \"side\";\nconst rear = \"rear\";\nconst left = \"left\";\nconst center = \"center\";\nconst right = \"right\";\n\n// prettier-ignore\n/*\n[\n  [\n    \"left, right\",\n    \"left, right, center\",\n    \"left, center, right\",\n    \"center, left, right\",\n    \"center\"\n  ],\n  [\n    \"front left, front right\",\n    \"front left, front right, front center\",\n    \"front left, front center, front right\",\n    \"front center, front left, front right\",\n    \"front center\"\n  ],\n  [\n    \"side left, side right\",\n    \"side left, side right, side center\",\n    \"side left, side center, side right\",\n    \"side center, side left, side right\",\n    \"side center\"\n  ],\n  [\n    \"rear left, rear right\",\n    \"rear left, rear right, rear center\",\n    \"rear left, rear center, rear right\",\n    \"rear center, rear left, rear right\",\n    \"rear center\"\n  ]\n]\n*/\nexport const channelMappings = \n  [\n    \"\", \n    front + \" \",\n    side + \" \",\n    rear + \" \"\n  ].map((x) =>\n  [\n    [left, right],\n    [left, right, center],\n    [left, center, right],\n    [center, left, right],\n    [center],\n  ].flatMap((y) => y.map((z) => x + z).join(mappingJoin))\n);\n\nexport const lfe = \"LFE\";\nexport const monophonic = \"monophonic (mono)\";\nexport const stereo = \"stereo\";\nconst surround = \"surround\";\n\nconst channels = [\n  monophonic,\n  stereo,\n  `linear ${surround}`,\n  \"quadraphonic\",\n  `5.0 ${surround}`,\n  `5.1 ${surround}`,\n  `6.1 ${surround}`,\n  `7.1 ${surround}`,\n];\n\nexport const getChannelMapping = (channelCount, ...mappings) =>\n  `${channels[channelCount - 1]} (${mappings.join(mappingJoin)})`;\n\n// prettier-ignore\nexport const vorbisOpusChannelMapping = [\n  monophonic,\n  getChannelMapping(2,channelMappings[0][0]),\n  getChannelMapping(3,channelMappings[0][2]),\n  getChannelMapping(4,channelMappings[1][0],channelMappings[3][0]),\n  getChannelMapping(5,channelMappings[1][2],channelMappings[3][0]),\n  getChannelMapping(6,channelMappings[1][2],channelMappings[3][0],lfe),\n  getChannelMapping(7,channelMappings[1][2],channelMappings[2][0],channelMappings[3][4],lfe),\n  getChannelMapping(8,channelMappings[1][2],channelMappings[2][0],channelMappings[3][0],lfe),\n]\n\n// sampleRates\nexport const rate192000 = 192000;\nexport const rate176400 = 176400;\nexport const rate96000 = 96000;\nexport const rate88200 = 88200;\nexport const rate64000 = 64000;\nexport const rate48000 = 48000;\nexport const rate44100 = 44100;\nexport const rate32000 = 32000;\nexport const rate24000 = 24000;\nexport const rate22050 = 22050;\nexport const rate16000 = 16000;\nexport const rate12000 = 12000;\nexport const rate11025 = 11025;\nexport const rate8000 = 8000;\nexport const rate7350 = 7350;\n","/* Copyright 2020-2021 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n// https://id3.org/Developer%20Information\n\nexport default class ID3v2 {\n  static *getID3v2Header(codecParser, headerCache, readOffset) {\n    const header = { headerLength: 10 };\n\n    let data = yield* codecParser.readRawData(3, readOffset);\n    // Byte (0-2 of 9)\n    // ID3\n    if (data[0] !== 0x49 || data[1] !== 0x44 || data[2] !== 0x33) return null;\n\n    data = yield* codecParser.readRawData(header.headerLength, readOffset);\n\n    // Byte (3-4 of 9)\n    // * `BBBBBBBB|........`: Major version\n    // * `........|BBBBBBBB`: Minor version\n    header.version = `id3v2.${data[3]}.${data[4]}`;\n\n    // Byte (5 of 9)\n    // * `....0000.: Zeros (flags not implemented yet)\n    if (data[5] & 0b00001111) return null;\n\n    // Byte (5 of 9)\n    // * `CDEF0000`: Flags\n    // * `C.......`: Unsynchronisation (indicates whether or not unsynchronisation is used)\n    // * `.D......`: Extended header (indicates whether or not the header is followed by an extended header)\n    // * `..E.....`: Experimental indicator (indicates whether or not the tag is in an experimental stage)\n    // * `...F....`: Footer present (indicates that a footer is present at the very end of the tag)\n    header.unsynchronizationFlag = Boolean(data[5] & 0b10000000);\n    header.extendedHeaderFlag = Boolean(data[5] & 0b01000000);\n    header.experimentalFlag = Boolean(data[5] & 0b00100000);\n    header.footerPresent = Boolean(data[5] & 0b00010000);\n\n    // Byte (6-9 of 9)\n    // * `0.......|0.......|0.......|0.......`: Zeros\n    if (\n      data[6] & 0b10000000 ||\n      data[7] & 0b10000000 ||\n      data[8] & 0b10000000 ||\n      data[9] & 0b10000000\n    )\n      return null;\n\n    // Byte (6-9 of 9)\n    // * `.FFFFFFF|.FFFFFFF|.FFFFFFF|.FFFFFFF`: Tag Length\n    // The ID3v2 tag size is encoded with four bytes where the most significant bit (bit 7)\n    // is set to zero in every byte, making a total of 28 bits. The zeroed bits are ignored,\n    // so a 257 bytes long tag is represented as $00 00 02 01.\n    header.dataLength =\n      (data[6] << 21) | (data[7] << 14) | (data[8] << 7) | data[9];\n\n    header.length = header.headerLength + header.dataLength;\n\n    return new ID3v2(header);\n  }\n\n  constructor(header) {\n    this.version = header.version;\n    this.unsynchronizationFlag = header.unsynchronizationFlag;\n    this.extendedHeaderFlag = header.extendedHeaderFlag;\n    this.experimentalFlag = header.experimentalFlag;\n    this.footerPresent = header.footerPresent;\n    this.length = header.length;\n  }\n}\n","/* Copyright 2020-2021 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport { headerStore } from \"../globals.js\";\n\nexport default class CodecHeader {\n  /**\n   * @private\n   */\n  constructor(header) {\n    headerStore.set(this, header);\n\n    this.bitDepth = header.bitDepth;\n    this.bitrate = null; // set during frame mapping\n    this.channels = header.channels;\n    this.channelMode = header.channelMode;\n    this.sampleRate = header.sampleRate;\n  }\n}\n","/* Copyright 2020-2021 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport {\n  reserved,\n  bad,\n  free,\n  none,\n  sixteenBitCRC,\n  rate44100,\n  rate48000,\n  rate32000,\n  rate22050,\n  rate24000,\n  rate16000,\n  rate11025,\n  rate12000,\n  rate8000,\n  monophonic,\n  stereo,\n} from \"../../constants.js\";\nimport { bytesToString } from \"../../utilities.js\";\n\nimport ID3v2 from \"../../metadata/ID3v2.js\";\nimport CodecHeader from \"../CodecHeader.js\";\n\n// http://www.mp3-tech.org/programmer/frame_header.html\n\nconst bitrateMatrix = {\n  // bits | V1,L1 | V1,L2 | V1,L3 | V2,L1 | V2,L2 & L3\n  0b00000000: [free, free, free, free, free],\n  0b00010000: [32, 32, 32, 32, 8],\n  // 0b00100000: [64,   48,  40,  48,  16,],\n  // 0b00110000: [96,   56,  48,  56,  24,],\n  // 0b01000000: [128,  64,  56,  64,  32,],\n  // 0b01010000: [160,  80,  64,  80,  40,],\n  // 0b01100000: [192,  96,  80,  96,  48,],\n  // 0b01110000: [224, 112,  96, 112,  56,],\n  // 0b10000000: [256, 128, 112, 128,  64,],\n  // 0b10010000: [288, 160, 128, 144,  80,],\n  // 0b10100000: [320, 192, 160, 160,  96,],\n  // 0b10110000: [352, 224, 192, 176, 112,],\n  // 0b11000000: [384, 256, 224, 192, 128,],\n  // 0b11010000: [416, 320, 256, 224, 144,],\n  // 0b11100000: [448, 384, 320, 256, 160,],\n  0b11110000: [bad, bad, bad, bad, bad],\n};\n\nconst calcBitrate = (idx, interval, intervalOffset) =>\n  8 *\n    (((idx + intervalOffset) % interval) + interval) *\n    (1 << ((idx + intervalOffset) / interval)) -\n  8 * interval * ((interval / 8) | 0);\n\n// generate bitrate matrix\nfor (let i = 2; i < 15; i++)\n  bitrateMatrix[i << 4] = [\n    i * 32, //                V1,L1\n    calcBitrate(i, 4, 0), //  V1,L2\n    calcBitrate(i, 4, -1), // V1,L3\n    calcBitrate(i, 8, 4), //  V2,L1\n    calcBitrate(i, 8, 0), //  V2,L2 & L3\n  ];\n\nconst v1Layer1 = 0;\nconst v1Layer2 = 1;\nconst v1Layer3 = 2;\nconst v2Layer1 = 3;\nconst v2Layer23 = 4;\n\nconst bands = \"bands \";\nconst to31 = \" to 31\";\nconst layer12ModeExtensions = {\n  0b00000000: bands + 4 + to31,\n  0b00010000: bands + 8 + to31,\n  0b00100000: bands + 12 + to31,\n  0b00110000: bands + 16 + to31,\n};\n\nconst intensityStereo = \"Intensity stereo \";\nconst msStereo = \", MS stereo \";\nconst on = \"on\";\nconst off = \"off\";\nconst layer3ModeExtensions = {\n  0b00000000: intensityStereo + off + msStereo + off,\n  0b00010000: intensityStereo + on + msStereo + off,\n  0b00100000: intensityStereo + off + msStereo + on,\n  0b00110000: intensityStereo + on + msStereo + on,\n};\n\nconst layer = \"Layer \";\nconst layers = {\n  0b00000000: { description: reserved },\n  0b00000010: {\n    description: \"Layer III\",\n    framePadding: 1,\n    modeExtensions: layer3ModeExtensions,\n    v1: {\n      bitrateIndex: v1Layer3,\n      samples: 1152,\n    },\n    v2: {\n      bitrateIndex: v2Layer23,\n      samples: 576,\n    },\n  },\n  0b00000100: {\n    description: \"Layer II\",\n    framePadding: 1,\n    modeExtensions: layer12ModeExtensions,\n    samples: 1152,\n    v1: {\n      bitrateIndex: v1Layer2,\n    },\n    v2: {\n      bitrateIndex: v2Layer23,\n    },\n  },\n  0b00000110: {\n    description: \"Layer I\",\n    framePadding: 4,\n    modeExtensions: layer12ModeExtensions,\n    samples: 384,\n    v1: {\n      bitrateIndex: v1Layer1,\n    },\n    v2: {\n      bitrateIndex: v2Layer1,\n    },\n  },\n};\n\nconst mpegVersion = \"MPEG Version \";\nconst isoIec = \"ISO/IEC \";\nconst v2 = \"v2\";\nconst v1 = \"v1\";\nconst mpegVersions = {\n  0b00000000: {\n    description: `${mpegVersion}2.5 (later extension of MPEG 2)`,\n    layers: v2,\n    sampleRates: {\n      0b00000000: rate11025,\n      0b00000100: rate12000,\n      0b00001000: rate8000,\n      0b00001100: reserved,\n    },\n  },\n  0b00001000: { description: reserved },\n  0b00010000: {\n    description: `${mpegVersion}2 (${isoIec}13818-3)`,\n    layers: v2,\n    sampleRates: {\n      0b00000000: rate22050,\n      0b00000100: rate24000,\n      0b00001000: rate16000,\n      0b00001100: reserved,\n    },\n  },\n  0b00011000: {\n    description: `${mpegVersion}1 (${isoIec}11172-3)`,\n    layers: v1,\n    sampleRates: {\n      0b00000000: rate44100,\n      0b00000100: rate48000,\n      0b00001000: rate32000,\n      0b00001100: reserved,\n    },\n  },\n};\n\nconst protection = {\n  0b00000000: sixteenBitCRC,\n  0b00000001: none,\n};\n\nconst emphasis = {\n  0b00000000: none,\n  0b00000001: \"50/15 ms\",\n  0b00000010: reserved,\n  0b00000011: \"CCIT J.17\",\n};\n\nconst channelModes = {\n  0b00000000: { channels: 2, description: stereo },\n  0b01000000: { channels: 2, description: \"joint \" + stereo },\n  0b10000000: { channels: 2, description: \"dual channel\" },\n  0b11000000: { channels: 1, description: monophonic },\n};\n\nexport default class MPEGHeader extends CodecHeader {\n  static *getHeader(codecParser, headerCache, readOffset) {\n    const header = {};\n\n    // check for id3 header\n    const id3v2Header = yield* ID3v2.getID3v2Header(\n      codecParser,\n      headerCache,\n      readOffset\n    );\n\n    if (id3v2Header) {\n      // throw away the data. id3 parsing is not implemented yet.\n      yield* codecParser.readRawData(id3v2Header.length, readOffset);\n      codecParser.incrementRawData(id3v2Header.length);\n    }\n\n    // Must be at least four bytes.\n    const data = yield* codecParser.readRawData(4, readOffset);\n\n    // Check header cache\n    const key = bytesToString(data.subarray(0, 4));\n    const cachedHeader = headerCache.getHeader(key);\n    if (cachedHeader) return new MPEGHeader(cachedHeader);\n\n    // Frame sync (all bits must be set): `11111111|111`:\n    if (data[0] !== 0xff || data[1] < 0xe0) return null;\n\n    // Byte (2 of 4)\n    // * `111BBCCD`\n    // * `...BB...`: MPEG Audio version ID\n    // * `.....CC.`: Layer description\n    // * `.......D`: Protection bit (0 - Protected by CRC (16bit CRC follows header), 1 = Not protected)\n\n    // Mpeg version (1, 2, 2.5)\n    const mpegVersion = mpegVersions[data[1] & 0b00011000];\n    if (mpegVersion.description === reserved) return null;\n\n    // Layer (I, II, III)\n    const layerBits = data[1] & 0b00000110;\n    if (layers[layerBits].description === reserved) return null;\n    const layer = {\n      ...layers[layerBits],\n      ...layers[layerBits][mpegVersion.layers],\n    };\n\n    header.mpegVersion = mpegVersion.description;\n    header.layer = layer.description;\n    header.samples = layer.samples;\n    header.protection = protection[data[1] & 0b00000001];\n\n    header.length = 4;\n\n    // Byte (3 of 4)\n    // * `EEEEFFGH`\n    // * `EEEE....`: Bitrate index. 1111 is invalid, everything else is accepted\n    // * `....FF..`: Sample rate\n    // * `......G.`: Padding bit, 0=frame not padded, 1=frame padded\n    // * `.......H`: Private bit.\n    header.bitrate = bitrateMatrix[data[2] & 0b11110000][layer.bitrateIndex];\n    if (header.bitrate === bad) return null;\n\n    header.sampleRate = mpegVersion.sampleRates[data[2] & 0b00001100];\n    if (header.sampleRate === reserved) return null;\n\n    header.framePadding = data[2] & 0b00000010 && layer.framePadding;\n    header.isPrivate = Boolean(data[2] & 0b00000001);\n\n    header.frameLength = Math.floor(\n      (125 * header.bitrate * header.samples) / header.sampleRate +\n        header.framePadding\n    );\n    if (!header.frameLength) return null;\n\n    // Byte (4 of 4)\n    // * `IIJJKLMM`\n    // * `II......`: Channel mode\n    // * `..JJ....`: Mode extension (only if joint stereo)\n    // * `....K...`: Copyright\n    // * `.....L..`: Original\n    // * `......MM`: Emphasis\n    const channelModeBits = data[3] & 0b11000000;\n    header.channelMode = channelModes[channelModeBits].description;\n    header.channels = channelModes[channelModeBits].channels;\n\n    header.modeExtension = layer.modeExtensions[data[3] & 0b00110000];\n    header.isCopyrighted = Boolean(data[3] & 0b00001000);\n    header.isOriginal = Boolean(data[3] & 0b00000100);\n\n    header.emphasis = emphasis[data[3] & 0b00000011];\n    if (header.emphasis === reserved) return null;\n\n    header.bitDepth = 16;\n\n    // set header cache\n    const { length, frameLength, samples, ...codecUpdateFields } = header;\n\n    headerCache.setHeader(key, header, codecUpdateFields);\n    return new MPEGHeader(header);\n  }\n\n  /**\n   * @private\n   * Call MPEGHeader.getHeader(Array<Uint8>) to get instance\n   */\n  constructor(header) {\n    super(header);\n\n    this.bitrate = header.bitrate;\n    this.emphasis = header.emphasis;\n    this.framePadding = header.framePadding;\n    this.isCopyrighted = header.isCopyrighted;\n    this.isOriginal = header.isOriginal;\n    this.isPrivate = header.isPrivate;\n    this.layer = header.layer;\n    this.modeExtension = header.modeExtension;\n    this.mpegVersion = header.mpegVersion;\n    this.protection = header.protection;\n  }\n}\n","/* Copyright 2020-2021 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport CodecFrame from \"../CodecFrame.js\";\nimport MPEGHeader from \"./MPEGHeader.js\";\n\nexport default class MPEGFrame extends CodecFrame {\n  static *getFrame(codecParser, headerCache, readOffset) {\n    return yield* super.getFrame(\n      MPEGHeader,\n      MPEGFrame,\n      codecParser,\n      headerCache,\n      readOffset\n    );\n  }\n\n  constructor(header, frame, samples) {\n    super(header, frame, samples);\n  }\n}\n","/* Copyright 2020-2021 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport Parser from \"../Parser.js\";\nimport MPEGFrame from \"./MPEGFrame.js\";\nimport MPEGHeader from \"./MPEGHeader.js\";\n\nexport default class MPEGParser extends Parser {\n  constructor(codecParser, headerCache, onCodec) {\n    super(codecParser, headerCache);\n    this.Frame = MPEGFrame;\n    this.Header = MPEGHeader;\n\n    onCodec(this.codec);\n  }\n\n  get codec() {\n    return \"mpeg\";\n  }\n\n  *parseFrame() {\n    return yield* this.fixedLengthFrameSync();\n  }\n}\n","/* Copyright 2020-2021 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n/*\nhttps://wiki.multimedia.cx/index.php/ADTS\n\nAAAAAAAA AAAABCCD EEFFFFGH HHIJKLMM MMMMMMMM MMMOOOOO OOOOOOPP (QQQQQQQQ QQQQQQQQ)\n\nAACHeader consists of 7 or 9 bytes (without or with CRC).\nLetter  Length (bits)  Description\nA  12  syncword 0xFFF, all bits must be 1\nB  1   MPEG Version: 0 for MPEG-4, 1 for MPEG-2\nC  2   Layer: always 0\nD  1   protection absent, Warning, set to 1 if there is no CRC and 0 if there is CRC\nE  2   profile, the MPEG-4 Audio Object Type minus 1\nF  4   MPEG-4 Sampling Frequency Index (15 is forbidden)\nG  1   private bit, guaranteed never to be used by MPEG, set to 0 when encoding, ignore when decoding\nH  3   MPEG-4 Channel Configuration (in the case of 0, the channel configuration is sent via an inband PCE)\nI  1   originality, set to 0 when encoding, ignore when decoding\nJ  1   home, set to 0 when encoding, ignore when decoding\nK  1   copyrighted id bit, the next bit of a centrally registered copyright identifier, set to 0 when encoding, ignore when decoding\nL  1   copyright id start, signals that this frame's copyright id bit is the first bit of the copyright id, set to 0 when encoding, ignore when decoding\nM  13  frame length, this value must include 7 or 9 bytes of header length: FrameLength = (ProtectionAbsent == 1 ? 7 : 9) + size(AACFrame)\nO  11  Buffer fullness // 0x7FF for VBR\nP  2   Number of AAC frames (RDBs) in ADTS frame minus 1, for maximum compatibility always use 1 AAC frame per ADTS frame\nQ  16  CRC if protection absent is 0 \n*/\n\nimport { headerStore } from \"../../globals.js\";\nimport { bytesToString } from \"../../utilities.js\";\nimport {\n  reserved,\n  bad,\n  none,\n  sixteenBitCRC,\n  rate96000,\n  rate88200,\n  rate64000,\n  rate48000,\n  rate44100,\n  rate32000,\n  rate24000,\n  rate22050,\n  rate16000,\n  rate12000,\n  rate11025,\n  rate8000,\n  rate7350,\n  channelMappings,\n  getChannelMapping,\n  monophonic,\n  lfe,\n} from \"../../constants.js\";\n\nimport CodecHeader from \"../CodecHeader.js\";\n\nconst mpegVersion = {\n  0b00000000: \"MPEG-4\",\n  0b00001000: \"MPEG-2\",\n};\n\nconst layer = {\n  0b00000000: \"valid\",\n  0b00000010: bad,\n  0b00000100: bad,\n  0b00000110: bad,\n};\n\nconst protection = {\n  0b00000000: sixteenBitCRC,\n  0b00000001: none,\n};\n\nconst profile = {\n  0b00000000: \"AAC Main\",\n  0b01000000: \"AAC LC (Low Complexity)\",\n  0b10000000: \"AAC SSR (Scalable Sample Rate)\",\n  0b11000000: \"AAC LTP (Long Term Prediction)\",\n};\n\nconst sampleRates = {\n  0b00000000: rate96000,\n  0b00000100: rate88200,\n  0b00001000: rate64000,\n  0b00001100: rate48000,\n  0b00010000: rate44100,\n  0b00010100: rate32000,\n  0b00011000: rate24000,\n  0b00011100: rate22050,\n  0b00100000: rate16000,\n  0b00100100: rate12000,\n  0b00101000: rate11025,\n  0b00101100: rate8000,\n  0b00110000: rate7350,\n  0b00110100: reserved,\n  0b00111000: reserved,\n  0b00111100: \"frequency is written explicitly\",\n};\n\n// prettier-ignore\nconst channelMode = {\n  0b000000000: { channels: 0, description: \"Defined in AOT Specific Config\" },\n  /*\n  'monophonic (mono)'\n  'stereo (left, right)'\n  'linear surround (front center, front left, front right)'\n  'quadraphonic (front center, front left, front right, rear center)'\n  '5.0 surround (front center, front left, front right, rear left, rear right)'\n  '5.1 surround (front center, front left, front right, rear left, rear right, LFE)'\n  '7.1 surround (front center, front left, front right, side left, side right, rear left, rear right, LFE)'\n  */\n  0b001000000: { channels: 1, description: monophonic },\n  0b010000000: { channels: 2, description: getChannelMapping(2,channelMappings[0][0]) },\n  0b011000000: { channels: 3, description: getChannelMapping(3,channelMappings[1][3]), },\n  0b100000000: { channels: 4, description: getChannelMapping(4,channelMappings[1][3],channelMappings[3][4]), },\n  0b101000000: { channels: 5, description: getChannelMapping(5,channelMappings[1][3],channelMappings[3][0]), },\n  0b110000000: { channels: 6, description: getChannelMapping(6,channelMappings[1][3],channelMappings[3][0],lfe), },\n  0b111000000: { channels: 8, description: getChannelMapping(8,channelMappings[1][3],channelMappings[2][0],channelMappings[3][0],lfe), },\n};\n\nexport default class AACHeader extends CodecHeader {\n  static *getHeader(codecParser, headerCache, readOffset) {\n    const header = {};\n\n    // Must be at least seven bytes. Out of data\n    const data = yield* codecParser.readRawData(7, readOffset);\n\n    // Check header cache\n    const key = bytesToString([\n      data[0],\n      data[1],\n      data[2],\n      (data[3] & 0b11111100) | (data[6] & 0b00000011), // frame length, buffer fullness varies so don't cache it\n    ]);\n    const cachedHeader = headerCache.getHeader(key);\n\n    if (!cachedHeader) {\n      // Frame sync (all bits must be set): `11111111|1111`:\n      if (data[0] !== 0xff || data[1] < 0xf0) return null;\n\n      // Byte (2 of 7)\n      // * `1111BCCD`\n      // * `....B...`: MPEG Version: 0 for MPEG-4, 1 for MPEG-2\n      // * `.....CC.`: Layer: always 0\n      // * `.......D`: protection absent, Warning, set to 1 if there is no CRC and 0 if there is CRC\n      header.mpegVersion = mpegVersion[data[1] & 0b00001000];\n\n      header.layer = layer[data[1] & 0b00000110];\n      if (header.layer === bad) return null;\n\n      const protectionBit = data[1] & 0b00000001;\n      header.protection = protection[protectionBit];\n      header.length = protectionBit ? 7 : 9;\n\n      // Byte (3 of 7)\n      // * `EEFFFFGH`\n      // * `EE......`: profile, the MPEG-4 Audio Object Type minus 1\n      // * `..FFFF..`: MPEG-4 Sampling Frequency Index (15 is forbidden)\n      // * `......G.`: private bit, guaranteed never to be used by MPEG, set to 0 when encoding, ignore when decoding\n      header.profileBits = data[2] & 0b11000000;\n      header.sampleRateBits = data[2] & 0b00111100;\n      const privateBit = data[2] & 0b00000010;\n\n      header.profile = profile[header.profileBits];\n\n      header.sampleRate = sampleRates[header.sampleRateBits];\n      if (header.sampleRate === reserved) return null;\n\n      header.isPrivate = Boolean(privateBit);\n\n      // Byte (3,4 of 7)\n      // * `.......H|HH......`: MPEG-4 Channel Configuration (in the case of 0, the channel configuration is sent via an inband PCE)\n      header.channelModeBits = ((data[2] << 8) | data[3]) & 0b111000000;\n      header.channelMode = channelMode[header.channelModeBits].description;\n      header.channels = channelMode[header.channelModeBits].channels;\n\n      // Byte (4 of 7)\n      // * `HHIJKLMM`\n      // * `..I.....`: originality, set to 0 when encoding, ignore when decoding\n      // * `...J....`: home, set to 0 when encoding, ignore when decoding\n      // * `....K...`: copyrighted id bit, the next bit of a centrally registered copyright identifier, set to 0 when encoding, ignore when decoding\n      // * `.....L..`: copyright id start, signals that this frame's copyright id bit is the first bit of the copyright id, set to 0 when encoding, ignore when decoding\n      header.isOriginal = Boolean(data[3] & 0b00100000);\n      header.isHome = Boolean(data[3] & 0b00001000);\n      header.copyrightId = Boolean(data[3] & 0b00001000);\n      header.copyrightIdStart = Boolean(data[3] & 0b00000100);\n      header.bitDepth = 16;\n      header.samples = 1024;\n\n      // Byte (7 of 7)\n      // * `......PP` Number of AAC frames (RDBs) in ADTS frame minus 1, for maximum compatibility always use 1 AAC frame per ADTS frame\n      header.numberAACFrames = data[6] & 0b00000011;\n\n      const {\n        length,\n        channelModeBits,\n        profileBits,\n        sampleRateBits,\n        frameLength,\n        samples,\n        numberAACFrames,\n        ...codecUpdateFields\n      } = header;\n      headerCache.setHeader(key, header, codecUpdateFields);\n    } else {\n      Object.assign(header, cachedHeader);\n    }\n\n    // Byte (4,5,6 of 7)\n    // * `.......MM|MMMMMMMM|MMM.....`: frame length, this value must include 7 or 9 bytes of header length: FrameLength = (ProtectionAbsent == 1 ? 7 : 9) + size(AACFrame)\n    header.frameLength =\n      ((data[3] << 11) | (data[4] << 3) | (data[5] >> 5)) & 0x1fff;\n    if (!header.frameLength) return null;\n\n    // Byte (6,7 of 7)\n    // * `...OOOOO|OOOOOO..`: Buffer fullness\n    const bufferFullnessBits = ((data[5] << 6) | (data[6] >> 2)) & 0x7ff;\n    header.bufferFullness =\n      bufferFullnessBits === 0x7ff ? \"VBR\" : bufferFullnessBits;\n\n    return new AACHeader(header);\n  }\n\n  /**\n   * @private\n   * Call AACHeader.getHeader(Array<Uint8>) to get instance\n   */\n  constructor(header) {\n    super(header);\n\n    this.copyrightId = header.copyrightId;\n    this.copyrightIdStart = header.copyrightIdStart;\n    this.bufferFullness = header.bufferFullness;\n    this.isHome = header.isHome;\n    this.isOriginal = header.isOriginal;\n    this.isPrivate = header.isPrivate;\n    this.layer = header.layer;\n    this.length = header.length;\n    this.mpegVersion = header.mpegVersion;\n    this.numberAACFrames = header.numberAACFrames;\n    this.profile = header.profile;\n    this.protection = header.protection;\n  }\n\n  get audioSpecificConfig() {\n    // Audio Specific Configuration\n    // * `000EEFFF|F0HHH000`:\n    // * `000EE...|........`: Object Type (profileBit + 1)\n    // * `.....FFF|F.......`: Sample Rate\n    // * `........|.0HHH...`: Channel Configuration\n    // * `........|.....0..`: Frame Length (1024)\n    // * `........|......0.`: does not depend on core coder\n    // * `........|.......0`: Not Extension\n    const header = headerStore.get(this);\n\n    const audioSpecificConfig =\n      ((header.profileBits + 0x40) << 5) |\n      (header.sampleRateBits << 5) |\n      (header.channelModeBits >> 3);\n\n    const bytes = new Uint8Array(2);\n    new DataView(bytes.buffer).setUint16(0, audioSpecificConfig, false);\n    return bytes;\n  }\n}\n","/* Copyright 2020-2021 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport CodecFrame from \"../CodecFrame.js\";\nimport AACHeader from \"./AACHeader.js\";\n\nexport default class AACFrame extends CodecFrame {\n  static *getFrame(codecParser, headerCache, readOffset) {\n    return yield* super.getFrame(\n      AACHeader,\n      AACFrame,\n      codecParser,\n      headerCache,\n      readOffset\n    );\n  }\n\n  constructor(header, frame, samples) {\n    super(header, frame, samples);\n  }\n}\n","/* Copyright 2020-2021 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport Parser from \"../Parser.js\";\nimport AACFrame from \"./AACFrame.js\";\nimport AACHeader from \"./AACHeader.js\";\n\nexport default class AACParser extends Parser {\n  constructor(codecParser, headerCache, onCodec) {\n    super(codecParser, headerCache);\n    this.Frame = AACFrame;\n    this.Header = AACHeader;\n\n    onCodec(this.codec);\n  }\n\n  get codec() {\n    return \"aac\";\n  }\n\n  *parseFrame() {\n    return yield* this.fixedLengthFrameSync();\n  }\n}\n","/* Copyright 2020-2021 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport { headerStore } from \"../../globals.js\";\nimport { flacCrc16 } from \"../../utilities.js\";\nimport CodecFrame from \"../CodecFrame.js\";\n\nexport default class FLACFrame extends CodecFrame {\n  static getFrameFooterCrc16(data) {\n    return (data[data.length - 2] << 8) + data[data.length - 1];\n  }\n\n  // check frame footer crc\n  // https://xiph.org/flac/format.html#frame_footer\n  static checkFrameFooterCrc16(data) {\n    const expectedCrc16 = FLACFrame.getFrameFooterCrc16(data);\n    const actualCrc16 = flacCrc16(data.subarray(0, -2));\n\n    return expectedCrc16 === actualCrc16;\n  }\n\n  constructor(data, header, streamInfo) {\n    header.streamInfo = streamInfo;\n    header.crc16 = FLACFrame.getFrameFooterCrc16(data);\n\n    super(header, data, headerStore.get(header).samples);\n  }\n}\n","/* Copyright 2020-2021 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n/*\nhttps://xiph.org/flac/format.html\n\nAAAAAAAA AAAAAABC DDDDEEEE FFFFGGGH \n(IIIIIIII...)\n(JJJJJJJJ|JJJJJJJJ)\n(KKKKKKKK|KKKKKKKK)\nLLLLLLLLL\n\nFLAC Frame Header\nLetter  Length (bits)  Description\nA   13  11111111|11111\nB   1   Reserved 0 - mandatory, 1 - reserved\nC   1   Blocking strategy, 0 - fixed, 1 - variable\nD   4   Block size in inter-channel samples\nE   4   Sample rate\nF   4   Channel assignment\nG   3   Sample size in bits\nH   1   Reserved 0 - mandatory, 1 - reserved\nI   ?   if(variable blocksize)\n           <8-56>:\"UTF-8\" coded sample number (decoded number is 36 bits) [4]\n        else\n           <8-48>:\"UTF-8\" coded frame number (decoded number is 31 bits) [4]\nJ   ?   if(blocksize bits == 011x)\n            8/16 bit (blocksize-1)\nK   ?   if(sample rate bits == 11xx)\n            8/16 bit sample rate\nL   8   CRC-8 (polynomial = x^8 + x^2 + x^1 + x^0, initialized with 0) of everything before the crc, including the sync code\n        \n*/\n\nimport {\n  reserved,\n  bad,\n  rate88200,\n  rate176400,\n  rate192000,\n  rate8000,\n  rate16000,\n  rate22050,\n  rate24000,\n  rate32000,\n  rate44100,\n  rate48000,\n  rate96000,\n  channelMappings,\n  getChannelMapping,\n  monophonic,\n  stereo,\n  lfe,\n} from \"../../constants.js\";\nimport { bytesToString, crc8 } from \"../../utilities.js\";\nimport CodecHeader from \"../CodecHeader.js\";\n\nconst getFromStreamInfo = \"get from STREAMINFO metadata block\";\n\nconst blockingStrategy = {\n  0b00000000: \"Fixed\",\n  0b00000001: \"Variable\",\n};\n\nconst blockSize = {\n  0b00000000: reserved,\n  0b00010000: 192,\n  // 0b00100000: 576,\n  // 0b00110000: 1152,\n  // 0b01000000: 2304,\n  // 0b01010000: 4608,\n  // 0b01100000: \"8-bit (blocksize-1) from end of header\",\n  // 0b01110000: \"16-bit (blocksize-1) from end of header\",\n  // 0b10000000: 256,\n  // 0b10010000: 512,\n  // 0b10100000: 1024,\n  // 0b10110000: 2048,\n  // 0b11000000: 4096,\n  // 0b11010000: 8192,\n  // 0b11100000: 16384,\n  // 0b11110000: 32768,\n};\nfor (let i = 2; i < 16; i++)\n  blockSize[i << 4] = i < 6 ? 576 * 2 ** (i - 2) : 2 ** i;\n\nconst sampleRate = {\n  0b00000000: getFromStreamInfo,\n  0b00000001: rate88200,\n  0b00000010: rate176400,\n  0b00000011: rate192000,\n  0b00000100: rate8000,\n  0b00000101: rate16000,\n  0b00000110: rate22050,\n  0b00000111: rate24000,\n  0b00001000: rate32000,\n  0b00001001: rate44100,\n  0b00001010: rate48000,\n  0b00001011: rate96000,\n  // 0b00001100: \"8-bit sample rate (in kHz) from end of header\",\n  // 0b00001101: \"16-bit sample rate (in Hz) from end of header\",\n  // 0b00001110: \"16-bit sample rate (in tens of Hz) from end of header\",\n  0b00001111: bad,\n};\n\n/* prettier-ignore */\nconst channelAssignments = {\n  /*'\n  'monophonic (mono)'\n  'stereo (left, right)'\n  'linear surround (left, right, center)'\n  'quadraphonic (front left, front right, rear left, rear right)'\n  '5.0 surround (front left, front right, front center, rear left, rear right)'\n  '5.1 surround (front left, front right, front center, LFE, rear left, rear right)'\n  '6.1 surround (front left, front right, front center, LFE, rear center, side left, side right)'\n  '7.1 surround (front left, front right, front center, LFE, rear left, rear right, side left, side right)'\n  */\n  0b00000000: {channels: 1, description: monophonic},\n  0b00010000: {channels: 2, description: getChannelMapping(2,channelMappings[0][0])},\n  0b00100000: {channels: 3, description: getChannelMapping(3,channelMappings[0][1])},\n  0b00110000: {channels: 4, description: getChannelMapping(4,channelMappings[1][0],channelMappings[3][0])},\n  0b01000000: {channels: 5, description: getChannelMapping(5,channelMappings[1][1],channelMappings[3][0])},\n  0b01010000: {channels: 6, description: getChannelMapping(6,channelMappings[1][1],lfe,channelMappings[3][0])},\n  0b01100000: {channels: 7, description: getChannelMapping(7,channelMappings[1][1],lfe,channelMappings[3][4],channelMappings[2][0])},\n  0b01110000: {channels: 8, description: getChannelMapping(8,channelMappings[1][1],lfe,channelMappings[3][0],channelMappings[2][0])},\n  0b10000000: {channels: 2, description: `${stereo} (left, diff)`},\n  0b10010000: {channels: 2, description: `${stereo} (diff, right)`},\n  0b10100000: {channels: 2, description: `${stereo} (avg, diff)`},\n  0b10110000: reserved,\n  0b11000000: reserved,\n  0b11010000: reserved,\n  0b11100000: reserved,\n  0b11110000: reserved,\n}\n\nconst bitDepth = {\n  0b00000000: getFromStreamInfo,\n  0b00000010: 8,\n  0b00000100: 12,\n  0b00000110: reserved,\n  0b00001000: 16,\n  0b00001010: 20,\n  0b00001100: 24,\n  0b00001110: reserved,\n};\n\nexport default class FLACHeader extends CodecHeader {\n  // https://datatracker.ietf.org/doc/html/rfc3629#section-3\n  //    Char. number range  |        UTF-8 octet sequence\n  //    (hexadecimal)    |              (binary)\n  // --------------------+---------------------------------------------\n  // 0000 0000-0000 007F | 0xxxxxxx\n  // 0000 0080-0000 07FF | 110xxxxx 10xxxxxx\n  // 0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx\n  // 0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n  static decodeUTF8Int(data) {\n    if (data[0] > 0xfe) {\n      return null; // length byte must have at least one zero as the lsb\n    }\n\n    if (data[0] < 0x80) return { value: data[0], length: 1 };\n\n    // get length by counting the number of msb that are set to 1\n    let length = 1;\n    for (let zeroMask = 0x40; zeroMask & data[0]; zeroMask >>= 1) length++;\n\n    let idx = length - 1,\n      value = 0,\n      shift = 0;\n\n    // sum together the encoded bits in bytes 2 to length\n    // 1110xxxx 10[cccccc] 10[bbbbbb] 10[aaaaaa]\n    //\n    //    value = [cccccc] | [bbbbbb] | [aaaaaa]\n    for (; idx > 0; shift += 6, idx--) {\n      if ((data[idx] & 0xc0) !== 0x80) {\n        return null; // each byte should have leading 10xxxxxx\n      }\n      value |= (data[idx] & 0x3f) << shift; // add the encoded bits\n    }\n\n    // read the final encoded bits in byte 1\n    //     1110[dddd] 10[cccccc] 10[bbbbbb] 10[aaaaaa]\n    //\n    // value = [dddd] | [cccccc] | [bbbbbb] | [aaaaaa]\n    value |= (data[idx] & (0x7f >> length)) << shift;\n\n    return { value, length };\n  }\n\n  static getHeaderFromUint8Array(data, headerCache) {\n    const codecParserStub = {\n      readRawData: function* () {\n        return data;\n      },\n    };\n\n    return FLACHeader.getHeader(codecParserStub, headerCache, 0).next().value;\n  }\n\n  static *getHeader(codecParser, headerCache, readOffset) {\n    // Must be at least 6 bytes.\n    let data = yield* codecParser.readRawData(6, readOffset);\n\n    // Bytes (1-2 of 6)\n    // * `11111111|111110..`: Frame sync\n    // * `........|......0.`: Reserved 0 - mandatory, 1 - reserved\n    if (data[0] !== 0xff || !(data[1] === 0xf8 || data[1] === 0xf9)) {\n      return null;\n    }\n\n    const header = {};\n\n    // Check header cache\n    const key = bytesToString(data.subarray(0, 4));\n    const cachedHeader = headerCache.getHeader(key);\n\n    if (!cachedHeader) {\n      // Byte (2 of 6)\n      // * `.......C`: Blocking strategy, 0 - fixed, 1 - variable\n      header.blockingStrategyBits = data[1] & 0b00000001;\n      header.blockingStrategy = blockingStrategy[header.blockingStrategyBits];\n\n      // Byte (3 of 6)\n      // * `DDDD....`: Block size in inter-channel samples\n      // * `....EEEE`: Sample rate\n      header.blockSizeBits = data[2] & 0b11110000;\n      header.sampleRateBits = data[2] & 0b00001111;\n\n      header.blockSize = blockSize[header.blockSizeBits];\n      if (header.blockSize === reserved) {\n        return null;\n      }\n\n      header.sampleRate = sampleRate[header.sampleRateBits];\n      if (header.sampleRate === bad) {\n        return null;\n      }\n\n      // Byte (4 of 6)\n      // * `FFFF....`: Channel assignment\n      // * `....GGG.`: Sample size in bits\n      // * `.......H`: Reserved 0 - mandatory, 1 - reserved\n      if (data[3] & 0b00000001) {\n        return null;\n      }\n\n      const channelAssignment = channelAssignments[data[3] & 0b11110000];\n      if (channelAssignment === reserved) {\n        return null;\n      }\n\n      header.channels = channelAssignment.channels;\n      header.channelMode = channelAssignment.description;\n\n      header.bitDepth = bitDepth[data[3] & 0b00001110];\n      if (header.bitDepth === reserved) {\n        return null;\n      }\n    } else {\n      Object.assign(header, cachedHeader);\n    }\n\n    // Byte (5...)\n    // * `IIIIIIII|...`: VBR block size ? sample number : frame number\n    header.length = 5;\n\n    // check if there is enough data to parse UTF8\n    data = yield* codecParser.readRawData(header.length + 8, readOffset);\n\n    const decodedUtf8 = FLACHeader.decodeUTF8Int(data.subarray(4));\n    if (!decodedUtf8) {\n      return null;\n    }\n\n    if (header.blockingStrategyBits) {\n      header.sampleNumber = decodedUtf8.value;\n    } else {\n      header.frameNumber = decodedUtf8.value;\n    }\n\n    header.length += decodedUtf8.length;\n\n    // Byte (...)\n    // * `JJJJJJJJ|(JJJJJJJJ)`: Blocksize (8/16bit custom value)\n    if (header.blockSizeBits === 0b01100000) {\n      // 8 bit\n      if (data.length < header.length)\n        data = yield* codecParser.readRawData(header.length, readOffset);\n\n      header.blockSize = data[header.length - 1] + 1;\n      header.length += 1;\n    } else if (header.blockSizeBits === 0b01110000) {\n      // 16 bit\n      if (data.length < header.length)\n        data = yield* codecParser.readRawData(header.length, readOffset);\n\n      header.blockSize =\n        (data[header.length - 1] << 8) + data[header.length] + 1;\n      header.length += 2;\n    }\n\n    header.samples = header.blockSize;\n\n    // Byte (...)\n    // * `KKKKKKKK|(KKKKKKKK)`: Sample rate (8/16bit custom value)\n    if (header.sampleRateBits === 0b00001100) {\n      // 8 bit\n      if (data.length < header.length)\n        data = yield* codecParser.readRawData(header.length, readOffset);\n\n      header.sampleRate = data[header.length - 1] * 1000;\n      header.length += 1;\n    } else if (header.sampleRateBits === 0b00001101) {\n      // 16 bit\n      if (data.length < header.length)\n        data = yield* codecParser.readRawData(header.length, readOffset);\n\n      header.sampleRate = (data[header.length - 1] << 8) + data[header.length];\n      header.length += 2;\n    } else if (header.sampleRateBits === 0b00001110) {\n      // 16 bit\n      if (data.length < header.length)\n        data = yield* codecParser.readRawData(header.length, readOffset);\n\n      header.sampleRate =\n        ((data[header.length - 1] << 8) + data[header.length]) * 10;\n      header.length += 2;\n    }\n\n    // Byte (...)\n    // * `LLLLLLLL`: CRC-8\n    if (data.length < header.length)\n      data = yield* codecParser.readRawData(header.length, readOffset);\n\n    header.crc = data[header.length - 1];\n    if (header.crc !== crc8(data.subarray(0, header.length - 1))) {\n      return null;\n    }\n\n    if (!cachedHeader) {\n      const {\n        blockingStrategyBits,\n        frameNumber,\n        sampleNumber,\n        samples,\n        sampleRateBits,\n        blockSizeBits,\n        crc,\n        length,\n        ...codecUpdateFields\n      } = header;\n      headerCache.setHeader(key, header, codecUpdateFields);\n    }\n    return new FLACHeader(header);\n  }\n\n  /**\n   * @private\n   * Call FLACHeader.getHeader(Array<Uint8>) to get instance\n   */\n  constructor(header) {\n    super(header);\n\n    this.crc16 = null; // set in FLACFrame\n    this.blockingStrategy = header.blockingStrategy;\n    this.blockSize = header.blockSize;\n    this.frameNumber = header.frameNumber;\n    this.sampleNumber = header.sampleNumber;\n    this.streamInfo = null; // set during ogg parsing\n  }\n}\n","/* Copyright 2020-2021 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport { frameStore, headerStore } from \"../../globals.js\";\nimport Parser from \"../Parser.js\";\nimport FLACFrame from \"./FLACFrame.js\";\nimport FLACHeader from \"./FLACHeader.js\";\n\nconst MIN_FLAC_FRAME_SIZE = 2;\nconst MAX_FLAC_FRAME_SIZE = 512 * 1024;\n\nexport default class FLACParser extends Parser {\n  constructor(codecParser, onCodecUpdate) {\n    super(codecParser, onCodecUpdate);\n    this.Frame = FLACFrame;\n    this.Header = FLACHeader;\n  }\n\n  get codec() {\n    return \"flac\";\n  }\n\n  *_getNextFrameSyncOffset(offset) {\n    const data = yield* this._codecParser.readRawData(2, 0);\n    const dataLength = data.length - 2;\n\n    while (offset < dataLength) {\n      // * `11111111|111110..`: Frame sync\n      // * `........|......0.`: Reserved 0 - mandatory, 1 - reserved\n      const firstByte = data[offset];\n      if (firstByte === 0xff) {\n        const secondByte = data[offset + 1];\n        if (secondByte === 0xf8 || secondByte === 0xf9) break;\n        if (secondByte !== 0xff) offset++; // might as well check for the next sync byte\n      }\n      offset++;\n    }\n\n    return offset;\n  }\n\n  *parseFrame() {\n    // find the first valid frame header\n    do {\n      const header = yield* FLACHeader.getHeader(\n        this._codecParser,\n        this._headerCache,\n        0\n      );\n\n      if (header) {\n        // found a valid frame header\n        // find the next valid frame header\n        let nextHeaderOffset =\n          headerStore.get(header).length + MIN_FLAC_FRAME_SIZE;\n\n        while (nextHeaderOffset <= MAX_FLAC_FRAME_SIZE) {\n          if (\n            this._codecParser._flushing ||\n            (yield* FLACHeader.getHeader(\n              this._codecParser,\n              this._headerCache,\n              nextHeaderOffset\n            ))\n          ) {\n            // found a valid next frame header\n            let frameData = yield* this._codecParser.readRawData(\n              nextHeaderOffset\n            );\n\n            if (!this._codecParser._flushing)\n              frameData = frameData.subarray(0, nextHeaderOffset);\n\n            // check that this is actually the next header by validating the frame footer crc16\n            if (FLACFrame.checkFrameFooterCrc16(frameData)) {\n              // both frame headers, and frame footer crc16 are valid, we are synced (odds are pretty low of a false positive)\n              const frame = new FLACFrame(frameData, header);\n\n              this._headerCache.enable(); // start caching when synced\n              this._codecParser.incrementRawData(nextHeaderOffset); // increment to the next frame\n              this._codecParser.mapFrameStats(frame);\n\n              return frame;\n            }\n          }\n\n          nextHeaderOffset = yield* this._getNextFrameSyncOffset(\n            nextHeaderOffset + 1\n          );\n        }\n\n        this._codecParser.logWarning(\n          `Unable to sync FLAC frame after searching ${nextHeaderOffset} bytes.`\n        );\n        this._codecParser.incrementRawData(nextHeaderOffset);\n      } else {\n        // not synced, increment data to continue syncing\n        this._codecParser.incrementRawData(\n          yield* this._getNextFrameSyncOffset(1)\n        );\n      }\n    } while (true);\n  }\n\n  parseOggPage(oggPage) {\n    if (oggPage.pageSequenceNumber === 0) {\n      // Identification header\n\n      this._headerCache.enable();\n      this._streamInfo = oggPage.data.subarray(13);\n    } else if (oggPage.pageSequenceNumber === 1) {\n      // Vorbis comments\n    } else {\n      oggPage.codecFrames = frameStore\n        .get(oggPage)\n        .segments.map((segment) => {\n          const header = FLACHeader.getHeaderFromUint8Array(\n            segment,\n            this._headerCache\n          );\n\n          if (header) {\n            return new FLACFrame(segment, header, this._streamInfo);\n          } else {\n            this._codecParser.logWarning(\n              \"Failed to parse Ogg FLAC frame\",\n              \"Skipping invalid FLAC frame\"\n            );\n          }\n        })\n        .filter((frame) => Boolean(frame));\n    }\n\n    return oggPage;\n  }\n}\n","/* Copyright 2020-2021 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n/*\nhttps://xiph.org/ogg/doc/framing.html\n\nAAAAAAAA AAAAAAAA AAAAAAAA AAAAAAAA BBBBBBBB 00000CDE\n\n(LSB)                                                             (MSB)\nFFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF\nGGGGGGGG GGGGGGGG GGGGGGGG GGGGGGGG\nHHHHHHHH HHHHHHHH HHHHHHHH HHHHHHHH\nIIIIIIII IIIIIIII IIIIIIII IIIIIIII\n\nJJJJJJJJ\nLLLLLLLL...\n\nOgg Page Header\nLetter  Length (bits)  Description\nA   32  0x4f676753, \"OggS\"\nB   8   stream_structure_version\nC   1   (0 no, 1 yes) last page of logical bitstream (eos)\nD   1   (0 no, 1 yes) first page of logical bitstream (bos)\nE   1   (0 no, 1 yes) continued packet\n\nF   64  absolute granule position\nG   32  stream serial number\nH   32  page sequence no\nI   32  page checksum\nJ   8   Number of page segments in the segment table\nL   n   Segment table (n=page_segments+26).\n        Segment table values sum to the total length of the packet.\n        Last value is always < 0xFF. Last lacing value will be 0x00 if evenly divisible by 0xFF.\n        \n*/\n\nimport { headerStore } from \"../../globals.js\";\n\nexport default class OggPageHeader {\n  static *getHeader(codecParser, headerCache, readOffset) {\n    const header = {};\n\n    // Must be at least 28 bytes.\n    let data = yield* codecParser.readRawData(28, readOffset);\n\n    // Bytes (1-4 of 28)\n    // Frame sync (must equal OggS): `AAAAAAAA|AAAAAAAA|AAAAAAAA|AAAAAAAA`:\n    if (\n      data[0] !== 0x4f || // O\n      data[1] !== 0x67 || // g\n      data[2] !== 0x67 || // g\n      data[3] !== 0x53 //    S\n    ) {\n      return null;\n    }\n\n    // Byte (5 of 28)\n    // * `BBBBBBBB`: stream_structure_version\n    header.streamStructureVersion = data[4];\n\n    // Byte (6 of 28)\n    // * `00000CDE`\n    // * `00000...`: All zeros\n    // * `.....C..`: (0 no, 1 yes) last page of logical bitstream (eos)\n    // * `......D.`: (0 no, 1 yes) first page of logical bitstream (bos)\n    // * `.......E`: (0 no, 1 yes) continued packet\n    const zeros = data[5] & 0b11111000;\n    if (zeros) return null;\n\n    header.isLastPage = Boolean(data[5] & 0b00000100);\n    header.isFirstPage = Boolean(data[5] & 0b00000010);\n    header.isContinuedPacket = Boolean(data[5] & 0b00000001);\n\n    const view = new DataView(Uint8Array.from(data.subarray(0, 28)).buffer);\n\n    // Byte (7-14 of 28)\n    // * `FFFFFFFF|FFFFFFFF|FFFFFFFF|FFFFFFFF|FFFFFFFF|FFFFFFFF|FFFFFFFF|FFFFFFFF`\n    // * Absolute Granule Position\n\n    /**\n     * @todo Safari does not support getBigInt64, but it also doesn't support Ogg\n     */\n    try {\n      header.absoluteGranulePosition = view.getBigInt64(6, true);\n    } catch {}\n\n    // Byte (15-18 of 28)\n    // * `GGGGGGGG|GGGGGGGG|GGGGGGGG|GGGGGGGG`\n    // * Stream Serial Number\n    header.streamSerialNumber = view.getInt32(14, true);\n\n    // Byte (19-22 of 28)\n    // * `HHHHHHHH|HHHHHHHH|HHHHHHHH|HHHHHHHH`\n    // * Page Sequence Number\n    header.pageSequenceNumber = view.getInt32(18, true);\n\n    // Byte (23-26 of 28)\n    // * `IIIIIIII|IIIIIIII|IIIIIIII|IIIIIIII`\n    // * Page Checksum\n    header.pageChecksum = view.getInt32(22, true);\n\n    // Byte (27 of 28)\n    // * `JJJJJJJJ`: Number of page segments in the segment table\n    const pageSegmentTableLength = data[26];\n    header.length = pageSegmentTableLength + 27;\n\n    data = yield* codecParser.readRawData(header.length, readOffset); // read in the page segment table\n\n    header.frameLength = 0;\n    header.pageSegmentTable = [];\n    header.pageSegmentBytes = Uint8Array.from(data.subarray(27, header.length));\n\n    for (let i = 0, segmentLength = 0; i < pageSegmentTableLength; i++) {\n      const segmentByte = header.pageSegmentBytes[i];\n\n      header.frameLength += segmentByte;\n      segmentLength += segmentByte;\n\n      if (segmentByte !== 0xff || i === pageSegmentTableLength - 1) {\n        header.pageSegmentTable.push(segmentLength);\n        segmentLength = 0;\n      }\n    }\n\n    return new OggPageHeader(header);\n  }\n\n  /**\n   * @private\n   * Call OggPageHeader.getHeader(Array<Uint8>) to get instance\n   */\n  constructor(header) {\n    headerStore.set(this, header);\n\n    this.absoluteGranulePosition = header.absoluteGranulePosition;\n    this.isContinuedPacket = header.isContinuedPacket;\n    this.isFirstPage = header.isFirstPage;\n    this.isLastPage = header.isLastPage;\n    this.pageSegmentTable = header.pageSegmentTable;\n    this.pageSequenceNumber = header.pageSequenceNumber;\n    this.pageChecksum = header.pageChecksum;\n    this.streamSerialNumber = header.streamSerialNumber;\n  }\n}\n","/* Copyright 2020-2021 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport { headerStore, frameStore } from \"../../globals.js\";\nimport Frame from \"../Frame.js\";\nimport OggPageHeader from \"./OggPageHeader.js\";\n\nexport default class OggPage extends Frame {\n  static *getFrame(codecParser, headerCache, readOffset) {\n    const header = yield* OggPageHeader.getHeader(\n      codecParser,\n      headerCache,\n      readOffset\n    );\n\n    if (header) {\n      const frameLength = headerStore.get(header).frameLength;\n      const headerLength = headerStore.get(header).length;\n      const totalLength = headerLength + frameLength;\n\n      const rawData = (yield* codecParser.readRawData(totalLength, 0)).subarray(\n        0,\n        totalLength\n      );\n\n      const frame = rawData.subarray(headerLength, totalLength);\n\n      return new OggPage(header, frame, rawData);\n    } else {\n      return null;\n    }\n  }\n\n  constructor(header, frame, rawData) {\n    super(header, frame);\n\n    frameStore.get(this).length = rawData.length;\n\n    this.codecFrames = [];\n    this.rawData = rawData;\n    this.absoluteGranulePosition = header.absoluteGranulePosition;\n    this.crc32 = header.pageChecksum;\n    this.duration = 0;\n    this.isContinuedPacket = header.isContinuedPacket;\n    this.isFirstPage = header.isFirstPage;\n    this.isLastPage = header.isLastPage;\n    this.pageSequenceNumber = header.pageSequenceNumber;\n    this.samples = 0;\n    this.streamSerialNumber = header.streamSerialNumber;\n  }\n}\n","/* Copyright 2020-2021 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport CodecFrame from \"../CodecFrame.js\";\n\nexport default class OpusFrame extends CodecFrame {\n  constructor(data, header) {\n    super(\n      header,\n      data,\n      ((header.frameSize * header.frameCount) / 1000) * header.sampleRate\n    );\n  }\n}\n","/* Copyright 2020-2021 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n/*\nhttps://tools.ietf.org/html/rfc7845.html\n 0                   1                   2                   3\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|      'O'      |      'p'      |      'u'      |      's'      |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|      'H'      |      'e'      |      'a'      |      'd'      |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|  Version = 1  | Channel Count |           Pre-skip            |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                     Input Sample Rate (Hz)                    |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|   Output Gain (Q7.8 in dB)    | Mapping Family|               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+               :\n|                                                               |\n:               Optional Channel Mapping Table...               :\n|                                                               |\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\nLetter  Length (bits)  Description\nA  64  Magic Signature - OpusHead\nB  8   Version number - 00000001\nC  8   Output channel count (unsigned)\nD  16  Pre-skip (unsigned, little endian)\nE  32  Sample rate (unsigned, little endian)\nF  16  Output Gain (signed, little endian)\nG  8   Channel Mapping family (unsigned)\n\n// if(channel mapping !== 0)\nH  8   Stream count (unsigned)\nI  8   Coupled Stream Count (unsigned)\nJ  8*C Channel Mapping\n*/\n\nimport { rate48000, vorbisOpusChannelMapping } from \"../../constants.js\";\nimport { bytesToString } from \"../../utilities.js\";\n\nimport CodecHeader from \"../CodecHeader.js\";\n\n/* prettier-ignore */\nconst channelMappingFamilies = {\n  0b00000000: vorbisOpusChannelMapping.slice(0,2),\n    /*\n    0: \"monophonic (mono)\"\n    1: \"stereo (left, right)\"\n    */\n  0b00000001: vorbisOpusChannelMapping\n    /*\n    0: \"monophonic (mono)\"\n    1: \"stereo (left, right)\"\n    2: \"linear surround (left, center, right)\"\n    3: \"quadraphonic (front left, front right, rear left, rear right)\"\n    4: \"5.0 surround (front left, front center, front right, rear left, rear right)\"\n    5: \"5.1 surround (front left, front center, front right, rear left, rear right, LFE)\"\n    6: \"6.1 surround (front left, front center, front right, side left, side right, rear center, LFE)\"\n    7: \"7.1 surround (front left, front center, front right, side left, side right, rear left, rear right, LFE)\"\n    */\n  // additional channel mappings are user defined\n};\n\nconst silkOnly = \"SILK-only\";\nconst celtOnly = \"CELT-only\";\nconst hybrid = \"Hybrid\";\n\nconst narrowBand = \"narrowband\";\nconst mediumBand = \"medium-band\";\nconst wideBand = \"wideband\";\nconst superWideBand = \"super-wideband\";\nconst fullBand = \"fullband\";\n\n//  0 1 2 3 4 5 6 7\n// +-+-+-+-+-+-+-+-+\n// | config  |s| c |\n// +-+-+-+-+-+-+-+-+\nconst configTable = {\n  0b00000000: { mode: silkOnly, bandwidth: narrowBand, frameSize: 10 },\n  0b00001000: { mode: silkOnly, bandwidth: narrowBand, frameSize: 20 },\n  0b00010000: { mode: silkOnly, bandwidth: narrowBand, frameSize: 40 },\n  0b00011000: { mode: silkOnly, bandwidth: narrowBand, frameSize: 60 },\n  0b00100000: { mode: silkOnly, bandwidth: mediumBand, frameSize: 10 },\n  0b00101000: { mode: silkOnly, bandwidth: mediumBand, frameSize: 20 },\n  0b00110000: { mode: silkOnly, bandwidth: mediumBand, frameSize: 40 },\n  0b00111000: { mode: silkOnly, bandwidth: mediumBand, frameSize: 60 },\n  0b01000000: { mode: silkOnly, bandwidth: wideBand, frameSize: 10 },\n  0b01001000: { mode: silkOnly, bandwidth: wideBand, frameSize: 20 },\n  0b01010000: { mode: silkOnly, bandwidth: wideBand, frameSize: 40 },\n  0b01011000: { mode: silkOnly, bandwidth: wideBand, frameSize: 60 },\n  0b01100000: { mode: hybrid, bandwidth: superWideBand, frameSize: 10 },\n  0b01101000: { mode: hybrid, bandwidth: superWideBand, frameSize: 20 },\n  0b01110000: { mode: hybrid, bandwidth: fullBand, frameSize: 10 },\n  0b01111000: { mode: hybrid, bandwidth: fullBand, frameSize: 20 },\n  0b10000000: { mode: celtOnly, bandwidth: narrowBand, frameSize: 2.5 },\n  0b10001000: { mode: celtOnly, bandwidth: narrowBand, frameSize: 5 },\n  0b10010000: { mode: celtOnly, bandwidth: narrowBand, frameSize: 10 },\n  0b10011000: { mode: celtOnly, bandwidth: narrowBand, frameSize: 20 },\n  0b10100000: { mode: celtOnly, bandwidth: wideBand, frameSize: 2.5 },\n  0b10101000: { mode: celtOnly, bandwidth: wideBand, frameSize: 5 },\n  0b10110000: { mode: celtOnly, bandwidth: wideBand, frameSize: 10 },\n  0b10111000: { mode: celtOnly, bandwidth: wideBand, frameSize: 20 },\n  0b11000000: { mode: celtOnly, bandwidth: superWideBand, frameSize: 2.5 },\n  0b11001000: { mode: celtOnly, bandwidth: superWideBand, frameSize: 5 },\n  0b11010000: { mode: celtOnly, bandwidth: superWideBand, frameSize: 10 },\n  0b11011000: { mode: celtOnly, bandwidth: superWideBand, frameSize: 20 },\n  0b11100000: { mode: celtOnly, bandwidth: fullBand, frameSize: 2.5 },\n  0b11101000: { mode: celtOnly, bandwidth: fullBand, frameSize: 5 },\n  0b11110000: { mode: celtOnly, bandwidth: fullBand, frameSize: 10 },\n  0b11111000: { mode: celtOnly, bandwidth: fullBand, frameSize: 20 },\n};\n\nexport default class OpusHeader extends CodecHeader {\n  static getHeaderFromUint8Array(data, packetData, headerCache) {\n    const header = {};\n\n    // get length of header\n    // Byte (10 of 19)\n    // * `CCCCCCCC`: Channel Count\n    header.channels = data[9];\n    // Byte (19 of 19)\n    // * `GGGGGGGG`: Channel Mapping Family\n    header.channelMappingFamily = data[18];\n\n    header.length =\n      header.channelMappingFamily !== 0 ? 21 + header.channels : 19;\n\n    if (data.length < header.length)\n      throw new Error(\"Out of data while inside an Ogg Page\");\n\n    // Page Segment Bytes (1-2)\n    // * `AAAAA...`: Packet config\n    // * `.....B..`:\n    // * `......CC`: Packet code\n    const packetMode = packetData[0] & 0b00000011;\n    const packetLength = packetMode === 3 ? 2 : 1;\n\n    // Check header cache\n    const key =\n      bytesToString(data.subarray(0, header.length)) +\n      bytesToString(packetData.subarray(0, packetLength));\n    const cachedHeader = headerCache.getHeader(key);\n\n    if (cachedHeader) return new OpusHeader(cachedHeader);\n\n    // Bytes (1-8 of 19): OpusHead - Magic Signature\n    if (key.substr(0, 8) !== \"OpusHead\") {\n      return null;\n    }\n\n    // Byte (9 of 19)\n    // * `00000001`: Version number\n    if (data[8] !== 1) return null;\n\n    header.data = Uint8Array.from(data.subarray(0, header.length));\n\n    const view = new DataView(header.data.buffer);\n\n    header.bitDepth = 16;\n\n    // Byte (10 of 19)\n    // * `CCCCCCCC`: Channel Count\n    // set earlier to determine length\n\n    // Byte (11-12 of 19)\n    // * `DDDDDDDD|DDDDDDDD`: Pre skip\n    header.preSkip = view.getUint16(10, true);\n\n    // Byte (13-16 of 19)\n    // * `EEEEEEEE|EEEEEEEE|EEEEEEEE|EEEEEEEE`: Sample Rate\n    header.inputSampleRate = view.getUint32(12, true);\n    // Opus is always decoded at 48kHz\n    header.sampleRate = rate48000;\n\n    // Byte (17-18 of 19)\n    // * `FFFFFFFF|FFFFFFFF`: Output Gain\n    header.outputGain = view.getInt16(16, true);\n\n    // Byte (19 of 19)\n    // * `GGGGGGGG`: Channel Mapping Family\n    // set earlier to determine length\n    if (header.channelMappingFamily in channelMappingFamilies) {\n      header.channelMode =\n        channelMappingFamilies[header.channelMappingFamily][\n          header.channels - 1\n        ];\n      if (!header.channelMode) return null;\n    }\n\n    if (header.channelMappingFamily !== 0) {\n      // * `HHHHHHHH`: Stream count\n      header.streamCount = data[19];\n\n      // * `IIIIIIII`: Coupled Stream count\n      header.coupledStreamCount = data[20];\n\n      // * `JJJJJJJJ|...` Channel Mapping table\n      header.channelMappingTable = [...data.subarray(21, header.channels + 21)];\n    }\n\n    const packetConfig = configTable[0b11111000 & packetData[0]];\n    header.mode = packetConfig.mode;\n    header.bandwidth = packetConfig.bandwidth;\n    header.frameSize = packetConfig.frameSize;\n\n    // https://tools.ietf.org/html/rfc6716#appendix-B\n    switch (packetMode) {\n      case 0:\n        // 0: 1 frame in the packet\n        header.frameCount = 1;\n        break;\n      case 1:\n      // 1: 2 frames in the packet, each with equal compressed size\n      case 2:\n        // 2: 2 frames in the packet, with different compressed sizes\n        header.frameCount = 2;\n        break;\n      case 3:\n        // 3: an arbitrary number of frames in the packet\n        header.isVbr = Boolean(0b10000000 & packetData[1]);\n        header.hasOpusPadding = Boolean(0b01000000 & packetData[1]);\n        header.frameCount = 0b00111111 & packetData[1];\n        break;\n      default:\n        return null;\n    }\n\n    // set header cache\n    const {\n      length,\n      data: headerData,\n      channelMappingFamily,\n      ...codecUpdateFields\n    } = header;\n\n    headerCache.setHeader(key, header, codecUpdateFields);\n\n    return new OpusHeader(header);\n  }\n\n  /**\n   * @private\n   * Call OpusHeader.getHeader(Array<Uint8>) to get instance\n   */\n  constructor(header) {\n    super(header);\n\n    this.data = header.data;\n    this.bandwidth = header.bandwidth;\n    this.channelMappingFamily = header.channelMappingFamily;\n    this.channelMappingTable = header.channelMappingTable;\n    this.coupledStreamCount = header.coupledStreamCount;\n    this.frameCount = header.frameCount;\n    this.frameSize = header.frameSize;\n    this.hasOpusPadding = header.hasOpusPadding;\n    this.inputSampleRate = header.inputSampleRate;\n    this.isVbr = header.isVbr;\n    this.mode = header.mode;\n    this.outputGain = header.outputGain;\n    this.preSkip = header.preSkip;\n    this.streamCount = header.streamCount;\n  }\n}\n","/* Copyright 2020-2021 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport { frameStore } from \"../../globals.js\";\nimport Parser from \"../Parser.js\";\nimport OpusFrame from \"./OpusFrame.js\";\nimport OpusHeader from \"./OpusHeader.js\";\n\nexport default class OpusParser extends Parser {\n  constructor(codecParser, headerCache) {\n    super(codecParser, headerCache);\n    this.Frame = OpusFrame;\n    this.Header = OpusHeader;\n\n    this._identificationHeader = null;\n  }\n\n  get codec() {\n    return \"opus\";\n  }\n\n  /**\n   * @todo implement continued page support\n   */\n  parseOggPage(oggPage) {\n    if (oggPage.pageSequenceNumber === 0) {\n      // Identification header\n\n      this._headerCache.enable();\n      this._identificationHeader = oggPage.data;\n    } else if (oggPage.pageSequenceNumber === 1) {\n      // OpusTags\n    } else {\n      oggPage.codecFrames = frameStore.get(oggPage).segments.map((segment) => {\n        const header = OpusHeader.getHeaderFromUint8Array(\n          this._identificationHeader,\n          segment,\n          this._headerCache\n        );\n\n        if (header) return new OpusFrame(segment, header);\n\n        this._codecParser.logError(\n          \"Failed to parse Ogg Opus Header\",\n          \"Not a valid Ogg Opus file\"\n        );\n      });\n    }\n\n    return oggPage;\n  }\n}\n","/* Copyright 2020-2021 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport CodecFrame from \"../CodecFrame.js\";\n\nexport default class VorbisFrame extends CodecFrame {\n  constructor(data, header, samples) {\n    super(header, data, samples);\n  }\n}\n","/* Copyright 2020-2021 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\n/*\n\n1  1) [packet_type] : 8 bit value\n2  2) 0x76, 0x6f, 0x72, 0x62, 0x69, 0x73: the characters ’v’,’o’,’r’,’b’,’i’,’s’ as six octets\n\nLetter bits Description\nA      8    Packet type\nB      48   Magic signature (vorbis)\nC      32   Version number\nD      8    Channels\nE      32   Sample rate\nF      32   Bitrate Maximum (signed)\nG      32   Bitrate Nominal (signed)\nH      32   Bitrate Minimum (signed)\nI      4    blocksize 1\nJ      4    blocksize 0\nK      1    Framing flag\n*/\n\nimport { vorbisOpusChannelMapping } from \"../../constants.js\";\nimport { bytesToString } from \"../../utilities.js\";\n\nimport CodecHeader from \"../CodecHeader.js\";\n\nconst blockSizes = {\n  // 0b0110: 64,\n  // 0b0111: 128,\n  // 0b1000: 256,\n  // 0b1001: 512,\n  // 0b1010: 1024,\n  // 0b1011: 2048,\n  // 0b1100: 4096,\n  // 0b1101: 8192\n};\nfor (let i = 0; i < 8; i++) blockSizes[i + 6] = 2 ** (6 + i);\n\nexport default class VorbisHeader extends CodecHeader {\n  static getHeaderFromUint8Array(data, headerCache) {\n    // Must be at least 30 bytes.\n    if (data.length < 30)\n      throw new Error(\"Out of data while inside an Ogg Page\");\n\n    // Check header cache\n    const key = bytesToString(data.subarray(0, 30));\n    const cachedHeader = headerCache.getHeader(key);\n    if (cachedHeader) return new VorbisHeader(cachedHeader);\n\n    const header = { length: 30 };\n\n    // Bytes (1-7 of 30): /01vorbis - Magic Signature\n    if (key.substr(0, 7) !== \"\\x01vorbis\") {\n      return null;\n    }\n\n    header.data = Uint8Array.from(data.subarray(0, 30));\n    const view = new DataView(header.data.buffer);\n\n    // Byte (8-11 of 30)\n    // * `CCCCCCCC|CCCCCCCC|CCCCCCCC|CCCCCCCC`: Version number\n    header.version = view.getUint32(7, true);\n    if (header.version !== 0) return null;\n\n    // Byte (12 of 30)\n    // * `DDDDDDDD`: Channel Count\n    header.channels = data[11];\n    header.channelMode =\n      vorbisOpusChannelMapping[header.channels - 1] || \"application defined\";\n\n    // Byte (13-16 of 30)\n    // * `EEEEEEEE|EEEEEEEE|EEEEEEEE|EEEEEEEE`: Sample Rate\n    header.sampleRate = view.getUint32(12, true);\n\n    // Byte (17-20 of 30)\n    // * `FFFFFFFF|FFFFFFFF|FFFFFFFF|FFFFFFFF`: Bitrate Maximum\n    header.bitrateMaximum = view.getInt32(16, true);\n\n    // Byte (21-24 of 30)\n    // * `GGGGGGGG|GGGGGGGG|GGGGGGGG|GGGGGGGG`: Bitrate Nominal\n    header.bitrateNominal = view.getInt32(20, true);\n\n    // Byte (25-28 of 30)\n    // * `HHHHHHHH|HHHHHHHH|HHHHHHHH|HHHHHHHH`: Bitrate Minimum\n    header.bitrateMinimum = view.getInt32(24, true);\n\n    // Byte (29 of 30)\n    // * `IIII....` Blocksize 1\n    // * `....JJJJ` Blocksize 0\n    header.blocksize1 = blockSizes[(data[28] & 0b11110000) >> 4];\n    header.blocksize0 = blockSizes[data[28] & 0b00001111];\n    if (header.blocksize0 > header.blocksize1) return null;\n\n    // Byte (29 of 30)\n    // * `00000001` Framing bit\n    if (data[29] !== 0x01) return null;\n\n    header.bitDepth = 32;\n\n    {\n      // set header cache\n      const { length, data, version, ...codecUpdateFields } = header;\n      headerCache.setHeader(key, header, codecUpdateFields);\n    }\n\n    return new VorbisHeader(header);\n  }\n\n  /**\n   * @private\n   * Call VorbisHeader.getHeader(Array<Uint8>) to get instance\n   */\n  constructor(header) {\n    super(header);\n\n    this.bitrateMaximum = header.bitrateMaximum;\n    this.bitrateMinimum = header.bitrateMinimum;\n    this.bitrateNominal = header.bitrateNominal;\n    this.blocksize0 = header.blocksize0;\n    this.blocksize1 = header.blocksize1;\n    this.data = header.data;\n    this.vorbisComments = null; // set during ogg parsing\n    this.vorbisSetup = null; // set during ogg parsing\n  }\n}\n","/* Copyright 2020-2021 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport { frameStore } from \"../../globals.js\";\nimport { BitReader, reverse } from \"../../utilities.js\";\nimport Parser from \"../Parser.js\";\nimport VorbisFrame from \"./VorbisFrame.js\";\nimport VorbisHeader from \"./VorbisHeader.js\";\n\nexport default class VorbisParser extends Parser {\n  constructor(codecParser, headerCache) {\n    super(codecParser, headerCache);\n    this.Frame = VorbisFrame;\n\n    this._identificationHeader = null;\n\n    this._mode = {\n      count: 0,\n    };\n    this._prevBlockSize = 0;\n    this._currBlockSize = 0;\n  }\n\n  get codec() {\n    return \"vorbis\";\n  }\n\n  parseOggPage(oggPage) {\n    const oggPageSegments = frameStore.get(oggPage).segments;\n\n    if (oggPage.pageSequenceNumber === 0) {\n      // Identification header\n\n      this._headerCache.enable();\n      this._identificationHeader = oggPage.data;\n    } else if (oggPage.pageSequenceNumber === 1) {\n      // gather WEBM CodecPrivate data\n      if (oggPageSegments[1]) {\n        this._vorbisComments = oggPageSegments[0];\n        this._vorbisSetup = oggPageSegments[1];\n\n        this._mode = this._parseSetupHeader(oggPageSegments[1]);\n      }\n    } else {\n      oggPage.codecFrames = oggPageSegments.map((segment) => {\n        const header = VorbisHeader.getHeaderFromUint8Array(\n          this._identificationHeader,\n          this._headerCache\n        );\n\n        if (header) {\n          header.vorbisComments = this._vorbisComments;\n          header.vorbisSetup = this._vorbisSetup;\n\n          return new VorbisFrame(\n            segment,\n            header,\n            this._getSamples(segment, header)\n          );\n        }\n\n        this._codecParser.logError(\n          \"Failed to parse Ogg Vorbis Header\",\n          \"Not a valid Ogg Vorbis file\"\n        );\n      });\n    }\n\n    return oggPage;\n  }\n\n  _getSamples(segment, header) {\n    const byte = segment[0] >> 1;\n\n    const blockFlag = this._mode[byte & this._mode.mask];\n\n    // is this a large window\n    if (blockFlag) {\n      this._prevBlockSize =\n        byte & this._mode.prevMask ? header.blocksize1 : header.blocksize0;\n    }\n\n    this._currBlockSize = blockFlag ? header.blocksize1 : header.blocksize0;\n\n    const samples = (this._prevBlockSize + this._currBlockSize) >> 2;\n    this._prevBlockSize = this._currBlockSize;\n\n    return samples;\n  }\n\n  // https://gitlab.xiph.org/xiph/liboggz/-/blob/master/src/liboggz/oggz_auto.c\n  // https://github.com/FFmpeg/FFmpeg/blob/master/libavcodec/vorbis_parser.c\n  /*\n   * This is the format of the mode data at the end of the packet for all\n   * Vorbis Version 1 :\n   *\n   * [ 6:number_of_modes ]\n   * [ 1:size | 16:window_type(0) | 16:transform_type(0) | 8:mapping ]\n   * [ 1:size | 16:window_type(0) | 16:transform_type(0) | 8:mapping ]\n   * [ 1:size | 16:window_type(0) | 16:transform_type(0) | 8:mapping ]\n   * [ 1:framing(1) ]\n   *\n   * e.g.:\n   *\n   * MsB         LsB\n   *              <-\n   * 0 0 0 0 0 1 0 0\n   * 0 0 1 0 0 0 0 0\n   * 0 0 1 0 0 0 0 0\n   * 0 0 1|0 0 0 0 0\n   * 0 0 0 0|0|0 0 0\n   * 0 0 0 0 0 0 0 0\n   * 0 0 0 0|0 0 0 0\n   * 0 0 0 0 0 0 0 0\n   * 0 0 0 0|0 0 0 0\n   * 0 0 0|1|0 0 0 0 |\n   * 0 0 0 0 0 0 0 0 V\n   * 0 0 0|0 0 0 0 0\n   * 0 0 0 0 0 0 0 0\n   * 0 0 1|0 0 0 0 0\n   *\n   * The simplest way to approach this is to start at the end\n   * and read backwards to determine the mode configuration.\n   *\n   * liboggz and ffmpeg both use this method.\n   */\n  _parseSetupHeader(setup) {\n    const bitReader = new BitReader(setup);\n    const failedToParseVorbisStream = \"Failed to read Vorbis stream\";\n    const failedToParseVorbisModes = \", failed to parse vorbis modes\";\n\n    let mode = {\n      count: 0,\n    };\n\n    // sync with the framing bit\n    while ((bitReader.read(1) & 0x01) !== 1) {}\n\n    let modeBits;\n    // search in reverse to parse out the mode entries\n    // limit mode count to 63 so previous block flag will be in first packet byte\n    while (mode.count < 64 && bitReader.position > 0) {\n      const mapping = reverse(bitReader.read(8));\n      if (\n        mapping in mode &&\n        !(mode.count === 1 && mapping === 0) // allows for the possibility of only one mode\n      ) {\n        this._codecParser.logError(\n          \"received duplicate mode mapping\" + failedToParseVorbisModes\n        );\n        throw new Error(failedToParseVorbisStream);\n      }\n\n      // 16 bits transform type, 16 bits window type, all values must be zero\n      let i = 0;\n      while (bitReader.read(8) === 0x00 && i++ < 3) {} // a non-zero value may indicate the end of the mode entries, or invalid data\n\n      if (i === 4) {\n        // transform type and window type were all zeros\n        modeBits = bitReader.read(7); // modeBits may need to be used in the next iteration if this is the last mode entry\n        mode[mapping] = modeBits & 0x01; // read and store mode -> block flag mapping\n        bitReader.position += 6; // go back 6 bits so next iteration starts right after the block flag\n        mode.count++;\n      } else {\n        // transform type and window type were not all zeros\n        // check for mode count using previous iteration modeBits\n        if (((reverse(modeBits) & 0b01111110) >> 1) + 1 !== mode.count) {\n          this._codecParser.logError(\n            \"mode count did not match actual modes\" + failedToParseVorbisModes\n          );\n          throw new Error(failedToParseVorbisStream);\n        }\n\n        break;\n      }\n    }\n\n    // mode mask to read the mode from the first byte in the vorbis frame\n    mode.mask = (1 << Math.log2(mode.count)) - 1;\n    // previous window flag is the next bit after the mode mask\n    mode.prevMask = (mode.mask | 0x1) + 1;\n\n    return mode;\n  }\n}\n","/* Copyright 2020-2021 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport { headerStore, frameStore } from \"../../globals.js\";\nimport { bytesToString, concatBuffers } from \"../../utilities.js\";\n\nimport Parser from \"../../codecs/Parser.js\";\nimport OggPage from \"./OggPage.js\";\nimport OggPageHeader from \"./OggPageHeader.js\";\n\nimport FLACParser from \"../../codecs/flac/FLACParser.js\";\nimport OpusParser from \"../../codecs/opus/OpusParser.js\";\nimport VorbisParser from \"../../codecs/vorbis/VorbisParser.js\";\n\nexport default class OggParser extends Parser {\n  constructor(codecParser, headerCache, onCodec) {\n    super(codecParser, headerCache);\n\n    this._onCodec = onCodec;\n    this.Frame = OggPage;\n    this.Header = OggPageHeader;\n    this._codec = null;\n    this._continuedPacket = new Uint8Array();\n\n    this._pageSequenceNumber = 0;\n  }\n\n  get codec() {\n    return this._codec || \"\";\n  }\n\n  _updateCodec(codec, Parser) {\n    if (this._codec !== codec) {\n      this._parser = new Parser(this._codecParser, this._headerCache);\n      this._codec = codec;\n      this._onCodec(codec);\n    }\n  }\n\n  _checkForIdentifier({ data }) {\n    const idString = bytesToString(data.subarray(0, 8));\n\n    switch (idString) {\n      case \"fishead\\0\":\n      case \"fisbone\\0\":\n      case \"index\\0\\0\\0\":\n        return false; // ignore ogg skeleton packets\n      case \"OpusHead\":\n        this._updateCodec(\"opus\", OpusParser);\n        return true;\n      case /^\\x7fFLAC/.test(idString) && idString:\n        this._updateCodec(\"flac\", FLACParser);\n        return true;\n      case /^\\x01vorbis/.test(idString) && idString:\n        this._updateCodec(\"vorbis\", VorbisParser);\n        return true;\n    }\n  }\n\n  _checkPageSequenceNumber(oggPage) {\n    if (\n      oggPage.pageSequenceNumber !== this._pageSequenceNumber + 1 &&\n      this._pageSequenceNumber > 1 &&\n      oggPage.pageSequenceNumber > 1\n    ) {\n      this._codecParser.logWarning(\n        \"Unexpected gap in Ogg Page Sequence Number.\",\n        `Expected: ${this._pageSequenceNumber + 1}, Got: ${\n          oggPage.pageSequenceNumber\n        }`\n      );\n    }\n\n    this._pageSequenceNumber = oggPage.pageSequenceNumber;\n  }\n\n  *parseFrame() {\n    const oggPage = yield* this.fixedLengthFrameSync(true);\n\n    this._checkPageSequenceNumber(oggPage);\n\n    const oggPageStore = frameStore.get(oggPage);\n    const { pageSegmentBytes, pageSegmentTable } = headerStore.get(\n      oggPageStore.header\n    );\n\n    let offset = 0;\n\n    oggPageStore.segments = pageSegmentTable.map((segmentLength) =>\n      oggPage.data.subarray(offset, (offset += segmentLength))\n    );\n\n    if (pageSegmentBytes[pageSegmentBytes.length - 1] === 0xff) {\n      // continued packet\n      this._continuedPacket = concatBuffers(\n        this._continuedPacket,\n        oggPageStore.segments.pop()\n      );\n    } else if (this._continuedPacket.length) {\n      oggPageStore.segments[0] = concatBuffers(\n        this._continuedPacket,\n        oggPageStore.segments[0]\n      );\n\n      this._continuedPacket = new Uint8Array();\n    }\n\n    if (this._codec || this._checkForIdentifier(oggPage)) {\n      const frame = this._parser.parseOggPage(oggPage);\n      this._codecParser.mapFrameStats(frame);\n      return frame;\n    }\n  }\n}\n","/* Copyright 2020-2021 Ethan Halsall\n    \n    This file is part of codec-parser.\n    \n    codec-parser is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    codec-parser is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport { crc32, concatBuffers } from \"./utilities.js\";\nimport HeaderCache from \"./codecs/HeaderCache.js\";\nimport MPEGParser from \"./codecs/mpeg/MPEGParser.js\";\nimport AACParser from \"./codecs/aac/AACParser.js\";\nimport FLACParser from \"./codecs/flac/FLACParser.js\";\nimport OggParser from \"./containers/ogg/OggParser.js\";\n\nconst noOp = () => {};\n\nexport default class CodecParser {\n  constructor(mimeType, { onCodecUpdate, onCodec, enableLogging } = {}) {\n    this._inputMimeType = mimeType;\n    this._onCodec = onCodec || noOp;\n    this._onCodecUpdate = onCodecUpdate;\n    this._enableLogging = enableLogging;\n\n    this._generator = this._getGenerator();\n    this._generator.next();\n  }\n\n  /**\n   * @public\n   * @returns The detected codec\n   */\n  get codec() {\n    return this._parser.codec;\n  }\n\n  /**\n   * @public\n   * @description Generator function that yields any buffered CodecFrames and resets the CodecParser\n   * @returns {Iterable<CodecFrame|OggPage>} Iterator that operates over the codec data.\n   * @yields {CodecFrame|OggPage} Parsed codec or ogg page data\n   */\n  *flush() {\n    this._flushing = true;\n\n    for (let i = this._generator.next(); i.value; i = this._generator.next()) {\n      yield i.value;\n    }\n\n    this._flushing = false;\n\n    this._generator = this._getGenerator();\n    this._generator.next();\n  }\n\n  /**\n   * @public\n   * @description Generator function takes in a Uint8Array of data and returns a CodecFrame from the data for each iteration\n   * @param {Uint8Array} chunk Next chunk of codec data to read\n   * @returns {Iterable<CodecFrame|OggPage>} Iterator that operates over the codec data.\n   * @yields {CodecFrame|OggPage} Parsed codec or ogg page data\n   */\n  *parseChunk(chunk) {\n    for (\n      let i = this._generator.next(chunk);\n      i.value;\n      i = this._generator.next()\n    ) {\n      yield i.value;\n    }\n  }\n\n  /**\n   * @public\n   * @description Parses an entire file and returns all of the contained frames.\n   * @param {Uint8Array} fileData Coded data to read\n   * @returns {Array<CodecFrame|OggPage>} CodecFrames\n   */\n  parseAll(fileData) {\n    return [...this.parseChunk(fileData), ...this.flush()];\n  }\n\n  /**\n   * @private\n   */\n  *_getGenerator() {\n    this._headerCache = new HeaderCache(this._onCodecUpdate);\n\n    if (this._inputMimeType.match(/aac/)) {\n      this._parser = new AACParser(this, this._headerCache, this._onCodec);\n    } else if (this._inputMimeType.match(/mpeg/)) {\n      this._parser = new MPEGParser(this, this._headerCache, this._onCodec);\n    } else if (this._inputMimeType.match(/flac/)) {\n      this._parser = new FLACParser(this, this._headerCache, this._onCodec);\n    } else if (this._inputMimeType.match(/ogg/)) {\n      this._parser = new OggParser(this, this._headerCache, this._onCodec);\n    } else {\n      throw new Error(`Unsupported Codec ${mimeType}`);\n    }\n\n    this._frameNumber = 0;\n    this._currentReadPosition = 0;\n    this._totalBytesIn = 0;\n    this._totalBytesOut = 0;\n    this._totalSamples = 0;\n    this._sampleRate = undefined;\n\n    this._rawData = new Uint8Array(0);\n\n    // start parsing out frames\n    while (true) {\n      const frame = yield* this._parser.parseFrame();\n      if (frame) yield frame;\n    }\n  }\n\n  /**\n   * @protected\n   * @param {number} minSize Minimum bytes to have present in buffer\n   * @returns {Uint8Array} rawData\n   */\n  *readRawData(minSize = 0, readOffset = 0) {\n    let rawData;\n\n    while (this._rawData.length <= minSize + readOffset) {\n      rawData = yield;\n\n      if (this._flushing) return this._rawData.subarray(readOffset);\n\n      if (rawData) {\n        this._totalBytesIn += rawData.length;\n        this._rawData = concatBuffers(this._rawData, rawData);\n      }\n    }\n\n    return this._rawData.subarray(readOffset);\n  }\n\n  /**\n   * @protected\n   * @param {number} increment Bytes to increment codec data\n   */\n  incrementRawData(increment) {\n    this._currentReadPosition += increment;\n    this._rawData = this._rawData.subarray(increment);\n  }\n\n  /**\n   * @protected\n   */\n  mapCodecFrameStats(frame) {\n    this._sampleRate = frame.header.sampleRate;\n\n    frame.header.bitrate = Math.round(frame.data.length / frame.duration) * 8;\n    frame.frameNumber = this._frameNumber++;\n    frame.totalBytesOut = this._totalBytesOut;\n    frame.totalSamples = this._totalSamples;\n    frame.totalDuration = (this._totalSamples / this._sampleRate) * 1000;\n    frame.crc32 = crc32(frame.data);\n\n    this._headerCache.checkCodecUpdate(\n      frame.header.bitrate,\n      frame.totalDuration\n    );\n\n    this._totalBytesOut += frame.data.length;\n    this._totalSamples += frame.samples;\n  }\n\n  /**\n   * @protected\n   */\n  mapFrameStats(frame) {\n    if (frame.codecFrames) {\n      // Ogg container\n      frame.codecFrames.forEach((codecFrame) => {\n        frame.duration += codecFrame.duration;\n        frame.samples += codecFrame.samples;\n        this.mapCodecFrameStats(codecFrame);\n      });\n\n      frame.totalSamples = this._totalSamples;\n      frame.totalDuration = (this._totalSamples / this._sampleRate) * 1000 || 0;\n      frame.totalBytesOut = this._totalBytesOut;\n    } else {\n      this.mapCodecFrameStats(frame);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _log(logger, messages) {\n    if (this._enableLogging) {\n      const stats = [\n        `codec:         ${this.codec}`,\n        `inputMimeType: ${this._inputMimeType}`,\n        `readPosition:  ${this._currentReadPosition}`,\n        `totalBytesIn:  ${this._totalBytesIn}`,\n        `totalBytesOut: ${this._totalBytesOut}`,\n      ];\n\n      const width = Math.max(...stats.map((s) => s.length));\n\n      messages.push(\n        `--stats--${\"-\".repeat(width - 9)}`,\n        ...stats,\n        \"-\".repeat(width)\n      );\n\n      logger(\n        \"codec-parser\",\n        messages.reduce((acc, message) => acc + \"\\n  \" + message, \"\")\n      );\n    }\n  }\n\n  /**\n   * @protected\n   */\n  logWarning(...messages) {\n    this._log(console.warn, messages);\n  }\n\n  /**\n   * @protected\n   */\n  logError(...messages) {\n    this._log(console.error, messages);\n  }\n}\n","import CodecParser from \"./src/CodecParser.js\";\n\nexport default CodecParser;\n","import {\n  p,\n  audioElement,\n  audioContext,\n  bufferLength,\n  icecastMetadataQueue,\n  codecUpdateQueue,\n  endpoint,\n} from \"../global.js\";\n\nexport default class Player {\n  constructor(icecast, inputMimeType, codec) {\n    this._icecast = icecast;\n    this._inputMimeType = inputMimeType;\n    this._codec = codec;\n\n    const instanceVariables = p.get(this._icecast);\n\n    this._audioElement = instanceVariables[audioElement];\n    this._icecastMetadataQueue = instanceVariables[icecastMetadataQueue];\n    this._codecUpdateQueue = instanceVariables[codecUpdateQueue];\n    this._endpoint = instanceVariables[endpoint];\n    this._bufferLength = instanceVariables[bufferLength];\n\n    this._codecUpdateTimestamp = 0;\n    this._codecUpdateOffset = 0;\n  }\n\n  static parseMimeType(mimeType) {\n    return mimeType.match(\n      /^(?:application\\/|audio\\/|)(?<mime>[a-zA-Z]+)(?:$|;[ ]*codecs=(?:\\'|\\\")(?<codecs>[a-zA-Z,]+)(?:\\'|\\\"))/\n    );\n  }\n\n  static canPlayType(codecChecker, mimeType, mapping) {\n    const matches = Player.parseMimeType(mimeType);\n\n    const checkCodecs = (codecs) =>\n      codecs.reduce((acc, codec) => {\n        if (acc === \"\") return \"\";\n\n        const result = codecChecker(codec);\n\n        if (!result) return \"\";\n        if (result === \"maybe\" || acc === \"maybe\") return \"maybe\";\n        if (result === true || result === \"probably\") return \"probably\";\n      }, null);\n\n    if (matches) {\n      const { mime, codecs } = matches.groups;\n\n      const mimeMapping = mapping && mapping[mime];\n\n      // mapping is a raw codec\n      if (!mimeMapping || Array.isArray(mimeMapping)) {\n        return (\n          checkCodecs(mimeMapping || [mimeType]) || // check with the codec\n          checkCodecs([`audio/${mime}`]) // check as a raw mimetype\n        );\n      }\n\n      // mapping ia a container\n      if (typeof mimeMapping === \"object\") {\n        if (codecs) {\n          const mimeCodecs = codecs.split(\",\");\n\n          // multiple codecs are not supported\n          if (mimeCodecs.length > 1) return \"\";\n          if (!mimeMapping[mimeCodecs[0]]) return \"\";\n\n          return checkCodecs(mimeMapping[mimeCodecs[0]]);\n        }\n        // container exists in list but no codecs were specified\n        return \"maybe\";\n      }\n    }\n\n    // codec not in the list\n    return \"\";\n  }\n\n  enablePlayButton(supportedSources) {\n    // set the audio element an empty source to enable the play button\n    this._audioElement.removeAttribute(\"src\");\n    this._audioElement.srcObject = null;\n\n    if (supportedSources.includes(\"mediasource\")) {\n      // MediaSourcePlayer\n      this._audioElement.src = URL.createObjectURL(new MediaSource());\n    } else if (supportedSources.includes(\"webaudio\")) {\n      this._mediaStream = new MediaStream();\n      this._audioElement.srcObject = this._mediaStream;\n    } else if (supportedSources.includes(\"html5\")) {\n      // HTML5Player\n      // mp3 32kbs silence\n      this._audioElement.src =\n        \"data:audio/mpeg;base64,//sQxAAABFgC/SCEYACCgB9AAAAAppppVCAHBAEIgBByw9WD5+J8ufwxiDED\" +\n        \"sMfE+D4fwG/RUGCx6VO4awVxV3qDtQNPiXKnZUNSwKuUDR6IgaeoGg7Fg6pMQU1FMy4xMDCqqqqqqqr/+xL\" +\n        \"EB4PAAAGkAAAAIAAANIAAAASqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq\" +\n        \"qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqo=\";\n\n      this._audioElement.loop = true;\n    }\n\n    if (supportedSources.includes(\"webaudio\")) {\n      const audioCtx = new (window.AudioContext || window.webkitAudioContext)({\n        latencyHint: \"playback\",\n      });\n\n      p.get(this._icecast)[audioContext] = audioCtx;\n\n      // hack for iOS Audio element controls support\n      // iOS will only enable AudioContext.resume() when called directly from a UI event\n      // https://stackoverflow.com/questions/57510426\n      if (audioCtx.state === \"suspended\") {\n        const events = [\"touchstart\", \"touchend\", \"mousedown\", \"keydown\"];\n\n        const unlock = () => {\n          audioCtx.resume().then(() => {\n            events.forEach((e) =>\n              this._audioElement.removeEventListener(e, unlock)\n            );\n          });\n        };\n\n        events.forEach((e) =>\n          this._audioElement.addEventListener(e, unlock, false)\n        );\n      }\n    }\n  }\n\n  /**\n   * @abstract\n   */\n  get isSupported() {\n    return false;\n  }\n\n  /**\n   * @abstract\n   */\n  get isAudioPlayer() {\n    return false;\n  }\n\n  /**\n   * @interface\n   */\n  get metadataTimestamp() {\n    return 0;\n  }\n\n  /**\n   * @interface\n   */\n  get currentTime() {\n    return 0;\n  }\n\n  /**\n   * @interface\n   */\n  async reset() {}\n\n  /**\n   * @abstract\n   */\n  onStream(frames) {\n    return frames;\n  }\n\n  /**\n   * @abstract\n   */\n  onMetadata(metadata) {\n    this._icecastMetadataQueue.addMetadata(\n      metadata,\n      this.metadataTimestamp,\n      this.currentTime\n    );\n  }\n\n  /**\n   * @abstract\n   */\n  onCodecUpdate(metadata, updateTimestamp) {\n    const currentTime = this.currentTime;\n\n    // add previous offset when reconnecting\n    if (updateTimestamp < currentTime)\n      this._codecUpdateOffset += this._codecUpdateTimestamp;\n\n    this._codecUpdateTimestamp = updateTimestamp;\n\n    this._codecUpdateQueue.addMetadata(\n      { metadata },\n      (updateTimestamp + this._codecUpdateOffset) / 1000,\n      currentTime\n    );\n  }\n}\n","import { state, event, fireEvent } from \"../global.js\";\nimport Player from \"./Player.js\";\n\nexport default class HTML5Player extends Player {\n  constructor(icecast) {\n    super(icecast);\n\n    this._audioElement.crossOrigin = \"anonymous\";\n    this._audioElement.loop = false;\n    this._audioElement.preload = \"none\";\n\n    this.reset();\n  }\n\n  static canPlayType(mimeType) {\n    if (!HTML5Player.isSupported) return \"\";\n\n    return super.canPlayType((type) => new Audio().canPlayType(type), mimeType);\n  }\n\n  static get isSupported() {\n    return Boolean(window.Audio);\n  }\n\n  static get name() {\n    return \"html5\";\n  }\n\n  get isAudioPlayer() {\n    return true;\n  }\n\n  get metadataTimestamp() {\n    return this._frame\n      ? (this._frame.totalDuration + this._metadataTimestampOffset) / 1000\n      : 0;\n  }\n\n  get currentTime() {\n    return (\n      this._audioLoadedTimestamp &&\n      (performance.now() - this._audioLoadedTimestamp) / 1000\n    );\n  }\n\n  async reset() {\n    this._frame = null;\n    this._metadataLoadedTimestamp = performance.now();\n    this._audioLoadedTimestamp = 0;\n    this._metadataTimestampOffset = 0;\n    this._firedPlay = false;\n\n    this._audioElement.removeAttribute(\"src\");\n    this._audioElement.src = this._endpoint;\n\n    if (\n      this._icecast.state !== state.STOPPING &&\n      this._icecast.state !== state.STOPPED\n    ) {\n      this._audioElement.addEventListener(\n        \"playing\",\n        () => {\n          this._audioLoadedTimestamp = performance.now();\n          this._metadataTimestampOffset =\n            performance.now() - this._metadataLoadedTimestamp;\n        },\n        { once: true }\n      );\n\n      if (!this._firedPlay) {\n        this._icecast[fireEvent](event.PLAY);\n        this._firedPlay = true;\n      }\n    }\n  }\n\n  onStream(frames) {\n    this._frame = frames[frames.length - 1] || this._frame;\n  }\n}\n","// containers\nexport const MP4 = \"mp4\";\nexport const WEBM = \"webm\";\n\n// codecs\nexport const MP3 = \"mp3\";\nexport const MP4A_40_2 = \"mp4a.40.2\";\nexport const FLAC = \"flac\";\nexport const VORBIS = \"vorbis\";\nexport const OPUS = \"opus\";\n\nconst audio = \"audio/\";\nconst codecs = \";codecs=\";\nexport const AUDIO_MP4 = audio + MP4 + codecs;\nexport const AUDIO_WEBM = audio + WEBM + codecs;\n\nexport const MSE_AUDIO_WRAPPER = \"mse-audio-wrapper\";\n","/* Copyright 2020-2021 Ethan Halsall\n    \n    This file is part of mse-audio-wrapper.\n    \n    mse-audio-wrapper is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    mse-audio-wrapper is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nexport default class ContainerElement {\n  /**\n   * @abstract\n   * @description Container Object structure Abstract Class\n   * @param {any} name Name of the object\n   * @param {Array<Uint8>} [contents] Array of arrays or typed arrays, or a single number or typed array\n   * @param {Array<ContainerElement>} [objects] Array of objects to insert into this object\n   */\n  constructor({ name, contents = [], children = [] }) {\n    this._name = name;\n    this._contents = contents;\n    this._children = children;\n  }\n\n  /**\n   * @description Converts a string to a byte array\n   * @param {string} name String to convert\n   * @returns {Uint8Array}\n   */\n  static stringToByteArray(name) {\n    return [...name].map((char) => char.charCodeAt(0));\n  }\n\n  /**\n   * @description Converts a JavaScript number to Uint32\n   * @param {number} number Number to convert\n   * @returns {Uint32}\n   */\n  static getFloat64(number) {\n    const bytes = new Uint8Array(8);\n    new DataView(bytes.buffer).setFloat64(0, number);\n    return bytes;\n  }\n\n  /**\n   * @description Converts a JavaScript number to Uint32\n   * @param {number} number Number to convert\n   * @returns {Uint32}\n   */\n  static getUint64(number) {\n    const bytes = new Uint8Array(8);\n    new DataView(bytes.buffer).setBigUint64(0, BigInt(number));\n    return bytes;\n  }\n\n  /**\n   * @description Converts a JavaScript number to Uint32\n   * @param {number} number Number to convert\n   * @returns {Uint32}\n   */\n  static getUint32(number) {\n    const bytes = new Uint8Array(4);\n    new DataView(bytes.buffer).setUint32(0, number);\n    return bytes;\n  }\n\n  /**\n   * @description Converts a JavaScript number to Uint16\n   * @param {number} number Number to convert\n   * @returns {Uint32}\n   */\n  static getUint16(number) {\n    const bytes = new Uint8Array(2);\n    new DataView(bytes.buffer).setUint16(0, number);\n    return bytes;\n  }\n\n  /**\n   * @description Converts a JavaScript number to Int16\n   * @param {number} number Number to convert\n   * @returns {Uint32}\n   */\n  static getInt16(number) {\n    const bytes = new Uint8Array(2);\n    new DataView(bytes.buffer).setInt16(0, number);\n    return bytes;\n  }\n\n  static *flatten(array) {\n    for (const item of array) {\n      if (Array.isArray(item)) {\n        yield* ContainerElement.flatten(item);\n      } else {\n        yield item;\n      }\n    }\n  }\n\n  /**\n   * @returns {Uint8Array} Contents of this container element\n   */\n  get contents() {\n    const buffer = new Uint8Array(this.length);\n    const contents = this._buildContents();\n\n    let offset = 0;\n\n    for (const element of ContainerElement.flatten(contents)) {\n      if (typeof element !== \"object\") {\n        buffer[offset] = element;\n        offset++;\n      } else {\n        buffer.set(element, offset);\n        offset += element.length;\n      }\n    }\n\n    return buffer;\n  }\n\n  /**\n   * @returns {number} Length of this container element\n   */\n  get length() {\n    return this._buildLength();\n  }\n\n  _buildContents() {\n    return [\n      this._contents,\n      ...this._children.map((obj) => obj._buildContents()),\n    ];\n  }\n\n  _buildLength() {\n    let length;\n\n    if (Array.isArray(this._contents)) {\n      length = this._contents.reduce(\n        (acc, val) => acc + (val.length === undefined ? 1 : val.length),\n        0\n      );\n    } else {\n      length = this._contents.length === undefined ? 1 : this._contents.length;\n    }\n\n    return length + this._children.reduce((acc, obj) => acc + obj.length, 0);\n  }\n\n  addChild(object) {\n    this._children.push(object);\n  }\n}\n","/* Copyright 2020-2021 Ethan Halsall\n    \n    This file is part of mse-audio-wrapper.\n    \n    mse-audio-wrapper is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    mse-audio-wrapper is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport ContainerElement from \"../ContainerElement.js\";\n\nexport default class Box extends ContainerElement {\n  /**\n   * @description ISO/IEC 14496-12 Part 12 ISO Base Media File Format Box\n   * @param {string} name Name of the box (i.e. 'moov', 'moof', 'traf')\n   * @param {object} params Object containing contents or child boxes\n   * @param {Array<Uint8>} [params.contents] Array of bytes to insert into this box\n   * @param {Array<Box>} [params.children] Array of child boxes to insert into this box\n   */\n  constructor(name, { contents, children } = {}) {\n    super({ name, contents, children });\n  }\n\n  _buildContents() {\n    return [\n      ...this._lengthBytes,\n      ...ContainerElement.stringToByteArray(this._name),\n      ...super._buildContents(),\n    ];\n  }\n\n  _buildLength() {\n    if (!this._length) {\n      // length bytes + name length + content length\n      this._length = 4 + this._name.length + super._buildLength();\n      this._lengthBytes = ContainerElement.getUint32(this._length);\n    }\n\n    return this._length;\n  }\n}\n","/* Copyright 2020-2021 Ethan Halsall\n    \n    This file is part of mse-audio-wrapper.\n    \n    mse-audio-wrapper is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    mse-audio-wrapper is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport ContainerElement from \"../ContainerElement.js\";\n\nexport default class ESTag extends ContainerElement {\n  constructor(tagNumber, { contents, tags } = {}) {\n    super({ name: tagNumber, contents, children: tags });\n  }\n\n  static getLength(length) {\n    const bytes = ContainerElement.getUint32(length);\n\n    bytes.every((byte, i, array) => {\n      if (byte === 0x00) {\n        array[i] = 0x80;\n        return true;\n      }\n      return false;\n    });\n\n    return bytes;\n  }\n\n  /**\n   * @returns {Uint8Array} Contents of this stream descriptor tag\n   */\n  _buildContents() {\n    return [this._name, ...this._lengthBytes, ...super._buildContents()];\n  }\n\n  _buildLength() {\n    if (!this._length) {\n      const length = super._buildLength();\n      this._lengthBytes = ESTag.getLength(length);\n      this._length = 1 + length + this._lengthBytes.length;\n    }\n\n    return this._length;\n  }\n\n  addTag(tag) {\n    this.addChild(tag);\n  }\n}\n","/* Copyright 2020-2021 Ethan Halsall\n    \n    This file is part of mse-audio-wrapper.\n    \n    mse-audio-wrapper is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    mse-audio-wrapper is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport { MP3, MP4A_40_2, FLAC, OPUS } from \"../../constants.js\";\n\nimport ContainerElement from \"../ContainerElement.js\";\nimport Box from \"./Box.js\";\nimport ESTag from \"./ESTag.js\";\n\n/**\n * @description Fragmented ISO Base Media File Format Builder is a class to\n * wrap codec frames in a MP4 container for streaming MP3 / AAC compatibility in Firefox.\n */\nexport default class ISOBMFFContainer {\n  constructor(codec) {\n    this._codec = codec;\n  }\n\n  getCodecBox(header) {\n    /**\n     * @description Codec mapping for `esds` box\n     * https://stackoverflow.com/questions/3987850/mp4-atom-how-to-discriminate-the-audio-codec-is-it-aac-or-mp3\n     * https://web.archive.org/web/20180312163039/http://mp4ra.org/object.html\n     * 0x40 - MPEG-4 Audio\n     * 0x6b - MPEG-1 Audio (MPEG-1 Layers 1, 2, and 3)\n     * 0x69 - MPEG-2 Backward Compatible Audio (MPEG-2 Layers 1, 2, and 3)\n     * 0x67 - MPEG-2 AAC LC\n     */\n    switch (this._codec) {\n      case MP3:\n        return this.getMp4a(header, 0x6b);\n      case MP4A_40_2:\n        return this.getMp4a(header, 0x40);\n      case OPUS:\n        return this.getOpus(header);\n      case FLAC:\n        return this.getFlaC(header);\n    }\n  }\n\n  getOpus(header) {\n    // https://opus-codec.org/docs/opus_in_isobmff.html\n    return new Box(\"Opus\", {\n      /* prettier-ignore */\n      contents: [\n        0x00,0x00,0x00,0x00,0x00,0x00, // reserved\n        0x00,0x01, // data reference index\n        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // reserved\n        0x00,header.channels, // channel count\n        0x00,header.bitDepth, // PCM bitrate (16bit)\n        0x00,0x00, // predefined\n        0x00,0x00, // reserved\n        Box.getUint16(header.sampleRate),0x00,0x00, // sample rate 16.16 fixed-point\n      ],\n      children: [\n        new Box(\"dOps\", {\n          /* prettier-ignore */\n          contents: [0x00, // version\n            header.channels, // output channel count\n            Box.getUint16(header.preSkip), // pre skip\n            Box.getUint32(header.inputSampleRate),// input sample rate\n            Box.getInt16(header.outputGain), // output gain\n            header.channelMappingFamily, // channel mapping family int(8)\n            (header.channelMappingFamily !== 0 ? [\n              header.streamCount,\n              header.coupledStreamCount,\n              header.channelMappingTable // channel mapping table\n            ] : [])\n          ],\n        }),\n      ],\n    });\n  }\n\n  getFlaC(header) {\n    // https://github.com/xiph/flac/blob/master/doc/isoflac.txt\n    return new Box(\"fLaC\", {\n      /* prettier-ignore */\n      contents: [\n        0x00,0x00,0x00,0x00,0x00,0x00, // reserved\n        0x00,0x01, // data reference index\n        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // reserved\n        0x00,header.channels, // channel count\n        0x00,header.bitDepth, // PCM bitrate (16bit)\n        0x00,0x00, // predefined\n        0x00,0x00, // reserved\n        Box.getUint16(header.sampleRate),0x00,0x00, // sample rate 16.16 fixed-point\n        /*\n        When the bitstream's native sample rate is greater\n        than the maximum expressible value of 65535 Hz,\n        the samplerate field shall hold the greatest\n        expressible regular division of that rate. I.e.\n        the samplerate field shall hold 48000.0 for\n        native sample rates of 96 and 192 kHz. In the\n        case of unusual sample rates which do not have\n        an expressible regular division, the maximum value\n        of 65535.0 Hz should be used.\n        */\n      ],\n      children: [\n        new Box(\"dfLa\", {\n          /* prettier-ignore */\n          contents: [\n            0x00, // version\n            0x00,0x00,0x00, // flags\n            ...(header.streamInfo || [\n              // * `A........` Last metadata block flag\n              // * `.BBBBBBBB` BlockType\n              0x80, // last metadata block, stream info\n              0x00,0x00,0x22, // Length\n              Box.getUint16(header.blockSize), // maximum block size\n              Box.getUint16(header.blockSize), // minimum block size\n              0x00,0x00,0x00, // maximum frame size\n              0x00,0x00,0x00, // minimum frame size\n              Box.getUint32((header.sampleRate << 12) | (header.channels << 8) | ((header.bitDepth - 1) << 4)), // 20bits sample rate, 3bits channels, 5bits bitDepth - 1\n              0x00,0x00,0x00,0x00, // total samples\n              0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 // md5 of stream\n            ])\n          ],\n        }),\n      ],\n    });\n  }\n\n  getMp4a(header, esdsCodec) {\n    const streamDescriptorTag = new ESTag(4, {\n      /* prettier-ignore */\n      contents: [\n        esdsCodec,\n        0x15, // stream type(6bits)=5 audio, flags(2bits)=1\n        0x00,0x00,0x00, // 24bit buffer size\n        0x00,0x00,0x00,0x00, // max bitrate\n        0x00,0x00,0x00,0x00, // avg bitrate\n      ],\n    });\n\n    // mp4a.40.2\n    if (esdsCodec === 0x40) {\n      streamDescriptorTag.addTag(\n        new ESTag(5, {\n          contents: header.audioSpecificConfig,\n        })\n      );\n    }\n\n    return new Box(\"mp4a\", {\n      /* prettier-ignore */\n      contents: [0x00,0x00,0x00,0x00,0x00,0x00, // reserved\n        0x00,0x01, // data reference index\n        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // reserved\n        0x00,header.channels, // channel count\n        0x00,0x10, // PCM bitrate (16bit)\n        0x00,0x00, // Compression ID\n        0x00,0x00, // Packet size\n        Box.getUint16(header.sampleRate),0x00,0x00], // sample rate unsigned floating point\n      children: [\n        new Box(\"esds\", {\n          contents: [0x00, 0x00, 0x00, 0x00],\n          children: [\n            new ESTag(3, {\n              contents: [\n                0x00,\n                0x01, // ES_ID = 1\n                0x00, // flags etc = 0\n              ],\n              tags: [\n                streamDescriptorTag,\n                new ESTag(6, {\n                  contents: 0x02,\n                }),\n              ],\n            }),\n          ],\n        }),\n      ],\n    });\n  }\n\n  /**\n   * @param {Header} header Codec frame\n   * @returns {Uint8Array} Filetype and Movie Box information for the codec\n   */\n  getInitializationSegment({ header, samples }) {\n    return new ContainerElement({\n      children: [\n        new Box(\"ftyp\", {\n          /* prettier-ignore */\n          contents: [Box.stringToByteArray(\"iso5\"), // major brand\n            0x00,0x00,0x02,0x00, // minor version\n            Box.stringToByteArray(\"iso6mp41\")], // compatible brands\n        }),\n        new Box(\"moov\", {\n          children: [\n            new Box(\"mvhd\", {\n              /* prettier-ignore */\n              contents: [0x00, // version\n                0x00,0x00,0x00, // flags\n                0x00,0x00,0x00,0x00, // creation time\n                0x00,0x00,0x00,0x00, // modification time\n                0x00,0x00,0x03,0xe8, // timescale\n                0x00,0x00,0x00,0x00, // duration\n                0x00,0x01,0x00,0x00, // rate\n                0x01,0x00, // volume\n                0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // reserved\n                0x00,0x01,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, // a b u (matrix structure)\n                0x00,0x00,0x00,0x00, 0x00,0x01,0x00,0x00, 0x00,0x00,0x00,0x00, // c d v\n                0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x40,0x00,0x00,0x00, // x y w\n                0x00,0x00,0x00,0x00, // preview time\n                0x00,0x00,0x00,0x00, // preview duration\n                0x00,0x00,0x00,0x00, // poster time\n                0x00,0x00,0x00,0x00, // selection time\n                0x00,0x00,0x00,0x00, // selection duration\n                0x00,0x00,0x00,0x00, // current time\n                0x00,0x00,0x00,0x02], // next track\n            }),\n            new Box(\"trak\", {\n              children: [\n                new Box(\"tkhd\", {\n                  /* prettier-ignore */\n                  contents: [0x00, // version\n                    0x00,0x00,0x03, // flags (0x01 - track enabled, 0x02 - track in movie, 0x04 - track in preview, 0x08 - track in poster)\n                    0x00,0x00,0x00,0x00, // creation time\n                    0x00,0x00,0x00,0x00, // modification time\n                    0x00,0x00,0x00,0x01, // track id\n                    0x00,0x00,0x00,0x00, // reserved\n                    0x00,0x00,0x00,0x00, // duration\n                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // reserved\n                    0x00,0x00, // layer\n                    0x00,0x01, // alternate group\n                    0x01,0x00, // volume\n                    0x00,0x00, // reserved\n                    0x00,0x01,0x00,0x00, 0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, // a b u (matrix structure)\n                    0x00,0x00,0x00,0x00, 0x00,0x01,0x00,0x00, 0x00,0x00,0x00,0x00, // c d v \n                    0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00, 0x40,0x00,0x00,0x00, // x y w\n                    0x00,0x00,0x00,0x00, // track width\n                    0x00,0x00,0x00,0x00], // track height\n                }),\n                new Box(\"mdia\", {\n                  children: [\n                    new Box(\"mdhd\", {\n                      /* prettier-ignore */\n                      contents: [0x00, // version\n                        0x00,0x00,0x00, // flags\n                        0x00,0x00,0x00,0x00, // creation time (in seconds since midnight, January 1, 1904)\n                        0x00,0x00,0x00,0x00, // modification time\n                        Box.getUint32(header.sampleRate), // time scale\n                        0x00,0x00,0x00,0x00, // duration\n                        0x55,0xc4, // language\n                        0x00,0x00], // quality\n                    }),\n                    new Box(\"hdlr\", {\n                      /* prettier-ignore */\n                      contents: [0x00, // version\n                        0x00,0x00,0x00, // flags\n                        Box.stringToByteArray('mhlr'), // component type (mhlr, dhlr)\n                        Box.stringToByteArray('soun'), // component subtype (vide' for video data, 'soun' for sound data or ‘subt’ for subtitles)\n                        0x00,0x00,0x00,0x00, // component manufacturer\n                        0x00,0x00,0x00,0x00, // component flags\n                        0x00,0x00,0x00,0x00, // component flags mask\n                        0x00], // String that specifies the name of the component, terminated by a null character\n                    }),\n                    new Box(\"minf\", {\n                      children: [\n                        new Box(\"stbl\", {\n                          children: [\n                            new Box(\"stsd\", {\n                              // Sample description atom\n                              /* prettier-ignore */\n                              contents: [0x00, // version\n                                0x00,0x00,0x00, // flags\n                                0x00,0x00,0x00,0x01], // entry count\n                              children: [this.getCodecBox(header)],\n                            }),\n                            new Box(\"stts\", {\n                              // Time-to-sample atom\n                              /* prettier-ignore */\n                              contents: [0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00],\n                            }),\n                            new Box(\"stsc\", {\n                              // Sample-to-chunk atom\n                              /* prettier-ignore */\n                              contents: [0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00],\n                            }),\n                            new Box(\"stsz\", {\n                              // Sample Size atom\n                              /* prettier-ignore */\n                              contents: [0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n                                0x00,0x00,0x00,0x00],\n                            }),\n                            new Box(\"stco\", {\n                              // Chunk Offset atom\n                              /* prettier-ignore */\n                              contents: [0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00],\n                            }),\n                          ],\n                        }),\n                      ],\n                    }),\n                  ],\n                }),\n              ],\n            }),\n            new Box(\"mvex\", {\n              children: [\n                new Box(\"trex\", {\n                  /* prettier-ignore */\n                  contents: [0x00,0x00,0x00,0x00, // flags\n                    0x00,0x00,0x00,0x01, // track id\n                    0x00,0x00,0x00,0x01, // default_sample_description_index\n                    Box.getUint32(samples), // default_sample_duration\n                    0x00,0x00,0x00,0x00, // default_sample_size;\n                    0x00,0x00,0x00,0x00], // default_sample_flags;\n                }),\n              ],\n            }),\n          ],\n        }),\n      ],\n    }).contents;\n  }\n\n  getSamplesPerFrame(frames) {\n    return this._codec === MP4A_40_2\n      ? frames.map(({ data, header }) =>\n          Box.getUint32(data.length - header.length)\n        )\n      : frames.map(({ data }) => Box.getUint32(data.length));\n  }\n\n  getFrameData(frames) {\n    return this._codec === MP4A_40_2\n      ? frames.map(({ data, header }) => data.subarray(header.length))\n      : frames.map(({ data }) => data);\n  }\n\n  /**\n   * @description Wraps codec frames into a Movie Fragment\n   * @param {Array<Frame>} frames Frames to contain in this Movie Fragment\n   * @returns {Uint8Array} Movie Fragment containing the frames\n   */\n  getMediaSegment(frames) {\n    return new ContainerElement({\n      children: [\n        new Box(\"moof\", {\n          children: [\n            new Box(\"mfhd\", {\n              /* prettier-ignore */\n              contents: [0x00,0x00,0x00,0x00, 0x00,0x00,0x00,0x00], // sequence number\n            }),\n            new Box(\"traf\", {\n              children: [\n                new Box(\"tfhd\", {\n                  /* prettier-ignore */\n                  contents: [0x00, // version\n                    0b00000010,0x00,0b00000000, // flags\n                    // * `AB|00000000|00CDE0FG`\n                    // * `A.|........|........` default-base-is-moof\n                    // * `.B|........|........` duration-is-empty\n                    // * `..|........|..C.....` default-sample-flags-present\n                    // * `..|........|...D....` default-sample-size-present\n                    // * `..|........|....E...` default-sample-duration-present\n                    // * `..|........|......F.` sample-description-index-present\n                    // * `..|........|.......G` base-data-offset-present\n                    0x00,0x00,0x00,0x01], // track id\n                }),\n                new Box(\"tfdt\", {\n                  /* prettier-ignore */\n                  contents: [0x00, // version\n                    0x00,0x00,0x00, // flags\n                    0x00,0x00,0x00,0x00], // base media decode time\n                }),\n                new Box(\"trun\", {\n                  /* prettier-ignore */\n                  contents: [0x00, // version\n                    0x00,0b0000010,0b00000001, // flags\n                    // * `ABCD|00000E0F`\n                    // * `A...|........` sample‐composition‐time‐offsets‐present\n                    // * `.B..|........` sample‐flags‐present\n                    // * `..C.|........` sample‐size‐present\n                    // * `...D|........` sample‐duration‐present\n                    // * `....|.....E..` first‐sample‐flags‐present\n                    // * `....|.......G` data-offset-present\n                    Box.getUint32(frames.length), // number of samples\n                    Box.getUint32(92 + frames.length * 4), // data offset\n                    ...this.getSamplesPerFrame(frames)], // samples size per frame\n                }),\n              ],\n            }),\n          ],\n        }),\n        new Box(\"mdat\", {\n          contents: this.getFrameData(frames),\n        }),\n      ],\n    }).contents;\n  }\n}\n","/* Copyright 2020-2021 Ethan Halsall\n    \n    This file is part of mse-audio-wrapper.\n    \n    mse-audio-wrapper is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    mse-audio-wrapper is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport { MSE_AUDIO_WRAPPER } from \"./constants.js\";\n\nconst xiphLacing = (...buffers) =>\n  buffers.flatMap((buffer) => {\n    const lacing = [];\n    for (let l = buffer.length; l >= 0; l -= 255) {\n      lacing.push(l >= 255 ? 255 : l);\n    }\n    return lacing;\n  });\n\nconst logError = (...messages) => {\n  console.error(\n    MSE_AUDIO_WRAPPER,\n    messages.reduce((acc, message) => acc + \"\\n  \" + message, \"\")\n  );\n};\n\nexport { logError, xiphLacing };\n","/* Copyright 2020-2021 Ethan Halsall\n    \n    This file is part of mse-audio-wrapper.\n    \n    mse-audio-wrapper is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    mse-audio-wrapper is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport { MSE_AUDIO_WRAPPER } from \"../../constants.js\";\nimport { logError } from \"../../utilities.js\";\n\nimport ContainerElement from \"../ContainerElement.js\";\n\nexport default class EBML extends ContainerElement {\n  /**\n   * @description Extensible Binary Meta Language element\n   * @param {name} name ID of the EBML element\n   * @param {object} params Object containing contents or children\n   * @param {boolean} [isUnknownLength] Set to true to use the unknown length constant for EBML\n   * @param {Array<Uint8>} [params.contents] Array of bytes to insert into this box\n   * @param {Array<Box>} [params.children] Array of children to insert into this box\n   */\n  constructor(name, { contents, children, isUnknownLength = false } = {}) {\n    super({ name, contents, children });\n\n    this._isUnknownLength = isUnknownLength;\n  }\n\n  /**\n   * @description Converts a JavaScript number into a variable length EBML integer\n   * @param {number} number Number to convert\n   */\n  static getUintVariable(number) {\n    let buffer;\n\n    if (number < 0x7f) {\n      buffer = [0b10000000 | number];\n    } else if (number < 0x3fff) {\n      buffer = ContainerElement.getUint16(number);\n      buffer[0] |= 0b01000000;\n    } else if (number < 0x1fffff) {\n      buffer = ContainerElement.getUint32(number).subarray(1);\n      buffer[0] |= 0b00100000;\n    } else if (number < 0xfffffff) {\n      buffer = ContainerElement.getUint32(number);\n      buffer[0] |= 0b00010000;\n    } else if (number < 0x7ffffffff) {\n      buffer = ContainerElement.getUint64(number).subarray(3);\n      buffer[0] |= 0b00001000;\n    } else if (number < 0x3ffffffffff) {\n      buffer = ContainerElement.getUint64(number).subarray(2);\n      buffer[0] |= 0b00000100;\n    } else if (number < 0x1ffffffffffff) {\n      buffer = ContainerElement.getUint64(number).subarray(1);\n      buffer[0] |= 0b00000010;\n    } else if (number < 0xffffffffffffff) {\n      buffer = ContainerElement.getUint64(number);\n      buffer[0] |= 0b00000001;\n    } else if (typeof number !== \"number\" || isNaN(number)) {\n      logError(\n        `EBML Variable integer must be a number, instead received ${number}`\n      );\n      throw new Error(MSE_AUDIO_WRAPPER + \": Unable to encode WEBM\");\n    }\n\n    return buffer;\n  }\n\n  _buildContents() {\n    return [...this._name, ...this._lengthBytes, ...super._buildContents()];\n  }\n\n  _buildLength() {\n    if (!this._length) {\n      this._contentLength = super._buildLength();\n      this._lengthBytes = this._isUnknownLength\n        ? [0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff] // unknown length constant\n        : EBML.getUintVariable(this._contentLength);\n      this._length =\n        this._name.length + this._lengthBytes.length + this._contentLength;\n    }\n\n    return this._length;\n  }\n}\n\n// https://tools.ietf.org/id/draft-lhomme-cellar-matroska-00.html\nexport const id = {\n  AlphaMode: [0x53, 0xc0],\n  AspectRatioType: [0x54, 0xb3],\n  AttachedFile: [0x61, 0xa7],\n  AttachmentLink: [0x74, 0x46],\n  Attachments: [0x19, 0x41, 0xa4, 0x69],\n  Audio: [0xe1],\n  BitDepth: [0x62, 0x64],\n  BitsPerChannel: [0x55, 0xb2],\n  Block: [0xa1],\n  BlockAddID: [0xee],\n  BlockAdditional: [0xa5],\n  BlockAdditions: [0x75, 0xa1],\n  BlockDuration: [0x9b],\n  BlockGroup: [0xa0],\n  BlockMore: [0xa6],\n  CbSubsamplingHorz: [0x55, 0xb5],\n  CbSubsamplingVert: [0x55, 0xb6],\n  Channels: [0x9f],\n  ChapCountry: [0x43, 0x7e],\n  ChapLanguage: [0x43, 0x7c],\n  ChapProcess: [0x69, 0x44],\n  ChapProcessCodecID: [0x69, 0x55],\n  ChapProcessCommand: [0x69, 0x11],\n  ChapProcessData: [0x69, 0x33],\n  ChapProcessPrivate: [0x45, 0x0d],\n  ChapProcessTime: [0x69, 0x22],\n  ChapString: [0x85],\n  ChapterAtom: [0xb6],\n  ChapterDisplay: [0x80],\n  ChapterFlagEnabled: [0x45, 0x98],\n  ChapterFlagHidden: [0x98],\n  ChapterPhysicalEquiv: [0x63, 0xc3],\n  Chapters: [0x10, 0x43, 0xa7, 0x70],\n  ChapterSegmentEditionUID: [0x6e, 0xbc],\n  ChapterSegmentUID: [0x6e, 0x67],\n  ChapterStringUID: [0x56, 0x54],\n  ChapterTimeEnd: [0x92],\n  ChapterTimeStart: [0x91],\n  ChapterTrack: [0x8f],\n  ChapterTrackNumber: [0x89],\n  ChapterTranslate: [0x69, 0x24],\n  ChapterTranslateCodec: [0x69, 0xbf],\n  ChapterTranslateEditionUID: [0x69, 0xfc],\n  ChapterTranslateID: [0x69, 0xa5],\n  ChapterUID: [0x73, 0xc4],\n  ChromaSitingHorz: [0x55, 0xb7],\n  ChromaSitingVert: [0x55, 0xb8],\n  ChromaSubsamplingHorz: [0x55, 0xb3],\n  ChromaSubsamplingVert: [0x55, 0xb4],\n  Cluster: [0x1f, 0x43, 0xb6, 0x75],\n  CodecDecodeAll: [0xaa],\n  CodecDelay: [0x56, 0xaa],\n  CodecID: [0x86],\n  CodecName: [0x25, 0x86, 0x88],\n  CodecPrivate: [0x63, 0xa2],\n  CodecState: [0xa4],\n  Colour: [0x55, 0xb0],\n  ColourSpace: [0x2e, 0xb5, 0x24],\n  ContentCompAlgo: [0x42, 0x54],\n  ContentCompression: [0x50, 0x34],\n  ContentCompSettings: [0x42, 0x55],\n  ContentEncAlgo: [0x47, 0xe1],\n  ContentEncKeyID: [0x47, 0xe2],\n  ContentEncoding: [0x62, 0x40],\n  ContentEncodingOrder: [0x50, 0x31],\n  ContentEncodings: [0x6d, 0x80],\n  ContentEncodingScope: [0x50, 0x32],\n  ContentEncodingType: [0x50, 0x33],\n  ContentEncryption: [0x50, 0x35],\n  ContentSigAlgo: [0x47, 0xe5],\n  ContentSigHashAlgo: [0x47, 0xe6],\n  ContentSigKeyID: [0x47, 0xe4],\n  ContentSignature: [0x47, 0xe3],\n  CRC32: [0xbf],\n  CueBlockNumber: [0x53, 0x78],\n  CueClusterPosition: [0xf1],\n  CueCodecState: [0xea],\n  CueDuration: [0xb2],\n  CuePoint: [0xbb],\n  CueReference: [0xdb],\n  CueRefTime: [0x96],\n  CueRelativePosition: [0xf0],\n  Cues: [0x1c, 0x53, 0xbb, 0x6b],\n  CueTime: [0xb3],\n  CueTrack: [0xf7],\n  CueTrackPositions: [0xb7],\n  DateUTC: [0x44, 0x61],\n  DefaultDecodedFieldDuration: [0x23, 0x4e, 0x7a],\n  DefaultDuration: [0x23, 0xe3, 0x83],\n  DiscardPadding: [0x75, 0xa2],\n  DisplayHeight: [0x54, 0xba],\n  DisplayUnit: [0x54, 0xb2],\n  DisplayWidth: [0x54, 0xb0],\n  DocType: [0x42, 0x82],\n  DocTypeReadVersion: [0x42, 0x85],\n  DocTypeVersion: [0x42, 0x87],\n  Duration: [0x44, 0x89],\n  EBML: [0x1a, 0x45, 0xdf, 0xa3],\n  EBMLMaxIDLength: [0x42, 0xf2],\n  EBMLMaxSizeLength: [0x42, 0xf3],\n  EBMLReadVersion: [0x42, 0xf7],\n  EBMLVersion: [0x42, 0x86],\n  EditionEntry: [0x45, 0xb9],\n  EditionFlagDefault: [0x45, 0xdb],\n  EditionFlagHidden: [0x45, 0xbd],\n  EditionFlagOrdered: [0x45, 0xdd],\n  EditionUID: [0x45, 0xbc],\n  FieldOrder: [0x9d],\n  FileData: [0x46, 0x5c],\n  FileDescription: [0x46, 0x7e],\n  FileMimeType: [0x46, 0x60],\n  FileName: [0x46, 0x6e],\n  FileUID: [0x46, 0xae],\n  FlagDefault: [0x88],\n  FlagEnabled: [0xb9],\n  FlagForced: [0x55, 0xaa],\n  FlagInterlaced: [0x9a],\n  FlagLacing: [0x9c],\n  Info: [0x15, 0x49, 0xa9, 0x66],\n  LaceNumber: [0xcc],\n  Language: [0x22, 0xb5, 0x9c],\n  LuminanceMax: [0x55, 0xd9],\n  LuminanceMin: [0x55, 0xda],\n  MasteringMetadata: [0x55, 0xd0],\n  MatrixCoefficients: [0x55, 0xb1],\n  MaxBlockAdditionID: [0x55, 0xee],\n  MaxCache: [0x6d, 0xf8],\n  MaxCLL: [0x55, 0xbc],\n  MaxFALL: [0x55, 0xbd],\n  MinCache: [0x6d, 0xe7],\n  MuxingApp: [0x4d, 0x80],\n  Name: [0x53, 0x6e],\n  NextFilename: [0x3e, 0x83, 0xbb],\n  NextUID: [0x3e, 0xb9, 0x23],\n  OutputSamplingFrequency: [0x78, 0xb5],\n  PixelCropBottom: [0x54, 0xaa],\n  PixelCropLeft: [0x54, 0xcc],\n  PixelCropRight: [0x54, 0xdd],\n  PixelCropTop: [0x54, 0xbb],\n  PixelHeight: [0xba],\n  PixelWidth: [0xb0],\n  Position: [0xa7],\n  PrevFilename: [0x3c, 0x83, 0xab],\n  PrevSize: [0xab],\n  PrevUID: [0x3c, 0xb9, 0x23],\n  Primaries: [0x55, 0xbb],\n  PrimaryBChromaticityX: [0x55, 0xd5],\n  PrimaryBChromaticityY: [0x55, 0xd6],\n  PrimaryGChromaticityX: [0x55, 0xd3],\n  PrimaryGChromaticityY: [0x55, 0xd4],\n  PrimaryRChromaticityX: [0x55, 0xd1],\n  PrimaryRChromaticityY: [0x55, 0xd2],\n  Range: [0x55, 0xb9],\n  ReferenceBlock: [0xfb],\n  ReferencePriority: [0xfa],\n  SamplingFrequency: [0xb5],\n  Seek: [0x4d, 0xbb],\n  SeekHead: [0x11, 0x4d, 0x9b, 0x74],\n  SeekID: [0x53, 0xab],\n  SeekPosition: [0x53, 0xac],\n  SeekPreRoll: [0x56, 0xbb],\n  Segment: [0x18, 0x53, 0x80, 0x67],\n  SegmentFamily: [0x44, 0x44],\n  SegmentFilename: [0x73, 0x84],\n  SegmentUID: [0x73, 0xa4],\n  SilentTrackNumber: [0x58, 0xd7],\n  SilentTracks: [0x58, 0x54],\n  SimpleBlock: [0xa3],\n  SimpleTag: [0x67, 0xc8],\n  Slices: [0x8e],\n  StereoMode: [0x53, 0xb8],\n  Tag: [0x73, 0x73],\n  TagAttachmentUID: [0x63, 0xc6],\n  TagBinary: [0x44, 0x85],\n  TagChapterUID: [0x63, 0xc4],\n  TagDefault: [0x44, 0x84],\n  TagEditionUID: [0x63, 0xc9],\n  TagLanguage: [0x44, 0x7a],\n  TagName: [0x45, 0xa3],\n  Tags: [0x12, 0x54, 0xc3, 0x67],\n  TagString: [0x44, 0x87],\n  TagTrackUID: [0x63, 0xc5],\n  Targets: [0x63, 0xc0],\n  TargetType: [0x63, 0xca],\n  TargetTypeValue: [0x68, 0xca],\n  Timestamp: [0xe7],\n  TimestampScale: [0x2a, 0xd7, 0xb1],\n  TimeSlice: [0xe8],\n  Title: [0x7b, 0xa9],\n  TrackCombinePlanes: [0xe3],\n  TrackEntry: [0xae],\n  TrackJoinBlocks: [0xe9],\n  TrackJoinUID: [0xed],\n  TrackNumber: [0xd7],\n  TrackOperation: [0xe2],\n  TrackOverlay: [0x6f, 0xab],\n  TrackPlane: [0xe4],\n  TrackPlaneType: [0xe6],\n  TrackPlaneUID: [0xe5],\n  Tracks: [0x16, 0x54, 0xae, 0x6b],\n  TrackTranslate: [0x66, 0x24],\n  TrackTranslateCodec: [0x66, 0xbf],\n  TrackTranslateEditionUID: [0x66, 0xfc],\n  TrackTranslateTrackID: [0x66, 0xa5],\n  TrackType: [0x83],\n  TrackUID: [0x73, 0xc5],\n  TransferCharacteristics: [0x55, 0xba],\n  Video: [0xe0],\n  Void: [0xec],\n  WhitePointChromaticityX: [0x55, 0xd7],\n  WhitePointChromaticityY: [0x55, 0xd8],\n  WritingApp: [0x57, 0x41],\n};\n","/* Copyright 2020-2021 Ethan Halsall\n    \n    This file is part of mse-audio-wrapper.\n    \n    mse-audio-wrapper is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    mse-audio-wrapper is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport { VORBIS, OPUS, WEBM, MSE_AUDIO_WRAPPER } from \"../../constants.js\";\nimport { xiphLacing } from \"../../utilities.js\";\n\nimport ContainerElement from \"../ContainerElement.js\";\nimport EBML, { id } from \"./EBML.js\";\n\nexport default class WEBMContainer {\n  constructor(codec) {\n    switch (codec) {\n      case OPUS: {\n        this._codecId = \"A_OPUS\";\n        this._getCodecSpecificTrack = (header) => [\n          new EBML(id.CodecDelay, {\n            contents: EBML.getUint32(\n              Math.round(header.preSkip * this._timestampScale)\n            ),\n          }), // OPUS codec delay\n          new EBML(id.SeekPreRoll, {\n            contents: EBML.getUint32(Math.round(3840 * this._timestampScale)),\n          }), // OPUS seek preroll 80ms\n          new EBML(id.CodecPrivate, { contents: header.data }), // OpusHead bytes\n        ];\n        break;\n      }\n      case VORBIS: {\n        this._codecId = \"A_VORBIS\";\n        this._getCodecSpecificTrack = (header) => [\n          new EBML(id.CodecPrivate, {\n            contents: [\n              0x02, // number of packets\n              xiphLacing(header.data, header.vorbisComments),\n              header.data,\n              header.vorbisComments,\n              header.vorbisSetup,\n            ],\n          }),\n        ];\n        break;\n      }\n    }\n  }\n\n  getInitializationSegment({ header }) {\n    this._timestampScale = 1000000000 / header.sampleRate;\n\n    return new ContainerElement({\n      children: [\n        new EBML(id.EBML, {\n          children: [\n            new EBML(id.EBMLVersion, { contents: 1 }),\n            new EBML(id.EBMLReadVersion, { contents: 1 }),\n            new EBML(id.EBMLMaxIDLength, { contents: 4 }),\n            new EBML(id.EBMLMaxSizeLength, { contents: 8 }),\n            new EBML(id.DocType, { contents: EBML.stringToByteArray(WEBM) }),\n            new EBML(id.DocTypeVersion, { contents: 4 }),\n            new EBML(id.DocTypeReadVersion, { contents: 2 }),\n          ],\n        }),\n        new EBML(id.Segment, {\n          isUnknownLength: true,\n          children: [\n            new EBML(id.Info, {\n              children: [\n                new EBML(id.TimestampScale, {\n                  contents: EBML.getUint32(\n                    Math.floor(this._timestampScale) // Base timestamps on sample rate vs. milliseconds https://www.matroska.org/technical/notes.html#timestamps\n                  ),\n                }),\n                new EBML(id.MuxingApp, {\n                  contents: EBML.stringToByteArray(MSE_AUDIO_WRAPPER),\n                }),\n                new EBML(id.WritingApp, {\n                  contents: EBML.stringToByteArray(MSE_AUDIO_WRAPPER),\n                }),\n              ],\n            }),\n            new EBML(id.Tracks, {\n              children: [\n                new EBML(id.TrackEntry, {\n                  children: [\n                    new EBML(id.TrackNumber, { contents: 0x01 }),\n                    new EBML(id.TrackUID, { contents: 0x01 }),\n                    new EBML(id.FlagLacing, { contents: 0x00 }),\n                    new EBML(id.CodecID, {\n                      contents: EBML.stringToByteArray(this._codecId),\n                    }),\n                    new EBML(id.TrackType, { contents: 0x02 }), // audio\n                    new EBML(id.Audio, {\n                      children: [\n                        new EBML(id.Channels, { contents: header.channels }),\n                        new EBML(id.SamplingFrequency, {\n                          contents: EBML.getFloat64(header.sampleRate),\n                        }),\n                        new EBML(id.BitDepth, { contents: header.bitDepth }),\n                      ],\n                    }),\n                    ...this._getCodecSpecificTrack(header),\n                  ],\n                }),\n              ],\n            }),\n          ],\n        }),\n      ],\n    }).contents;\n  }\n\n  getMediaSegment(frames) {\n    const offsetSamples = frames[0].totalSamples;\n\n    return new EBML(id.Cluster, {\n      children: [\n        new EBML(id.Timestamp, {\n          contents: EBML.getUintVariable(offsetSamples), // Absolute timecode of the cluster\n        }),\n        ...frames.map(\n          ({ data, totalSamples }) =>\n            new EBML(id.SimpleBlock, {\n              contents: [\n                0x81, // track number\n                EBML.getInt16(totalSamples - offsetSamples), // timestamp relative to cluster Int16\n                0x80, // No lacing\n                data, // ogg page contents\n              ],\n            })\n        ),\n      ],\n    }).contents;\n  }\n}\n","/* Copyright 2020-2021 Ethan Halsall\n    \n    This file is part of mse-audio-wrapper.\n    \n    mse-audio-wrapper is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    mse-audio-wrapper is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>\n*/\n\nimport CodecParser from \"codec-parser\";\n\nimport {\n  WEBM,\n  MP3,\n  MP4A_40_2,\n  FLAC,\n  VORBIS,\n  OPUS,\n  AUDIO_MP4,\n  AUDIO_WEBM,\n} from \"./constants.js\";\n\nimport ISOBMFFContainer from \"./containers/isobmff/ISOBMFFContainer.js\";\nimport WEBMContainer from \"./containers/webm/WEBMContainer.js\";\n\nconst noOp = () => {};\n\nexport default class MSEAudioWrapper {\n  /**\n   * @description Wraps audio data into media source API compatible containers\n   * @param {string} mimeType Mimetype of the audio data to wrap\n   * @param {string} options.codec Codec of the audio data to wrap\n   * @param {object} options.preferredContainer Preferred audio container to output if multiple containers are available\n   * @param {number} options.minBytesPerSegment Minimum number of bytes to process before returning a media segment\n   * @param {number} options.minFramesPerSegment Minimum number of frames to process before returning a media segment\n   * @param {number} options.minBytesPerSegment Minimum number of bytes to process before returning a media segment\n   * @param {boolean} options.enableLogging Set to true to enable debug logging\n   */\n  constructor(mimeType, options = {}) {\n    this._inputMimeType = mimeType;\n\n    this.PREFERRED_CONTAINER = options.preferredContainer || WEBM;\n    this.MIN_FRAMES = options.minFramesPerSegment || 4;\n    this.MAX_FRAMES = options.maxFramesPerSegment || 50;\n    this.MIN_FRAMES_LENGTH = options.minBytesPerSegment || 1022;\n    this.MAX_SAMPLES_PER_SEGMENT = Infinity;\n\n    this._onMimeType = options.onMimeType || noOp;\n\n    if (options.codec) {\n      this._container = this._getContainer(options.codec);\n      this._onMimeType(this._mimeType);\n    }\n\n    this._frames = [];\n    this._codecParser = new CodecParser(mimeType, {\n      onCodec: (codec) => {\n        this._container = this._getContainer(codec);\n        this._onMimeType(this._mimeType);\n      },\n      onCodecUpdate: options.onCodecUpdate,\n      enableLogging: options.enableLogging,\n    });\n  }\n\n  /**\n   * @public\n   * @returns The mimetype being returned from MSEAudioWrapper\n   */\n  get mimeType() {\n    return this._mimeType;\n  }\n\n  /**\n   * @public\n   * @returns The mimetype of the incoming audio data\n   */\n  get inputMimeType() {\n    return this._inputMimeType;\n  }\n\n  /**\n   * @public\n   * @description Returns an iterator for the passed in codec data.\n   * @param {Uint8Array | Array<Frame>} chunk Next chunk of codec data to read\n   * @returns {Iterator} Iterator that operates over the codec data.\n   * @yields {Uint8Array} Movie Fragments containing codec frames\n   */\n  *iterator(chunk) {\n    if (chunk.constructor === Uint8Array) {\n      yield* this._processFrames(\n        [...this._codecParser.parseChunk(chunk)].flatMap(\n          (frame) => frame.codecFrames || frame\n        )\n      );\n    } else if (Array.isArray(chunk)) {\n      yield* this._processFrames(chunk);\n    }\n  }\n\n  /**\n   * @private\n   */\n  *_processFrames(frames) {\n    this._frames.push(...frames);\n\n    if (this._frames.length) {\n      const groups = this._groupFrames();\n\n      if (groups.length) {\n        if (!this._sentInitialSegment) {\n          this._sentInitialSegment = true;\n\n          yield this._container.getInitializationSegment(groups[0][0]);\n        }\n        for (const frameGroup of groups) {\n          yield this._container.getMediaSegment(frameGroup);\n        }\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  _groupFrames() {\n    const groups = [[]];\n    let currentGroup = groups[0];\n    let samples = 0;\n\n    for (const frame of this._frames) {\n      if (\n        currentGroup.length === this.MAX_FRAMES ||\n        samples >= this.MAX_SAMPLES_PER_SEGMENT\n      ) {\n        samples = 0;\n        groups.push((currentGroup = [])); // create new group\n      }\n\n      currentGroup.push(frame);\n      samples += frame.samples;\n    }\n\n    // store remaining frames\n    this._frames =\n      currentGroup.length < this.MIN_FRAMES ||\n      currentGroup.reduce((acc, frame) => acc + frame.data.length, 0) <\n        this.MIN_FRAMES_LENGTH\n        ? groups.pop()\n        : [];\n\n    return groups;\n  }\n\n  /**\n   * @private\n   */\n  _getContainer(codec) {\n    switch (codec) {\n      case \"mpeg\":\n        this._mimeType = `${AUDIO_MP4}\"${MP3}\"`;\n        return new ISOBMFFContainer(MP3);\n      case \"aac\":\n        this._mimeType = `${AUDIO_MP4}\"${MP4A_40_2}`;\n        return new ISOBMFFContainer(MP4A_40_2);\n      case \"flac\":\n        this._mimeType = `${AUDIO_MP4}\"${FLAC}\"`;\n        return new ISOBMFFContainer(FLAC);\n      case \"vorbis\":\n        this._mimeType = `${AUDIO_WEBM}\"${VORBIS}\"`;\n\n        this.MAX_SAMPLES_PER_SEGMENT = 32767;\n        return new WEBMContainer(VORBIS);\n      case \"opus\":\n        if (this.PREFERRED_CONTAINER === WEBM) {\n          this._mimeType = `${AUDIO_WEBM}\"${OPUS}\"`;\n\n          this.MAX_SAMPLES_PER_SEGMENT = 32767;\n          return new WEBMContainer(OPUS);\n        }\n        this._mimeType = `${AUDIO_MP4}\"${OPUS}\"`;\n        return new ISOBMFFContainer(OPUS);\n    }\n  }\n}\n","import { event, fireEvent } from \"./global.js\";\n\nexport default class FrameQueue {\n  constructor(icecast) {\n    this.CACHE_DURATION = 300000; // milliseconds of burst on connect data\n\n    this._icecast = icecast;\n\n    this.initSync();\n    this.initQueue();\n  }\n\n  initSync() {\n    this._syncQueue = [];\n    this._alignIndex = 0;\n    this._syncIndex = 0;\n  }\n\n  initQueue() {\n    this._queue = [];\n    this._queueDuration = 0;\n  }\n\n  add({ crc32, duration }) {\n    this._queue.push({ crc32, duration });\n    this._queueDuration += duration;\n\n    if (this._queueDuration >= this.CACHE_DURATION) {\n      const { duration } = this._queue.shift();\n      this._queueDuration -= duration;\n    }\n  }\n\n  addAll(frames) {\n    frames.forEach((frame) => this.add(frame));\n  }\n\n  /*\n  Aligns the queue with a new incoming data by aligning the crc32 hashes \n  and then returning only the frames that do not existing on the queue.\n  \n                   old data | common data  | new data\n  (old connection) ------------------------|\n  (new connection)          |------------------>\n                             ^^^^^^^^^^^^^^ ^^^^\n                              (sync)         (frames to return)\n  */\n\n  /**\n   *\n   * @param {Array<CodecFrame|OggPage>} frames\n   * @returns Array with frames as first element, boolean indicating if the sync was successful as the second element\n   */\n  sync(frames) {\n    this._syncQueue.push(...frames);\n\n    // find the index of the element in the queue that aligns with the sync queue\n    align_queues: while (this._alignIndex < this._queue.length) {\n      while (\n        this._syncIndex < this._syncQueue.length &&\n        this._alignIndex + this._syncIndex < this._queue.length\n      ) {\n        if (\n          this._syncQueue[this._syncIndex].crc32 !==\n          this._queue[this._alignIndex + this._syncIndex].crc32 // failed to match\n        ) {\n          this._syncIndex = 0; // reset sync queue index and start over\n          this._alignIndex++;\n          continue align_queues;\n        }\n        this._syncIndex++;\n      }\n      break; // full match, queues are aligned\n    }\n\n    // no matching data (not synced)\n    if (this._alignIndex === this._queue.length) {\n      // prettier-ignore\n      this._icecast[fireEvent](\n        event.WARN,\n        \"Reconnected successfully after retry event.\",\n        \"Found no overlapping frames from previous request.\",\n        \"Unable to sync old and new request.\"\n      );\n\n      const syncQueue = this._syncQueue;\n      this.initSync();\n      this.initQueue(); // clear queue since there is a gap in data\n      return [syncQueue, false];\n    }\n\n    const sliceIndex = this._queue.length - this._alignIndex;\n\n    // new frames (synced)\n    if (this._syncQueue.length > sliceIndex) {\n      // prettier-ignore\n      this._icecast[fireEvent](\n          event.WARN,\n          \"Reconnected successfully after retry event.\",\n          `Found ${sliceIndex} frames (${(this._queue\n            .slice(this._alignIndex)\n            .reduce((acc, { duration }) => acc + duration, 0) / 1000).toFixed(3)} seconds) of overlapping audio data in new request.`,\n          \"Synchronized old and new request.\"\n        );\n\n      const newFrames = this._syncQueue.slice(sliceIndex);\n      this.initSync();\n      return [newFrames, true];\n    }\n\n    // no new frames yet\n    return [[], false];\n  }\n}\n","import MSEAudioWrapper from \"mse-audio-wrapper\";\n\nimport {\n  state,\n  event,\n  fireEvent,\n  concatBuffers,\n  SYNCED,\n  SYNCING,\n  NOT_SYNCED,\n} from \"../global.js\";\nimport Player from \"./Player.js\";\nimport FrameQueue from \"../FrameQueue.js\";\n\nconst BUFFER = 5; // seconds of audio to store in SourceBuffer\nconst BUFFER_INTERVAL = 5; // seconds before removing from SourceBuffer\n\nexport default class MediaSourcePlayer extends Player {\n  constructor(icecast, inputMimeType, codec) {\n    super(icecast, inputMimeType, codec);\n\n    this.reset();\n\n    this._icecast.addEventListener(event.RETRY, () => {\n      this._syncState = NOT_SYNCED;\n    });\n  }\n\n  static canPlayType(mimeType) {\n    const mapping = {\n      mpeg: ['audio/mp4;codecs=\"mp3\"'],\n      aac: ['audio/mp4;codecs=\"mp4a.40.2\"'],\n      aacp: ['audio/mp4;codecs=\"mp4a.40.2\"'],\n      flac: ['audio/mp4;codecs=\"flac\"'],\n      ogg: {\n        flac: ['audio/mp4;codecs=\"flac\"'],\n        opus: ['audio/mp4;codecs=\"opus\"', 'audio/webm;codecs=\"opus\"'],\n        vorbis: ['audio/webm;codecs=\"vorbis\"'],\n      },\n    };\n\n    if (!MediaSourcePlayer.isSupported) return \"\";\n\n    if (MediaSource.isTypeSupported(mimeType)) return \"probably\";\n\n    return super.canPlayType(MediaSource.isTypeSupported, mimeType, mapping);\n  }\n\n  static get isSupported() {\n    return Boolean(window.MediaSource);\n  }\n\n  static get name() {\n    return \"mediasource\";\n  }\n\n  get isAudioPlayer() {\n    return true;\n  }\n\n  get metadataTimestamp() {\n    return (\n      (this._mediaSource &&\n        this._mediaSource.sourceBuffers.length &&\n        Math.max(\n          // work-around for WEBM reporting a negative timestampOffset\n          this._mediaSource.sourceBuffers[0].timestampOffset,\n          this._mediaSource.sourceBuffers[0].buffered.length\n            ? this._mediaSource.sourceBuffers[0].buffered.end(0)\n            : 0\n        )) ||\n      0\n    );\n  }\n\n  get currentTime() {\n    return this._audioElement.currentTime;\n  }\n\n  async reset() {\n    this._syncState = SYNCED;\n    this._frameQueue = new FrameQueue(this._icecast);\n    this._sourceBufferQueue = [];\n    this._firedPlay = false;\n\n    this._mediaSourcePromise = this._prepareMediaSource(\n      this._inputMimeType,\n      this._codec\n    );\n\n    await this._mediaSourcePromise;\n  }\n\n  async onStream(frames) {\n    frames = frames.flatMap((frame) => frame.codecFrames || frame);\n\n    if (frames.length) {\n      switch (this._syncState) {\n        case NOT_SYNCED:\n          this._frameQueue.initSync();\n          this._syncState = SYNCING;\n        case SYNCING:\n          [frames] = this._frameQueue.sync(frames);\n          if (frames.length) this._syncState = SYNCED;\n      }\n\n      this._frameQueue.addAll(frames);\n\n      // when frames are present, we should already know the codec and have the mse audio mimetype determined\n      await (\n        await this._mediaSourcePromise\n      )(frames); // wait for the source buffer to be created\n    }\n  }\n\n  async _prepareMediaSource(inputMimeType, codec) {\n    if (MediaSource.isTypeSupported(inputMimeType)) {\n      // pass the audio directly to MSE\n\n      await this._createMediaSource(inputMimeType);\n\n      return async (frames) =>\n        this._appendSourceBuffer(concatBuffers(frames.map((f) => f.data)));\n    } else {\n      // wrap the audio into fragments before passing to MSE\n      const wrapper = new MSEAudioWrapper(inputMimeType, {\n        codec,\n      });\n\n      if (!MediaSource.isTypeSupported(wrapper.mimeType)) {\n        this._icecast[fireEvent](\n          event.ERROR,\n          `Media Source Extensions API in your browser does not support ${inputMimeType} or ${wrapper.mimeType}.` +\n            \"See: https://caniuse.com/mediasource and https://developer.mozilla.org/en-US/docs/Web/API/Media_Source_Extensions_API\"\n        );\n        throw new Error(`Unsupported Media Source Codec ${wrapper.mimeType}`);\n      }\n\n      await this._createMediaSource(wrapper.mimeType);\n\n      return async (codecFrames) => {\n        const fragments = concatBuffers([...wrapper.iterator(codecFrames)]);\n\n        await this._appendSourceBuffer(fragments);\n      };\n    }\n  }\n\n  async _createMediaSource(mimeType) {\n    await new Promise(async (resolve) => {\n      this._mediaSource = new MediaSource();\n      this._audioElement.loop = false;\n      this._audioElement.src = URL.createObjectURL(this._mediaSource);\n\n      this._mediaSource.addEventListener(\"sourceopen\", resolve, {\n        once: true,\n      });\n    });\n\n    this._sourceBufferRemoved = 0;\n    this._mediaSource.addSourceBuffer(mimeType).mode = \"sequence\";\n  }\n\n  async _waitForSourceBuffer() {\n    return new Promise((resolve) => {\n      this._mediaSource.sourceBuffers[0].addEventListener(\n        \"updateend\",\n        resolve,\n        {\n          once: true,\n        }\n      );\n    });\n  }\n\n  async _appendSourceBuffer(chunk) {\n    this._icecast[fireEvent](event.STREAM, chunk);\n\n    if (!this._mediaSource.sourceBuffers.length) {\n      this._icecast[fireEvent](\n        event.WARN,\n        \"Attempting to append audio, but MediaSource has not been or is no longer initialized\",\n        \"Please be sure that `detachAudioElement()` was called and awaited before reusing the element with a new IcecastMetadataPlayer instance\"\n      );\n    }\n\n    if (\n      this._icecast.state !== state.STOPPING &&\n      this._mediaSource.sourceBuffers.length\n    ) {\n      this._sourceBufferQueue.push(chunk);\n\n      try {\n        do {\n          this._mediaSource.sourceBuffers[0].appendBuffer(\n            this._sourceBufferQueue[0]\n          );\n          await this._waitForSourceBuffer();\n          this._sourceBufferQueue.shift();\n        } while (this._sourceBufferQueue.length);\n      } catch (e) {\n        if (e.name !== \"QuotaExceededError\") throw e;\n      }\n\n      if (!this._firedPlay) {\n        if (this._bufferLength <= this.metadataTimestamp) {\n          this._icecast[fireEvent](event.PLAY);\n          this._firedPlay = true;\n        } else {\n          this._icecast[fireEvent](event.BUFFER, this.metadataTimestamp);\n        }\n      }\n\n      if (\n        this._audioElement.currentTime > BUFFER + this._bufferLength &&\n        this._sourceBufferRemoved + BUFFER_INTERVAL * 1000 < performance.now()\n      ) {\n        this._sourceBufferRemoved = performance.now();\n        this._mediaSource.sourceBuffers[0].remove(\n          0,\n          this._audioElement.currentTime - BUFFER + this._bufferLength\n        );\n        await this._waitForSourceBuffer();\n      }\n    }\n  }\n}\n","export default function WASMAudioDecoderCommon(caller) {\n  // setup static methods\n  if (!WASMAudioDecoderCommon.concatFloat32) {\n    Object.defineProperties(WASMAudioDecoderCommon, {\n      concatFloat32: {\n        value: (buffers, length) => {\n          const ret = new Float32Array(length);\n\n          for (let i = 0, offset = 0; i < buffers.length; i++) {\n            ret.set(buffers[i], offset);\n            offset += buffers[i].length;\n          }\n\n          return ret;\n        },\n      },\n\n      getDecodedAudio: {\n        value: (channelData, samplesDecoded, sampleRate) => {\n          return {\n            channelData,\n            samplesDecoded,\n            sampleRate,\n          };\n        },\n      },\n\n      getDecodedAudioMultiChannel: {\n        value: (input, channelsDecoded, samplesDecoded, sampleRate) => {\n          const channelData = [];\n\n          for (let i = 0; i < channelsDecoded; i++) {\n            const channel = [];\n            for (let j = 0; j < input.length; j++) {\n              channel.push(input[j][i]);\n            }\n            channelData.push(\n              WASMAudioDecoderCommon.concatFloat32(channel, samplesDecoded)\n            );\n          }\n\n          return WASMAudioDecoderCommon.getDecodedAudio(\n            channelData,\n            samplesDecoded,\n            sampleRate\n          );\n        },\n      },\n\n      /*\n       ******************\n       * Compression Code\n       ******************\n       */\n\n      inflateDynEncodeString: {\n        value: (source, dest) => {\n          const output = new Uint8Array(source.length);\n          const offset = parseInt(source.substring(11, 13), 16);\n          const offsetReverse = 256 - offset;\n\n          let escaped = false,\n            byteIndex = 0,\n            byte;\n\n          for (let i = 13; i < source.length; i++) {\n            byte = source.charCodeAt(i);\n\n            if (byte === 61 && !escaped) {\n              escaped = true;\n              continue;\n            }\n\n            if (escaped) {\n              escaped = false;\n              byte -= 64;\n            }\n\n            output[byteIndex++] =\n              byte < offset && byte > 0 ? byte + offsetReverse : byte - offset;\n          }\n\n          return WASMAudioDecoderCommon.inflate(\n            output.subarray(0, byteIndex),\n            dest\n          );\n        },\n      },\n\n      inflate: {\n        value: (source, dest) => {\n          const TINF_OK = 0;\n          const TINF_DATA_ERROR = -3;\n\n          const uint8Array = Uint8Array;\n          const uint16Array = Uint16Array;\n\n          function Tree() {\n            this.t = new uint16Array(16); /* table of code length counts */\n            this.trans = new uint16Array(\n              288\n            ); /* code -> symbol translation table */\n          }\n\n          function Data(source, dest) {\n            this.s = source;\n            this.i = 0;\n            this.t = 0;\n            this.bitcount = 0;\n\n            this.dest = dest;\n            this.destLen = 0;\n\n            this.ltree = new Tree(); /* dynamic length/symbol tree */\n            this.dtree = new Tree(); /* dynamic distance tree */\n          }\n\n          /* --------------------------------------------------- *\n           * -- uninitialized global data (static structures) -- *\n           * --------------------------------------------------- */\n\n          const sltree = new Tree();\n          const sdtree = new Tree();\n\n          /* extra bits and base tables for length codes */\n          const length_bits = new uint8Array(30);\n          const length_base = new uint16Array(30);\n\n          /* extra bits and base tables for distance codes */\n          const dist_bits = new uint8Array(30);\n          const dist_base = new uint16Array(30);\n\n          /* special ordering of code length codes */\n          const clcidx = new uint8Array([\n            16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15,\n          ]);\n\n          /* used by tinf_decode_trees, avoids allocations every call */\n          const code_tree = new Tree();\n          const lengths = new uint8Array(288 + 32);\n\n          /* ----------------------- *\n           * -- utility functions -- *\n           * ----------------------- */\n\n          /* build extra bits and base tables */\n          const tinf_build_bits_base = (bits, base, delta, first) => {\n            let i, sum;\n\n            /* build bits table */\n            for (i = 0; i < delta; ++i) bits[i] = 0;\n            for (i = 0; i < 30 - delta; ++i) bits[i + delta] = (i / delta) | 0;\n\n            /* build base table */\n            for (sum = first, i = 0; i < 30; ++i) {\n              base[i] = sum;\n              sum += 1 << bits[i];\n            }\n          };\n\n          /* build the fixed huffman trees */\n          const tinf_build_fixed_trees = (lt, dt) => {\n            let i;\n\n            /* build fixed length tree */\n            for (i = 0; i < 7; ++i) lt.t[i] = 0;\n\n            lt.t[7] = 24;\n            lt.t[8] = 152;\n            lt.t[9] = 112;\n\n            for (i = 0; i < 24; ++i) lt.trans[i] = 256 + i;\n            for (i = 0; i < 144; ++i) lt.trans[24 + i] = i;\n            for (i = 0; i < 8; ++i) lt.trans[24 + 144 + i] = 280 + i;\n            for (i = 0; i < 112; ++i) lt.trans[24 + 144 + 8 + i] = 144 + i;\n\n            /* build fixed distance tree */\n            for (i = 0; i < 5; ++i) dt.t[i] = 0;\n\n            dt.t[5] = 32;\n\n            for (i = 0; i < 32; ++i) dt.trans[i] = i;\n          };\n\n          /* given an array of code lengths, build a tree */\n          const offs = new uint16Array(16);\n\n          const tinf_build_tree = (t, lengths, off, num) => {\n            let i, sum;\n\n            /* clear code length count table */\n            for (i = 0; i < 16; ++i) t.t[i] = 0;\n\n            /* scan symbol lengths, and sum code length counts */\n            for (i = 0; i < num; ++i) t.t[lengths[off + i]]++;\n\n            t.t[0] = 0;\n\n            /* compute offset table for distribution sort */\n            for (sum = 0, i = 0; i < 16; ++i) {\n              offs[i] = sum;\n              sum += t.t[i];\n            }\n\n            /* create code->symbol translation table (symbols sorted by code) */\n            for (i = 0; i < num; ++i) {\n              if (lengths[off + i]) t.trans[offs[lengths[off + i]]++] = i;\n            }\n          };\n\n          /* ---------------------- *\n           * -- decode functions -- *\n           * ---------------------- */\n\n          /* get one bit from source stream */\n          const tinf_getbit = (d) => {\n            /* check if tag is empty */\n            if (!d.bitcount--) {\n              /* load next tag */\n              d.t = d.s[d.i++];\n              d.bitcount = 7;\n            }\n\n            /* shift bit out of tag */\n            const bit = d.t & 1;\n            d.t >>>= 1;\n\n            return bit;\n          };\n\n          /* read a num bit value from a stream and add base */\n          const tinf_read_bits = (d, num, base) => {\n            if (!num) return base;\n\n            while (d.bitcount < 24) {\n              d.t |= d.s[d.i++] << d.bitcount;\n              d.bitcount += 8;\n            }\n\n            const val = d.t & (0xffff >>> (16 - num));\n            d.t >>>= num;\n            d.bitcount -= num;\n            return val + base;\n          };\n\n          /* given a data stream and a tree, decode a symbol */\n          const tinf_decode_symbol = (d, t) => {\n            while (d.bitcount < 24) {\n              d.t |= d.s[d.i++] << d.bitcount;\n              d.bitcount += 8;\n            }\n\n            let sum = 0,\n              cur = 0,\n              len = 0,\n              tag = d.t;\n\n            /* get more bits while code value is above sum */\n            do {\n              cur = 2 * cur + (tag & 1);\n              tag >>>= 1;\n              ++len;\n\n              sum += t.t[len];\n              cur -= t.t[len];\n            } while (cur >= 0);\n\n            d.t = tag;\n            d.bitcount -= len;\n\n            return t.trans[sum + cur];\n          };\n\n          /* given a data stream, decode dynamic trees from it */\n          const tinf_decode_trees = (d, lt, dt) => {\n            let i, length;\n\n            /* get 5 bits HLIT (257-286) */\n            const hlit = tinf_read_bits(d, 5, 257);\n\n            /* get 5 bits HDIST (1-32) */\n            const hdist = tinf_read_bits(d, 5, 1);\n\n            /* get 4 bits HCLEN (4-19) */\n            const hclen = tinf_read_bits(d, 4, 4);\n\n            for (i = 0; i < 19; ++i) lengths[i] = 0;\n\n            /* read code lengths for code length alphabet */\n            for (i = 0; i < hclen; ++i) {\n              /* get 3 bits code length (0-7) */\n              const clen = tinf_read_bits(d, 3, 0);\n              lengths[clcidx[i]] = clen;\n            }\n\n            /* build code length tree */\n            tinf_build_tree(code_tree, lengths, 0, 19);\n\n            /* decode code lengths for the dynamic trees */\n            for (let num = 0; num < hlit + hdist; ) {\n              const sym = tinf_decode_symbol(d, code_tree);\n\n              switch (sym) {\n                case 16:\n                  /* copy previous code length 3-6 times (read 2 bits) */\n                  const prev = lengths[num - 1];\n                  for (length = tinf_read_bits(d, 2, 3); length; --length) {\n                    lengths[num++] = prev;\n                  }\n                  break;\n                case 17:\n                  /* repeat code length 0 for 3-10 times (read 3 bits) */\n                  for (length = tinf_read_bits(d, 3, 3); length; --length) {\n                    lengths[num++] = 0;\n                  }\n                  break;\n                case 18:\n                  /* repeat code length 0 for 11-138 times (read 7 bits) */\n                  for (length = tinf_read_bits(d, 7, 11); length; --length) {\n                    lengths[num++] = 0;\n                  }\n                  break;\n                default:\n                  /* values 0-15 represent the actual code lengths */\n                  lengths[num++] = sym;\n                  break;\n              }\n            }\n\n            /* build dynamic trees */\n            tinf_build_tree(lt, lengths, 0, hlit);\n            tinf_build_tree(dt, lengths, hlit, hdist);\n          };\n\n          /* ----------------------------- *\n           * -- block inflate functions -- *\n           * ----------------------------- */\n\n          /* given a stream and two trees, inflate a block of data */\n          const tinf_inflate_block_data = (d, lt, dt) => {\n            while (1) {\n              let sym = tinf_decode_symbol(d, lt);\n\n              /* check for end of block */\n              if (sym === 256) {\n                return TINF_OK;\n              }\n\n              if (sym < 256) {\n                d.dest[d.destLen++] = sym;\n              } else {\n                let length, dist, offs;\n\n                sym -= 257;\n\n                /* possibly get more bits from length code */\n                length = tinf_read_bits(d, length_bits[sym], length_base[sym]);\n\n                dist = tinf_decode_symbol(d, dt);\n\n                /* possibly get more bits from distance code */\n                offs =\n                  d.destLen -\n                  tinf_read_bits(d, dist_bits[dist], dist_base[dist]);\n\n                /* copy match */\n                for (let i = offs; i < offs + length; ++i) {\n                  d.dest[d.destLen++] = d.dest[i];\n                }\n              }\n            }\n          };\n\n          /* inflate an uncompressed block of data */\n          const tinf_inflate_uncompressed_block = (d) => {\n            let length, invlength;\n\n            /* unread from bitbuffer */\n            while (d.bitcount > 8) {\n              d.i--;\n              d.bitcount -= 8;\n            }\n\n            /* get length */\n            length = d.s[d.i + 1];\n            length = 256 * length + d.s[d.i];\n\n            /* get one's complement of length */\n            invlength = d.s[d.i + 3];\n            invlength = 256 * invlength + d.s[d.i + 2];\n\n            /* check length */\n            if (length !== (~invlength & 0x0000ffff)) return TINF_DATA_ERROR;\n\n            d.i += 4;\n\n            /* copy block */\n            for (let i = length; i; --i) d.dest[d.destLen++] = d.s[d.i++];\n\n            /* make sure we start next block on a byte boundary */\n            d.bitcount = 0;\n\n            return TINF_OK;\n          };\n\n          /* -------------------- *\n           * -- initialization -- *\n           * -------------------- */\n\n          /* build fixed huffman trees */\n          tinf_build_fixed_trees(sltree, sdtree);\n\n          /* build extra bits and base tables */\n          tinf_build_bits_base(length_bits, length_base, 4, 3);\n          tinf_build_bits_base(dist_bits, dist_base, 2, 1);\n\n          /* fix a special case */\n          length_bits[28] = 0;\n          length_base[28] = 258;\n\n          const d = new Data(source, dest);\n          let bfinal, btype, res;\n\n          do {\n            /* read final block flag */\n            bfinal = tinf_getbit(d);\n\n            /* read block type (2 bits) */\n            btype = tinf_read_bits(d, 2, 0);\n\n            /* decompress block */\n            switch (btype) {\n              case 0:\n                /* decompress uncompressed block */\n                res = tinf_inflate_uncompressed_block(d);\n                break;\n              case 1:\n                /* decompress block with fixed huffman trees */\n                res = tinf_inflate_block_data(d, sltree, sdtree);\n                break;\n              case 2:\n                /* decompress block with dynamic huffman trees */\n                tinf_decode_trees(d, d.ltree, d.dtree);\n                res = tinf_inflate_block_data(d, d.ltree, d.dtree);\n                break;\n              default:\n                res = TINF_DATA_ERROR;\n            }\n\n            if (res !== TINF_OK) throw new Error(\"Data error\");\n          } while (!bfinal);\n\n          if (d.destLen < d.dest.length) {\n            if (typeof d.dest.slice === \"function\")\n              return d.dest.slice(0, d.destLen);\n            else return d.dest.subarray(0, d.destLen);\n          }\n\n          return d.dest;\n        },\n      },\n    });\n  }\n\n  Object.defineProperty(this, \"wasm\", {\n    enumerable: true,\n    get: () => this._wasm,\n  });\n\n  this.getOutputChannels = (outputData, channelsDecoded, samplesDecoded) => {\n    const output = [];\n\n    for (let i = 0; i < channelsDecoded; i++)\n      output.push(\n        outputData.slice(\n          i * samplesDecoded,\n          i * samplesDecoded + samplesDecoded\n        )\n      );\n\n    return output;\n  };\n\n  this.allocateTypedArray = (len, TypedArray) => {\n    const ptr = this._wasm._malloc(TypedArray.BYTES_PER_ELEMENT * len);\n    this._pointers.add(ptr);\n\n    return {\n      ptr: ptr,\n      len: len,\n      buf: new TypedArray(this._wasm.HEAP, ptr, len),\n    };\n  };\n\n  this.free = () => {\n    for (let i = 0; i < this._pointers.length; i++)\n      this._wasm._free(this._pointers[i]);\n    this._pointers.clear();\n  };\n\n  this._wasm = new caller._EmscriptenWASM(WASMAudioDecoderCommon);\n  this._pointers = new Set();\n\n  return this._wasm.ready.then(() => {\n    caller._input = this.allocateTypedArray(caller._inputSize, Uint8Array);\n\n    // output buffer\n    caller._output = this.allocateTypedArray(\n      caller._outputChannels * caller._outputChannelSize,\n      Float32Array\n    );\n\n    return this;\n  });\n}\n","import Worker from \"web-worker\";\nimport WASMAudioDecoderCommon from \"./WASMAudioDecoderCommon.js\";\n\nexport default class WASMAudioDecoderWorker extends Worker {\n  constructor(options, Decoder, EmscriptenWASM) {\n    const webworkerSourceCode =\n      \"'use strict';\" +\n      // dependencies need to be manually resolved when stringifying this function\n      `(${((_options, _Decoder, _WASMAudioDecoderCommon, _EmscriptenWASM) => {\n        // We're in a Web Worker\n        Object.defineProperties(_Decoder, {\n          WASMAudioDecoderCommon: { value: _WASMAudioDecoderCommon },\n          EmscriptenWASM: { value: _EmscriptenWASM },\n          isWebWorker: { value: true },\n        });\n\n        const decoder = new _Decoder(_options);\n\n        const detachBuffers = (buffer) =>\n          Array.isArray(buffer)\n            ? buffer.map((buffer) => new Uint8Array(buffer))\n            : new Uint8Array(buffer);\n\n        self.onmessage = ({ data: { id, command, data } }) => {\n          switch (command) {\n            case \"ready\":\n              decoder.ready.then(() => {\n                self.postMessage({\n                  id,\n                });\n              });\n              break;\n            case \"free\":\n              decoder.free();\n              self.postMessage({\n                id,\n              });\n              break;\n            case \"reset\":\n              decoder.reset().then(() => {\n                self.postMessage({\n                  id,\n                });\n              });\n              break;\n            case \"decode\":\n            case \"decodeFrame\":\n            case \"decodeFrames\":\n              const { channelData, samplesDecoded, sampleRate } = decoder[\n                command\n              ](detachBuffers(data));\n\n              self.postMessage(\n                {\n                  id,\n                  channelData,\n                  samplesDecoded,\n                  sampleRate,\n                },\n                // The \"transferList\" parameter transfers ownership of channel data to main thread,\n                // which avoids copying memory.\n                channelData.map((channel) => channel.buffer)\n              );\n              break;\n            default:\n              this.console.error(\"Unknown command sent to worker: \" + command);\n          }\n        };\n      }).toString()})(${JSON.stringify(\n        options\n      )}, ${Decoder.toString()}, ${WASMAudioDecoderCommon.toString()}, ${EmscriptenWASM.toString()})`;\n\n    const type = \"text/javascript\";\n    let source;\n\n    try {\n      // browser\n      source = URL.createObjectURL(new Blob([webworkerSourceCode], { type }));\n    } catch {\n      // nodejs\n      source = `data:${type};base64,${Buffer.from(webworkerSourceCode).toString(\n        \"base64\"\n      )}`;\n    }\n\n    super(source);\n\n    this._id = Number.MIN_SAFE_INTEGER;\n    this._enqueuedOperations = new Map();\n\n    this.onmessage = ({ data }) => {\n      const { id, ...rest } = data;\n      this._enqueuedOperations.get(id)(rest);\n      this._enqueuedOperations.delete(id);\n    };\n  }\n\n  async _postToDecoder(command, data) {\n    return new Promise((resolve) => {\n      this.postMessage({\n        command,\n        id: this._id,\n        data,\n      });\n\n      this._enqueuedOperations.set(this._id++, resolve);\n    });\n  }\n\n  get ready() {\n    return this._postToDecoder(\"ready\");\n  }\n\n  async free() {\n    await this._postToDecoder(\"free\").finally(() => {\n      this.terminate();\n    });\n  }\n\n  async reset() {\n    await this._postToDecoder(\"reset\");\n  }\n}\n","/* **************************************************\n * This file is auto-generated during the build process.\n * Any edits to this file will be overwritten.\n ****************************************************/\n\nexport default function EmscriptenWASM(WASMAudioDecoderCommon) {\nvar Module = Module;\n\nfunction ready() {}\n\nModule = {};\n\nfunction abort(what) {\n throw what;\n}\n\nfor (var base64ReverseLookup = new Uint8Array(123), i = 25; i >= 0; --i) {\n base64ReverseLookup[48 + i] = 52 + i;\n base64ReverseLookup[65 + i] = i;\n base64ReverseLookup[97 + i] = 26 + i;\n}\n\nbase64ReverseLookup[43] = 62;\n\nbase64ReverseLookup[47] = 63;\n\nfunction base64Decode(b64) {\n var b1, b2, i = 0, j = 0, bLength = b64.length, output = new Uint8Array((bLength * 3 >> 2) - (b64[bLength - 2] == \"=\") - (b64[bLength - 1] == \"=\"));\n for (;i < bLength; i += 4, j += 3) {\n  b1 = base64ReverseLookup[b64.charCodeAt(i + 1)];\n  b2 = base64ReverseLookup[b64.charCodeAt(i + 2)];\n  output[j] = base64ReverseLookup[b64.charCodeAt(i)] << 2 | b1 >> 4;\n  output[j + 1] = b1 << 4 | b2 >> 2;\n  output[j + 2] = b2 << 6 | base64ReverseLookup[b64.charCodeAt(i + 3)];\n }\n return output;\n}\n\nif (!EmscriptenWASM.compiled) Object.defineProperty(EmscriptenWASM, \"compiled\", {value: WebAssembly.compile(WASMAudioDecoderCommon.inflateDynEncodeString(\"dynEncode0048¼Ú=MÊ\u001cXÈ\u0013ÚÙ¬\u001e¥Ã:\u0003ÃGvA%ùO ÿYdvsÉk·ý\u0004I&È{ï¾L£1Bò\u0002Uc\u0002PH@P_\u001eñpø ßÇ¨eK;aè¨ÐR\u0003õ0±=?È=JÉÀ¬7++æwif÷\u0013áâ ÍÂÝ²õïMí¶´\u0011Û*Áu¬~Õ]=IªÏ\u0003ûRñ7NÈ.M¸K2Â¶Þ/^Øæ#X96=I=LH=ÕY=HÀ=LØHPLÚ²ëj[kÛ¢­ÖPLîîëbjÝMb±=;ÔpÐÐyYKËÐx\u001d²¹ÔÝá!\u0001à©a]Ñ8rjy*qçº¤=KJ;O×7±¹ÏH¿©O?¨_?©MW¨W£ø×µ =MVE&[&\u0001s\u0010ÍëDÖäÛçd¼|\u000eSV[ð\u001d¬rõº\u0006>ãD==kOy¹|(h@oVH@N=H©ÖõnÙP³ð*@÷NlÑ®*D0¢nAqð5ÚG\u001c\u0012êÇb¨&n8L*Ôòæòñï\u001c°\u0014\u001bà\u0019Üïqë»æÞÔäo¯<\u0002ï\u001fÕ&><þ\u0019Cæ&B \u001b\u000fçÃB$0s§aÅ/1å4ï¾àvBw=\u001f=H¯\u0002\u000f¤´K\u001aQÛÏ¹vÇUõu05FÁ-nÕ8ckBN\u0010Ð\u0007IÆ\u0006÷c\u001eb÷FfÖGpEh\u0001Ì\u0018­40¾{R4âÚ_­[$Ô¥,Âu\u001d\u00197=×eÿ½=IÚ»x>âë,ii]BÕ9ÿN0­AHøåßµÆ\u001eÀQâßÎ5éXWces.pK\u0003Õ¥S¾\u001ddü=}Á­dò<¦Õþë7s xLÞ®þÐ\u001añ²|\u001döÝ\u001a\u0006+Ä'¹\u0016=LÜÑy[ñ×=}=KîB|\u001fïí¦ò\u0018@ýÄ6Â\u000eµµ=M!«/ÞÅ)ç)æ{y®ê²j=Ç\u0012=@È\u0001¹´³ò£²Ø\u0002£\u001b\u001e«\u0018=L»òz\u001fæØ5$@B0ºµ×\u000f=I­®´1=J{¦ÖE^g\u0007Ä¦w{®®®®®®.?\u0004GÇòìfÏ¾¯\u001dïV\u001déò6PÈL=@¶+² õo1÷$i#=}ãNQö#0Òl\u0005ÐCðw?8h9Ü,?-9Ö¨«h§¯Ï\u0018ü¡D8\u0003\u0001÷Õ\u00133=L¾f×Ðì{¼À=LÉ'ê\u0018åDãU`rz5\u0007÷`G%Nâv\u0006{ÑÚc?¾è^#%\u0001én?WdE¾Gh(\u0007A\u000e\u0016´0½Ï\u0019xfVû\u000408/·\u0014Î±zd>Ï±ï=H;*6WòJ=@\u0003PHÞ¾bÔ?T¼þs´U]ËG:_8H~ùÁ-(µ]5òe0òk­Gµ\u0019æëó\u001d=H=KÞ­FÂ WOW\u0010Ñ£kTÑ=}@øIºÖ>*OQ$KÁK¨ÿ\u001dPB\u0007xÿ\u0005BÜ#â\u001d1yÑ^ß=@ã}È.v&+Æ=@{·0Ã~±$?¿b\u001b=K\u0016nÕ0=}Ã,ÞååñÕr=JãQè·&\u0004AGX\u0004©\u001eYd\u0006k±P[vPÄci\u00173[ ¢n·QÝL}[ò?NpX\u001d\u0001=}úCÞ`\u0002f=K^y=L·\u0003IóÃk­<Þ0j×Èö¸BZQ«¼%=HÔ+*£ûð÷f¿=Lôp7îî#\u001cK{¬\u0004=L%(þ\u0007#\u0010ãs jòµ?aFZDè\u0017©U¥üÃÙWß¿9\u001c»9¾M6BÚxZ6\u001d\u0005«¬~yÅ=Mk-\u001c\u0002ÁU¢I=Mþû óùXE\u0003ÏN¶­\u001fÅ:Á\u0002|B\u0005E\u0018O>³®hMÿýØ\u0012·³òÅÛp÷ñ>´1júMÒwøyÏÞ¢Â)©=LÌzZt=bÏzZ`âIÁ>¬H`×¿ó V\u0001c#®]UÈW©Zaâvt\u0001\u001a=Í:=@@MX0õH9ÌÏ¨Rxo­Å\u000682CïýLxQ-zðWY£G¶8^T{IôxK=}\u0003ÓÄ·\u000f¾g¤¬[¥®Ã»ÃP\u0002ºsÕC=H6\u0014îã$\u0004Z|©f xNÓZ|î4º=JÃ+$\u001cà7ªLqY¶qå{=Jõ%C+\u0016Á.K2\u0007s¸sIsç\u0010\u0007ê\u000f{a@2;Õq\u001có\u0001]ìNi j\u0011ö\u0006m!\u001dGúÔÄñd:\u000eoE\u0015VAÀ[\u0005u\u001dÎ1Ù²k12Fx\u0006T±CþðMn¾%7ÇrÑÔÜR)£n>Ìnã4¹ÑCª}\u0019¾x¶ÐéF{4Ý[Ç\u001eÇAÛK§\u0019=MÌ=T¬¥]á=JÆã:\u000e=I\u0018]WP=HË?$Õ¾\u0015H=Mìò°;Æ·³¡_n¾'%\u001b½\u0007%¹[ì\u0015ÎX`x\u0007~9gêzÝî\u000f=M¶µ\u0003\u0017«»\u0002Ti¬+¾\u0014î¯ÛsLWm=WÎYÂDÔ«¿Y¶>ì¿\u0015xag=b~QâdèNcF\u0001\u001bÂÕf;\u0005Nªa\u001cø~1=HMtf­ÊO=K\u001d~æ¥ÿ¥¦\u001fäJZyÆbÞPü÷wF\u0019VÕ02Tð%·û*ÿ\u001e*:>×è`á!)n%j^\u001b>Z\u0014ÅwÃqÀB®=H.÷á\u0013Ygk\u000f®,-é~\u0019Ëó\u001c%¨=@ôìL\u0003Å¢Ò>\u0002=}Mð7?b#ãËò.~øõ.\u001c±´u}=D©û¾`s¿¾óÐðlUð SðRºVÒáM?=JÚOÙ^qË=@¯NF¨R§\u001e¦ÿye=M<«Õß=Ii×|öV%Â=K\u0019\u0015£Â=LË=Ik\u0005MÆñiF4¥ëò6¦0à¾#MHÏåàIãD\u0015Ìµ7\u0015b#ùq!Üno_\u0014RT&¿6¼¸²ª7Ë\u0006=@=K\u0010àËj1´Ç®º\u001a\u0017½¥\u0012é\u000eî¶«§\u001a¥Û_zÁ^¯9;ÿ¬\u0015?ÎCÛv=\u0016´=M@=L\u001bÈ\u0013Ì\u0011n\u001dÇpÑ+?=bä\u00055ñyÑ\u0007e<ßËwt¸rM¼­ú#ì¸=LÐ]Q®ñÍÌcuÖ­x=MWB\u0011c\u001e=@~VóW\u001fCÃÚ¤{Å^Pf&=JMbÅM~Ýz\u0019Ú\u0011£zp¬ê\u0013uõü\u0010¯gÌrÒÌ\u0002ÔXÔu<£=b¨+µÎÅ·©K Ô5\u001f?#\u001eäØi«Ö§}ý<ùñ½P)K\u001bW±\u001a\u0018¬\u0003v\u0007ÎþÃe >Z1k\u0002\u0010i°A±^g¯l\u0013%\u001coæVk[5ÛoëBIÑTT$lÈ×Õ\u0001$/pãÏxn0Ü©ÝF©=KR\u000e=}\u001cT\u001dßB\u0002WÂ2k=JºáÞ\u0016ç¯\u001d\u001fß\u0011ÏyÆjÖ=JlV\u001cÉbQ\u000fy|o\u0011~ûÈêåX¹\u0010~ÿxÇ¸ÕlçB4ÄE»_¶á}m¼;á×>g%;=bÑ\u0007è_Qq\u0016'Ï±«\u0005Î¢?æz=} <º\u0019M{q¬ÃzAÿ\u0015©6O¾¼\u001fB¦vá=K|ºª×&F\u0003>©ÌÂ9\u0017Ë\u001a=b«Ç5.'u´LÊ´dç²\u001f¬5^íj­5>u»Ì&áL6ëK[1ì\u0006Ò=LªÍÆ\u001fðR¬HØõ[êÂ=L[µoz\u0001Åh}Y°¡ï\u001e°m-*qÍéb\u0006£>à*l\u001dkz\u00056(\u0006P Y(º=H¹¤?¹T\u0003nìtÏ·#=KÿT³­ôËXGwÈ\u0005=K(5p?Ì©i´\u0014ríèâÐl²\u0004HYÜ©;¨^&næ\u0006-µÉÓü¬¾Y=MKÙÑ/¶\u00153\u0012s[tê+aÈY;m[Õl=K{ÃíÁ\u0005±\u0005QFÂJ\u000e×=MZAP²Î::\u0018=K=H½{\u0018ãÕV©[ÀnKë<÷}÷\u000e½Z\u000eö¸ÔKØ\u0016Th¬Zæµ=Lí=<È:]èO¶ø\u0017u\u0015ÅÙ$oÊ5\u0003Ù^D#\u0001Sñ\u001eîwÑIL­¡=In=L\u0006.êBø\u001duV0à*UK¥FýÌ=bùméîÆrõÏÑaP3ï!>T\u0019É\u0011Ô\u000fZOVµ:´ÌKêu­»\u000eN6ªø\u001dýòÆ2,h±;÷ÝYó@\u001fJý«O@£K)$T °h¼á7nm\u0018»,#l6ÎëJ=b=M=H«WA=@=IrñÂ¹²\u0012 gwrø£É\u0019L:? e·_uSsÒèw\u001d\u001dÒ*¾RHmÈ\u000flLµiüRÜÐÃ%á©\u0003¥\u0005/2ÅgM(c=I¡\u0015øÚ÷ó­ø¬?-ÞÇîë´nÉÛÍÁ3µÜ<ç{\u0018 `j#é<ýE%áñèYîãø8=}ÚÁÄs=H/á6=HË\u0015ÚFGÓ7Ý¡©B\u0006=J\u0019=Kgô[%e\u0012g<\u0017CH_¥û\u0011Ó~åZÒ~}kÓÚ3ÑBlójT¾^<bèªPKÎ¿ÉÂ\u0001z6á¹´¾Èýæ®´â±ox=@,Uÿ°=@Úw5þVÏW Ë·=}Õ°ÿþÿ³CôûB©æ÷aÖ\u000f®nx~p=L=Lû­Øð} lz(~>bg(Øcg·g/\u0017/ÿÆÏ5j=L\u0003UÂâ#cPo{=M\u0011ëqÀÒÓ\u0003Ò\u0002Qp\u000eCçBB=}¤Í}tëÿ\u0004ç®=}¡P.ÌïÒÆ9\u001b)þ=²\u0004Á\u0017Òc#ë¦«4\u001e4A-\u001dÄ·í ¤\u000f;²&÷)¥ºßhî\u0013î\u0005é7Ú|ÔÝ_s2CÕ=I{[J_\u0013\u0004ôy\u00189XÒIÂf\u001fzjX \u000eHlo=¥`èQ kèÊA\u0003f\u0016òWZ4ÉþË=@ªÚ×Wè2\u0006Fj\u0005\u0013î3QdaÈßÌ²­L¸=@Eä$ÐGYNÁX5BsúÅ\u0010D)Òß\u000f#n3²ÑË;ï×\u0014g»12\u0011=b>¨\u0017F¢7¥_¶ã¤°;åÍ»Dnþ÷Î=HF\u0007¬76cþ=M~0fPù=M\u001f\u0017\u0003\u0017'=HSyf\u0015\u0006`\u001ah\u0006\u0013iàWÎsâYTÂjû\u0017=@¿\u0006\u001fæ¹%ÅCHWXÂL\u0003\u0014îOV\u0017=@À'$ÏNÿ}Q+Ö\u0006\u001f½/¾ÐF¸Ã9U=b)£Eë\u00020KÂþÃâ]ÉÔ¾øÖ6Y&¹çø?4-zâ#Vù.Åº8\u001a\u0002=H:{=LªÂb\u001d9W;=K\u00075±ùÙ=JYx×Römú·UiéÉæ¦î]I%S]±&iÑÔ=@xyÏ\u0013ôØÃ$¯ßÄÑÒæ\u0001`Ïê7=KÚÌäëe\u0011ÅTï\u0012D¡ëäçOtm|Ïé-\u001fjý\u0019BÊ=J¡w©×=}\u0004-¯û\u0013<^üß\u0004\u0016'=KZ¨HDr¢þÍß0\u0006\u0001ÁOØ\u0006[=Ly¶ÎITê=}\u0014°&uW¶¾p_aqêºÁW·3#áÙ<òÊ;\u0004·ü=HÁh'¯x[÷'Tëìø=}, %pNÚ%7åIoãM&¬éû\u0001ÓJF-ÚMÃÜËsëÊ÷«|¥$mæßd8¯e\u0017.u\u0001=KDÃºÍæõÃÍª\u000f3B×¹@x>Áöæ8¦´\u001a8ÿ{-±5tÚ[Àÿ¾Gèë?~|X¶%\u001b6cºn\u0006@rfZ?§.6Óç²×pÃ=@A32\u000edIÆÌÓµÑvâ;¨ÁlW\u001aÌ\u0005ÕàÃí¯&=MÌÈOÅU­1E\u0016E>`=}=K[\u000e?[¿ÇLº1*$¡k§ÄüáLF>ÙìO\u001aOw3õ@ÏçÙÜ.¥KöñgVÀRlY(\u000fË\u0001àäw8)kò-©ö\u0018¨:5èß\u001cù·ñCÔ\u0015X; aó8¼_ãÔ\u001f\u001ftâOßòPoº<æ=HUQâu'ÔwÑ3áT\u0003\u000fN°2=b5Ê\u0003í¤~Ù4¤Äã®ÜæÓ\u0007Ã,£\u0011ÁÊíc4#\u0014]û©Z=}Â\u0005Pãä4ÿ(´öÿÅílPaýúbÕ\u0012m;»9Çd\u00118L\u0014]\u001a?ÀÖÑ\u0001b\u0004»ÎH´Ìå\u001fÚT®&ãóÕC@=@i?Õ¸¡§~=I&\u001b×[âÑ7D8W¼v«]º¿/?ýT\u0010]rÓ¼°\u0003Á =I\u0016·=M\u0006;=Mç_¹ñì¤Âï\u0003SZ7_G\u001f`K\u0011º=H®XÊác\u0014©rÆþ\u0004V1l3y§åÁÄ÷6\u001eèÁøKAçysf\u0011÷<=@Íí,ÂQ±©ZWy=}.7\u0004ªª¯PÆI\u0002dÙ\u0004On83Á¸vF°ø8\u0014udÜ\u0017\u0004\u0006\u0005Ú{£=OD:±Ý\u0010Z2\u0007^I2'Jò\u0006cò8h§\u0004HAç·L\u0011JõÿL\u0011¥/=M¾¢-ãMc\u0014{¯r\u001eº\u0017Ôm?¾¬Ð«-\u0002¦:¥sä½=K³ÃÚ\u0007_\u0002yÑfs°¿N\u0014H¤Ò\u0001¬úz·8=Lu=L{ca·C}¾;}móísfÀ\u0010\u0004i:,U®jg-\u0010\u0007eMÃD\u0019{6¿\u0016¨Lf*Âß´z½§Ä\u000eE=Jaîú2:Ðª'\u001arLsæ=KÐ >\u0019?=@§ÇPXG¨_~I \u000fx¸ý8)ÇÖ$wç~!jÉKøÌÓ½êpÒkÌ¦}ÊÞ\u001cÏ,G30¡§v=L> /Ë4\u000fy8!É±Å}#Ç°$\u0015d±å\u0013ÖæË|°©=I ¦Ò³Ô\u001bh­_=I\u0014gª{8¦'©\u0014\u001dpªNF=@=M=H=MH=}E\u00170tËP±&Õ²:<%\u0017@>ã!Æ<!N\u0007=IãÃ\u000f¬Ë@ÎMP~ Ö^îRôTäìG\u0016$_Ç~\u0006².#N<Ä°=L\u0016UýLdH=MxLúuÎwõg[?%ë\u000e¬\u0013++ÆÄ\u001c\u0010\u0005vòé=LØ¢zx#è%Í\u0001§fu|{l\u0014ØâéÝd\u0014O¡hÏüYGBPüÆÇ,÷,0;£=Iã©­\u000eJ\u0011m­/\u001fIZIÌ2\u0004ÎtNA|Ó¸\u0006#\u0017x}çseíöA¿\u0018\u0012l \u000fIdª?È=\u0001îê=Hþ×=Ká¶ð\u001c\u0012=K=H«ô%Ç#à\u001as\u001d[\u0011\u0014@úóÕñpt.W\u0010=J,j Î\u0007Ã-à\u0003á|=}çÞRû©(=Ky8¯éÖLì\u0001d=Éø\u0019y°ýðGtß>·àx´ê;ÕéOôG$jÛ\u0012ù\u0004üé=IÉRb\u0013Ar=H 5UÇ@¡ÚÎýÄ:^òÈXÔ±\u0015¨ñ]Å;{/*ãÑ7ÇsBG|=I=L^hA¢\u001e³Ã(½ÙeBVEeÝE9WL_<9;VuD=}ÛgÇEÀ¾j`$k¦\u0012IÓÑIC-¤\u0005\u0005©FÊ%i\u000f7zÈG#Â>ðg_z ÏU\u0015E=JÿR \u0018\u0019ºN|=HW±v°|@Dd1i¤N=LÊÇéÜ8Iï+­(>àóÓzèï\u001eê\u001e\u0010Ù=I\u0001ÂÕÞ%î\u0017S\u0016¸ûKJ<\u0004\u001d5\u0013H>Ï¡.=JÞÈÓSÛI-\u001e¬ô:=L\u0001Ô\u0010òÁ>°ÔaÇA\u0016å!v\u0017%\u001eX`C oÆ\u001e\u0019²B|mCdµð\u0007xî\u0006nØÁ\u0002ùt¤­\u0019 I(Ûo¸Püg:ql\u0006¬04\u0001<a65 íîG©³ºqöÙß5[pÞ3ùÇ\u001dÚV×\u0006á\u0016 ÜwQø\u001ec6æô\u0014=@¹Ä²RSéyÂ¬\u0017e!OÉqæwx©\u00036=JÝñÁö|Cò=JÜÁ\u0017d%§×ÜÎ+«3\u000eª*=@8\u000f\u0007P=b®éÁÏr=J(gf\u0007Ò\u0016¾¾U w\u0003¶4!½Öõ'\u0003IÚk\u0011®»?õ÷zÊ}ù/úE,\u0015®\u001eùÄ¦|M57¨»aCø{½\u001a ò»SqS=JyFn?¿®>L<Å=JQ¸;Û\u0004]fù%¯=H<§ÚÜ©¶¥:\u0017Ü´ªãð\u001e]îù°¥z\u0005îÞµ)NÃ>=@C\u0011\u0016@ÃÀ£Ô÷òt\u0010vDoÙ]E\u0012ª43Ð\u0001\u0013?cÈDixªbkÕa\u0013Quàf8=Kr=@²R(vM-:\u0004Üæß\u00106$'Û/Õq ÞÆí­qZ\u0018!Ô÷%¸zaûC¦^¬\u000e­ÃC=J\u0016ìHðb6\u000eå\u0010G¦áÚYGæØ¯ºªã¥ñ,Ö=M&Tð@=@vm÷\u001eª=b±MÂ^úûa\u0017\u0004?Ë\u0003\u001evÂÎ\u0014Î,ÙÙ\u001fõntX5\u0011N}{û£H=bJ \u000e\u001c,JÍøÌXtí'?äººäP~¬eU^®¼k^\u0003\u0006ÍëGÞ(\u0011n¼å\u0005\u0004WLnTº\u0003óÐ=KP\u0004Vô÷\u0012\u000eÔ¸ùw\u000fZLb\u0004«8þ\u0011r?w8Ûpä=}cx¶ô-^CØ\u0017pãî8<81TgÉg*ì¤3Â¹H{ï°¶ä=}ÑíZè$¸9\u0014tc\u001b=K¬=HÊ vq\u001aÞÀJIÞuòèÏ\u0006 ¼üIF©\u0003[BÇ.\u000f)`\u0017EÀiW=JÝQ¿ÇKÅÃb09\u0010ÌZäÂb?AM,$±\u0011K\u0007xìäaÑe=KÑúf.´É(hçíP.ýQê¾#uÞXqiÊÃÏµö\u001cð\u001cì2ù=|%¶W\u0010N«\u0012©%ÚZÏ?ùu\u0004?Iãb\u0001Fj-\u0002\u000fB\u0003{U§¯¤3²Sã\u001d?Àðì:ûÍV´¸ãgèoá\u001a×ùÒæ\u0002Ücól<oXâbL»çY\u0003Ù\u001fWªbG\u001d]ÎCd\u001f¿\u0005\u000f'|)V>g\u000f^Â¹7!ÄÙc\u001bvmm­+Âì\u0003K¯Ý±kÝ\u000eqn\u001dÔoÛ@á8¤p*Zá¦0×ËáïHÌpèãæ!\u001781ÓÍöLíÆ3w¿3ÏÞs=}ñØ\u001d@Î\u0017ÔTù_1³o\u0012§Ö6\u001f³æ¬P/\u0010¬iEÝ¦øg\u0016%ï=Kd=J)/ý\u0006CªBÿ¬\u001fìÌ°x«¥\u0011¹Ty\u0012¯ S4\u0016\u0012¾\u000fx|\u001eC¶|§Æe¼\u000e<\u0002h±ø*qÄ\u0016«LI©ÂS\u0002qD0`XîFÛO=@à=HH[fIàÿï)\u001bê¨¦Tçp9óàô\u0004Gó^éÔÕFyß\u0014ñP=IþÅ\u0002J¹èR£\u0002=JUEË=L=KT.×Çq´æ\u0004Ë:IP=L%ÿpr\u001e¯'Åâ\u0002n3óæq\u0005»=MïéÀd\u0014¡prÓBm}²«\u001ezÍÉ=J×â[¼GEÎxÜ©Ø#Ìûnº©£I¶©ÄÖCÚ\u000fÊ3ÀýÉñUDÿ!ªÄÔ¹\u000e\u001a·2@/ÚÝp\u0010±R6ãÄÿX·024@ôÀ¡§±A\u0015ré35±¥=}õÆ\u0011¹½ÐlÄ=Lª\u0018S©qÆÌ=b¶V®=J'³ÚZA>íÊyËDFagDÕ\u0018á\u0003çC\u0012ç@,vNQË\u0002Ý(ÌÂ©áq\u0005\u0014¹æ¹CK#/%_¿2æy<¯|<¯\u001eÇÍ3µã_è¤=b=H=K âÛ('Eí%sâK\u0006¯Ñ\u0002ÍÁúg{ß;¶\u0012¿\u001dÑ\u001e¥ v04\u0011sÇÛ\u0006#\u001bÂ=L&³\u001f0U^WH5H°zß=J§l¢Õ=@v²¢ì±@ÓGê±vþYöNH\u0007%=JJMdT(B&\u0013Ä\u0004ná!D\u0002U§VúÚØ\u001a~árè\u001dÄ\u0017Ýª'\u0019,\u0012üxL7ádÔ?=}\u001c×ÌTI\u0001vÉ¤~9úôñtÐw-=L\u0007KHII(\u0005)Jx©U.·\u001e\u001bB-=J\u000f\u0013ñ×Ç=}áÃ@G=@\u0007\u0013ÿ&¦á|fú]\u001e=LºFf®\u0007ÝíÜ6]\u0011\u0012s-âº\u0003î¢qÉù²p0=LåÉè\u001e[x³ê\u000eÎÚ\u0015À+üïpDkæ½¸Ânª=Ißôq:\u0010º£lçÔ{&:¤e¤¥î`<w°Äx\u00060û=KßÓhB2¦·fê\u0016ûÖ\u0003K=L×½Æ\u000eGÿ =}\u0010+\u0019§ÛÜÓF1\u0010®)êhô=KöÀ\u000f}\u0010\u000fÂ\u001d0=Mê®S#½ú\u0002oñ_Ü|\u001f=H{Ð8ï\u0006wgèR§HçP9tlà¼âa,üÔTf¶´ëQR,Ì2÷%~ËfÌ\u0016À+Ýý\u0001µ=bè\u0015=Ãá\u001a&\u001b=MµäÅë~­;zH[ÇÛßÎßÕæ=}¼Ù\u00134ìá]E\u001eßrÅwÐäÌé}9~M°®zñçßÛÂ¸]Å¸¬[=}ì\u0001èµuZôâê8*½=JÌ]z\u001c\u0002=Mt=L$JÆÒ±\u001fyì\u0017UPÀ¤M¯ñ»*WÊvIlPÞ§ìýÀ\u0006µ)Ë1¹\u0011® scÕ\u0013QËú/·áÔ\u0015'xã\u0007®~Ç=M´úA®å¯suÆnT+\u001eÇµÕ÷\u0019å\u001e/úîêèv\u0003£\u0016¶\u0016ãxÕ¶à\u0016#1üå_\u001b­åÿ\u001bAª\u0002¶ïû¾\u001b1¸\u001dHïcÓ=Md|õ©Ú\u0017¦Ú?pEê*U]Å©\u001em0±2N²ã0ÊAà_¡ÞfOÆ|3\u000eú®ùªf©û®f­{~×ùaá\u001b´²;ãéÁÊ±æ¬{xù\u0011\u0015~ñÁÞ\u0017\u0004Ï´vú1à=IZ§j9ß=M0ã´~\u0016.û=J.ô\u0011 ©ÚøQ\u001d»±vw)ÓO\u001dç9ãÀ÷v\u0017#q)vÕW½\u0019­dÆ\u0017:c¥e\u000eÚ{/æµ/æ=}»sd¯Ï\u0017uß´¡åÃòåÃ\u0012\u0017-dÆº\u0006Ô=MvßÐ\u001d\u0001o=b\u0001oD¤\u0012)\u000f/4¸`%=MÚk/ÿ»ï½\u0016ìr»%Ì7m3LöaC}×ý³f£*óE$ë5$ë\u0013\u0001\u001a\u0017\u001a\u0016úä\u0013E$ñ¾6\u001cºö//´¯=Käî\u0016õ\u0015ßþ^@wD¯ÙÏN¿VâDwÐ·þïðitD v|Û~>Ê\u001bWÌwÌäÝ\u0002ÓY^úi¿§( }Ö]~éÜzé7¨\u001aë*Å_¨wÂÎ¢OÎT¡ÀÖ6$AO#ÒËãÖe\u0005\u0010é:]æ*©ãÛ\u0005\u0016=MTF]F»õÜÖ\u0011\u0016æ<\u001dZW×ÑÕfªRú=L#úÏ'xy¡!qÍwnôÃÄzkóº\u001c½2\u0013\u001a/]&_Óþ©ÎÿºÄ¹I\u0011K¤§V¹ô!Tà=@`\u0015µv\u0001Þ×l±,ðOS\u000fæÐà\u001dþzf#]ú=HTxÄ\u0006¸O|¿\u001eÇ¤BÆD¤DA¨:#Á;¿h§?Ä_$\u00056¤/ ìò\u0007ÅëùV×Ýì)ÐÏP\u00026\u0006G¯fC`Ë§~Ow½3¬=ìÍ=}Uu´DñË1\u001a_o|Æ!\u000e^P\u000eòq;ì¬4¬¿«¥¬óóph~u?ç2z÷\u000f ]«±Èâs ÷r¯\u0013×=IïÓÞï¢â»ÃN¾Ø©µ=Mª8'\u001bncñ¬ªàxÞRIu l$/G4óLTÞ\u0013ý%5fy¯f$l=M3Ö=JéØÒÀýûR*\u0013[ý!¹ýf¤Gõ9^Ò\u0016yóÆ\u001bäÖ\u001cÅÁ\u000e!\u0018ôV)òu`~/Õ­«6ÍC¼¢S\u001fÅX2æµ\u00110ãå/¾=}ºä=@[òq;ªú;ÿhãsL¯ûxÚ2£³èg§¯âlR)ò^h±Á.t9»ÛËEÊáÍèY&ãR·c75ã\u00173Î\u000eøò÷\u000e(ç\u000f0¸eé*µÐ_à·eIw\u0003)=J\u0006õ±­}l§=@jÅ¢E:Êì=J;÷=KSf?OsQ,ÌÍÿÚæ\u001an1oÄÚ)Û<\u0002\u001a[çì×ClµÄÚ1Û<Î\u001a£4Û<nãÉ=}\u0001=}ñ=}ç2«ç2.ù(\u0006Ú@jSÛ¼\u0011.Ûù³º~àrðò:\u0011æRN%îg\u001e¯J\u000f¯Òfw\u001a\u0018@ö|ÜwzÆNòàê½6\u001cºV%~ó#~»#-Úuó»³5$âçsÅf¨ïI\u0002ô\u0016\u0004äÿ\u0019£µÒ#RÞqÂëå#PqÖ.$à\u001b\u0017B<¤yç=Kló5üÙ»fF¬=Hý\u0017î=M­=J$zg·/Öw/º±/n©¶áæ\u001f#\u0001=}-¤\u000f\u0017å°/\u0004­ÂÅÂ>Õ\u0017ñÐä\u001e¸¾Ö=@ò\u000eæ>Bü\u0017\u0019Tü÷\u0013\u0019ï.»üñ,ä¼ÖëiyäÎ%uÚýÿëqvþ xu±\u0002\u001e=Iu&àô\u0013=}Bó7OgÄøõ!\u0004=L¸\u000e_mx*ù\u0011§/û×Ó°ìT\u0001d$Ã·=}f)\u0007;s¬{ýGç4ZFÜÓC\u0006P{H¾g¶à²3½<Ç§Þ7õQ\u0011¯\u0006\u001d\u0017·ºhL \u0014²yÞqJGrÃ¯ÉÜ=K`)\u0015&´'««GMê)z\u0015<ä\u0011SÅü\u001fÁtá.kÈ¯Ç\u001bîÂ\u0019*¶\u0014x:Ôò¡6ðì{ÏS2EG\u0013=bÃ=H\u0013¤A=J\u001b\u001d¹î¯6<\u0015©=jQQLPXà\u001cJS°¹(\u0004\u0014¤>õ¬áßH9&B#\u0010ÿ³Ó3·\u0005á'.(\u00159;>ÿÁ5Å´\u0016/äµ@FG»òÃ®XúÁI¹ï\u0002òå½2½Ò¥\u0011ðtB9Èþ=}Þgq{\u0012q.=KI?Ã~µ®©=KWÌ\u000eID\u0015R\u000f·\u0018'=bn=Jû\u0005ôo{~\u0001AØ0 ¨\u001bç®Ã:ùö\u0004{KÛ](dÕ|\u001bíæu=M=Izê3Èu|ïá];ÄÛ¿(@;ÆÂÖÑH\u0001ésyÆÀ3ûqW3Ëo÷·NFMO¡\u001fóJ²øe­)Í'0}@=I3/Æè=KõhªêËÊ÷Ô§QjÁ:=MâX¹þvO\u0015Û±SìÂ\u0003åÆ7Ô\u0013­\u0002\u000e0pñÕV¡{º{=}\u0002=HA=Lþ#©÷¤©c¸0Åä¬{ùÂþ=K<T9¢YOÕhaÙ\u0003TO\u0016Õ\u0018~5©XD¼ðu¹á6zÊòÈã=bëºæ0,fñY=M`\u0006!Óû»«À;»=}ÛÇ!¾£ðâù\u0005OÙ=ÛO¥ÈÅP¨3%\u0005þ¿ã=bÝ=}?l;çá×kK±>BCäJÁå\u0016q5W\u0010Tð\u001a'=M¡\u000fÄ¤>ð\u0016{öÈ²ì@ÖMõ]$\u001cR.\u001a«Mº\u0014M\u0001<âµþ½õÁåÚ=JD°òÙ\u0005D²X¿óLnd÷PdíkËCûÛ×Ía${,³[/f@ï\u0012ü¥\u000e\u001däØã[Êxbf±Yr=}ñ17\u001bfø\u0010\u0016ÉÊþñ\u0007©âÞ×¸¶BhCÑà19\u0014\u0007\u0012{£0yO¼­\u0012X\u001d\u0006)ê¢ÝÓò'=H)ªÅ)ãì§ <ñuËÐ)|§hyjúÙ\u0016BÕH\u0005+ëÓQE\u0001\u0001Øî£®tOÓÿhË0Å¦¼Yå8[½l\u0004Ñrñ\u0011v-Ú=äJÛr;RÆÂåâH9°¸Õ<=Ý¥\u001fYÞï\u0018Ir\u0014Üeû4\u00136!úu\u001a}\u000e\u00155TLÓ­=I\u001f\u000f/Ø~\u001d7ý\u0001X\u00031Äñj÷Í·©Ãò\u000fê;¦Ç~ëuáBczjwMÿ«¡é6¼ÿqñýPÿê\u001d/v\u000e\u001e|Ä¶ÎÒv½\u0001HÆÊ\u00068 \u0011MºÊ©'­05·Oh\u0015+-Ú1Â÷sËõ³\u001e \u001dÆ[ÈÙ=LºÄ£ÍC}ßj!÷E}ÚætÕsr¬;x~p?ÃÅ=H=K8ü¦tWëØ.Û-Ç=H'?MÿÎ2Éò=M\u001fÇÜfcÕ3=Mù¦í6-JÏ4;úãÙÙÎöC¢=}ØJIX.^¤Æ+%ËBô\u001dÖà\u0015]viMYQ\u0012æí9q$¤ýï«¤»àhË%Á\u0001hÓÔ!é]ÖPø¾,d¶K\u0019ð2¶\u001epÔ²®6ÎïO'Ô¦ Ó1\u0011L,º¼ìáõã.N4õ\u0013¯òI/mCA«=b=}\u0019\u0004¾Åî\u001cd\u0007·\u0014}'<çñáwåh¸©¦W\u0018Þ¸^)HÓ­ð>²\u0001l¿3ª¼Þè_^ø\u0011\u0019µ\u00064oÁ)+\u0011¨¤<u\u001a!=K\u0007ëGú=K0VÝÐ´!\u0001÷\u0004j=Hv\u000f¢ïK\u0019=M\u001fL`qùy=JUNí¿À4@m\u0014àOÐtZ\u0005ôkÅ/²Ë\u0012uÚ\u0005Fdc¦U(?7Í7Ëý³L#¨36~÷\u0003o=LY|ÒñûMD\u0010Ô× \u0015Ò«Ô«wúÓ=¸Z Iò=.ÎÈÌº\u0011Å0,\u0010Àìp]±\u0016É§Y\u0004{ørö·îN@\u0010XÓI×ñe*üØî\u000eÏ¢tWùZ\u0015ª\u0004[\u0010z÷\u0019bs\u0007<À¿yüº¾nRã\u001axÀ\u0012nõdÈ\u001f~9\u0007\u001b6)#ehRLøö\u0014^rRX@üq\u0011\u001c7T=@Ä$u\u0013ºK]=Kî<PT1ê\u0002@ðõ\u001c9õì¸éWÒÙ³n#Ò»Ì|É¤ëfÑ,bÀ¾[ò§\u0001Ú\u0013p¡XÈºîìCC-°Eö8À\u0001ì=búÙtI\u0003ÜólC\u0001[ÓIS\u0010¥& lyb|/ C1#wÉA=JNÕrîÔÐÙê_©=L\u001e¬ì\u0012ÈE×Ósn<Ï9»uu¹Îý<\u001aíÏZ\u0017=Þ¦¤àõlQwé=KÝ¼\u0018*Y)î+O?'þ;§6EÓ£GAAë\u001fFF¥§¼\u0012\u001fQÔÿ§C\u0005-3.ø\u001bA-½{ a}\u0010Mç[Ü¦@Ý°r¢&V/Î\u0003ÃqÒ°J-5\u0004W\u0011+3\u001f\u001eÁWÝ\u0003àQ¶Ö¹5øÜÇ²Xò±~ò8ÌØ=L®@×\u001f.~lDÜ]òí_Crïnlr\u001eMá_¹J_P\u000eE\u0004=HeØØZa'n=H/ÂvVî\u0012Ê;&=bLÇ>\u0004É0n#Ýÿ=oüêZy\u001b\u0011¾Ð¥Zº·ôtGÏ\u0010½\u0017o×ã-íveöè*1¾±\u000e\u0001«®îl>î.v¥¬2K+zÝû=Káù/j¡Ðõ\u0016×Òãµ\u0014ÓY.¸\u000fý®å\u0010\u0018KQt¿²=H¹{Ö­¬\u001a+þÖ\u0007·=KmgÊ\u0013Mû=KQ¸Ðd~âP|ølIå-e\u00110^¾\u000f¾$w60u=Hé=úükxØ!X¹ë¤G¬É­º\u0012\u0012\u001aË\u0013Î\u0005¼´J³%S\u0010<u«èÏRët\u0007¤=J8ÃáS%Evì*qÚ\u001a¥ÁYîónýz¨\u0002\u0002ksªà;BçI:øz³éSîóBòµ\u000eÞÒLÓÔuàI¼!À\u0002=I´?h!efq¼ åå½&ÈµdP¸õ_kä\u0019Õ 0v¥ë¾,v|Óon5öèëP,÷6Ø±ÿ\u0019æ\u001cTc»}\u000eÙFSFE~D=Iàó=MçÃþ{.DdIç?_=ILh¨ù×Ï#+©FyÉ;N^«QÓ¦aQO1è\u0001ÛnZñ\u0001¶¦»X°\u0002ÌÕ\u001f\u0016\u000f@Æ¹F\u0003=Jq×ÂCÃô¬=MÔzù|.Â´¤Ia5óBkkÖeÓ~[?îS\u001d²`®#e«§Î+¿\u001dùªwïà=L6.ot×<5?\u0002hwi«\u0002=}¦PèrMÔâO½¤ÿÎ­=HùlÏu<²¿_ìYÏ_oáÂz¥²n×ò`÷å²50NÐc3­ôº¦\u0011}\u001dYúU?mb\u0012ÊìölB=òo=÷rq9]Up\u000f\u000e¿UJÙi¨­Ú£´\u000eÚ*ØÔcä_éØÙ]g}=M¹#U·Î3ýÙÖõ/B{Þ_:ïkþB[²È=}\u0005ü]ABGr=@4Qa\u00144x\u001ea\u0006úCh>Se\u0005¶¾¯\u0014äköñÊ\u0011ë½ÌÞS27ÔMèÃ¹+ÂSgÃÌùÖùIªÇì«H¿QFð'*\u0006-»ò<\u001düÈD\u0003rAäz½\u0018T\u0018\u001f×s\u000fåøøF\u0019z=Ke\u0004Et\u0006'Ï]qV\u0019hËö\u001c¢»ísÙ¢*ÜàI?Ë_j_ÎÏ=Jõ\u000f÷Ô\u0004\u0011¶ãfUO\u001djYiÖJÝ·A$\u0017ìAFÁÝf5\u0004^\u001c?\u0019\u0002¹<ë,'ÆÝ®yvK×ú+÷\u000fÌ6¿°ßùõ°2=I\u0016´N¢­Ú.Ns=IRó¸V\u001aâÛ\u00103H\u0014NCàÉ3Ï¬÷ðUWuÀ¶®Kiàû=Jâº=bJdS\u0018ÔºÑ:ç½ÔÎ\u001fÖn÷r*}Á}z±r_y¡çäìõ=KæÝKiáß}È\u0002ìs¸«¨¯Ë£1ÈSÀQE^k²\u000fÚô=}Þà¶#Âén¾\u0006ýð\u0004/àÜô¼Þ\u0016å¯©=L4Gf¿¾\u0018Þe+\u0016Øõ!JZi\u001aÈuó}¤=MYU\u001eß§\u0019t+HC·Aô¿Ê¹:Äc\u001b^¯^]=bM£o\u001fYÕ<É·\u000e\u0002¦k!w\u000f1B´æG×S§½ÇÀ\u0014§¬=@´çç&mßY\u0006·Vt¨A&ôÌR/\u0001¦=MX)F\u0019ÅjºUëSÐèúü¡\u001b\u001d®Óµ\u001b\u0014ý5jÜÜ 9êÒ±Ñôç«ó.úÆôÔ¬åe³¥°,÷7¼X@ßv=}\u0010{+Ãß$óë\u001fP¿\u00192ð¢cõV¨qX\u001a\u0002Nü¦jÁ=M=@\u0002ßô<ÂÌ:\u000e¼eèà:}X8W;Ü\u001c\u001c,L\u001d¼Ã\u0002\u000e«)\u001a¤Søäk\u0018Ty=MàY?\u0003ç\u0004Ãz»u5=1ÐV<}À-U§´\u001a´jpBãm.\u001dÝ\u001cµ­G±\u0015ªÝ°A-Ð)âæ®\u001d=@jõ\u0019\u0011¼#ðësK°tDªQ4ï Ù\u001dY=}¤.\u0011{}±a«`~^·hÎ0®ZÞstÁÍZÏG0¤¥§\u001c?VNÒ6Y%O0Ùôì\u001d¯åZ\u00042×\u000f«{Æ½_Ææ\u0005ögÝïá¬ëb=b¡`=IÏð.\u001d²¤íä¥57&\u001f±V\u001d¢Ê<þ\u0013$ãëé¡=I$w\u001eòÜâÊÇÃ /ÍºB12ÁfÆ\u00130\u0010üÂ­,®V­ÝU,²FIËÔÀ¥î&*Î1­{Ö/Õ;¯µpÛsº!«{zÊÁù|ûVDâÍ=H¶ºÔ=}\u0013=N {=H\u001aê¯ETM\u001c=L¹ bÍÎá#á·Û8dèg}N­«ºÍ:`[uS¹Ý \u001a\u0015ÙõA>fè«Ô\u0006L´N\u001eÖJ\u0013:×+þ!+ºA\u001dq÷\u0006s=b,Hµ ±d;Î\u0006þª\u001d(>öO»p¼)Ñvp£4ÀÏ¼8\u0012+²½±\u0001]^\u0013\u0017ÖÏôflô#WpÊAj\u0011HÿÚ¡Â4ð§zåßrBQ=b=JA!áI®ÄÒùÙ²½Ä\u0004uV%»§@l3¹\u0010øX\u0010.æWfÚ,7A)5\u0012æW5 Ä»³f1¬´A=Moà\u0001O5=LêâÀ\u0017oÇ:oÛd¢#¡J\u0014\u000føÚ2{±\u000f°U=LXª¢h=Lê¿`û÷ÂØ\u0013\u0002A=Hó|x(xDÅû¯?èWYøp'ï§\u0006á\u0006Í\u0006ÝïÄãa£kÏq:1\u0010ã,U:®Á¸&Jº\u0010£-)eÁãä&Ù¦(ÇC=I:U:Ñ\u0016ÔÊßW\u0013c\u0013\u001b&h\u001b¦ñ\u0007\u0006\u001a÷ç)áX$ï¬¤¾ n5\u0018¤~ñ\u001eX\u0003ó^'Ça¸E,. xÙf$øafãÄèÅÔ1]B\u0003U¼GíèGhlü-²\u0018h³\u0010ìF\u001aèr³Z0=K\u0006Gú¹9\u0012b=@¤-F3­äaÜ\u0001A\u0006'ÄîÿÂ©ª®Í°à\u001aÿæ\u000eå¼\u001d=L\u0010eÙ:nòÑèÉXV6¤Å»¹C&=@=@ßô<FwjG~ÀÇ÷{\u0004íWH@bD$ANo{@-27º\u0004¡çOôqÐû¿ï)½<ò(Å¢J\u0002°ïï7\u00019\u000ec7=bÁsÚ\u0010=KX=M(<\u001b ¶#de½ç·U5ëµÏËLq)\u0004\u0018\u0007¡_»R`«ÿÃI=LX\u001aéz~\u0014=IY\u0014î2ÈSÌN\u0003ñV®¿\u001emÛ°®!ûÉ·âÜ|=Iø»í$çàJÞ=bêÆë+\u0001ù\u0011\u0003¶l\u000fðsm\u0016ÿ0¡Úº=Jú\u001dså=è=I=@¤ÞI?·/(\u0019R)$S©clâ¹t>=I\u000f²\u0014XÞ¤=L1¨\u0007cÅçÂ«\u0003ü3z=H?¾(=@Ä\u0006öâ4håQÆ[BþÁ:øL°ÉÏ7A7ÿÄ\u001e?7\u0018=LaÂ\u001f=K4=HµãtüÐJ÷Õ*[`®ae¶Z\u0018íöaSa ¿H=L:\u0002_?ÐU'ÅZX=L(Oó®Áël&ø¯òÑ=Kú=J¾å­;Ñl£M^:ñìÇþ2 P=}znz\u0018¥GÃlÛs\u000ez 7ÞÀ7A\u0012Ã35#nxk¶l¼ÁI f/Õ(UvÝTsù5Ã.±§ÁNJÊ &O+¾ï/P¨­å¶m{:?¿P!:CàDR&´0¬WCÄÀ\u0002Ã@Øt»Ò\u001c=Ê¿bMlW³@\u001dµ@=K´ l<C\u0002Ý\u001cÛæg?ßÒíúJ5=MÌ\u0007\u0012ê\u0003¼îßy\u0010:õkÁ07ö7ÜWA°ê,OçÒ\u0003\u0001¢d \u000fÚäôÊ=\u001fÀÓ_i=Iu÷}=j«=bjiÉì=J=L¦R3\u0005Æ\u0019\u0013\u0011)Æ~\u0012v\u000f'åsÅòæ\u0015±óÕºó#à\u001eôØé.cÎ \u001b·Ýß_E-xÀáu=J=b\u0014Òî\u0006ÃHö\u001b=H½Yv\u0005\u0011uðºmÒü+äNgLø\u0018\u00196=HÁ«úË«3TbºØåiµËÍ¬µ?@g\u001a·\u0003\u000f~ñxØ'c8Íö\u0005)q.\u0001ÍÁK­xúÄËd®+¥<=­SÕ=b=LëÈÏÄ\u0004IHE=S¾L%J¶\u0013±W°qên®qHX@=_?ý\u0005\u001e\u001fÄEK3¬=b=I\u0014jnK¼Ô\u000f¡T ù­»G þdÚ\u0001±\u0017{ô=Láw¾R?Öw=MÓ\u001e{E\u0004_áð\u0017\u0006°å(ê\u0006\u0013\u00054dè6=L@\u000fµ/²tÅâÛ»Ð\u0019´'\u0012\u001dZÃcTëi¥ì?7\u001bYY\u001cTæ-=K»eøR¼ô\u001d ÜÏKÞÞ=b).Õ.\u0010ö<\u0013DA³~{\u0018pOÜ\u001a+ÀÃSÛÐ¯Ì?=MF\u0012=HT,Dÿ=@\u0019·Ç£\u001e´ïó¹ºxª~ÙZÅ$þzU°£äÛ¼¯Ol!ÿ\u001e\u0001é¡3¤W'\u0002Zs­|Øõûq-v¥ïÐ\u0018\u0007¡GtàGõ² k-bíã¸ÉZé¯ã Ï¹V=MÚª}Ä=JóÕùá\u0015+¡F|@v9=@îi!I1Ø{ö±!ÈA\u001b¤±þE³\u0004y|\u0003\u000eÙ\u0019!¼Y)=@°.ð\u001e¦ålè=Mß©Ù\u001aúÑLäsØ­.\u001aßL\u0013³já=b\u001aPøõí\u0011n½ËË¤à\u000fÐ\u0006Úª'ZqÎ½i àºc8«Xfjh`Ço\u001f-¿4Lg\u001c=JÄýc=H<=}·ó¥Y'ÈÇ-5uØ)=KG Wó\u001e\u001dB\u0003]\u0017\u0014\u001bzåÍx¦ uã­=H\u0014çÈâ¹h¹Ü=}º\u0011<x\u001dî\u0007z=×'\u001bÁ7.åù0%ðÆ.ßËùuðêB#5ãÛ=I$2b¯QÁ5^5Ð\u0016K¬QäI©7ÏvApìÂ¾¦÷87åtD\u001cw¨Ø*üCÆ<\u0015\u0016}W¶á+RÇSâ»d\u0004?\u0015ÆM·;9sï_\u0001Sý=H¨d÷¸°ça°êâ^ËênZ9=HN£'\u0013²(ôÔ\u0004UPÌNü°GãHã´ãñw6(çhàv¼SÈ\u001a)|¿/óæ=b\u0011\u0006Ç(ì(£Ø¥=Ii#\u0017\u001a;ìÿY\u00164Øv\u001bx­W#õZÔa=KuÌJq\u001d&\u0015RH¤·¬oò&ðT4¥ÕY*=}PxJ´í]ø²ä`9ÿ ¯¯{©È´¨~AßKúV×D\u0016\u001c¸1#\u0013=HfõQl\u001aº2Ì\u0003ùO¬ÿ\u0003#þõA\u0005Õ=böÂjÝÿ¤ã(sF\u000f_áõ&Àíï-U_\u0018W'¨s²{;µn¡b¡ºý\u0011ÚM\u001dõ¥Áû¤n\u001fü\u001bÉ²Ãk¡\u0018¥ïPÇ³@3\u0017þÆ\u0001iüî\u001dø`/Z½l±½=Kð­«Ô¦½Î#­tó2ñºhs[¼\u001bð\u000eÖ[±á3¬òo=I\u001d£cr³=@\u0011¯}.\u0012Kþ~ù\u0013Êá~£\u001fr»Kj±} EÞÀZ@\u0014µ,O\u0006Øì^§ðk0\u0016gµFa=M\u0001!!\u0017y,RYa{ùf¥u Ò=Mz\u0003þ+y»-µí\u001eìË=H=I¡Ìi­\u0018Bp)û·ó+jv·\u0016­lK¥¿¹ìU¤=}4h¸_R<\u001að\u0017Ðu[¹ö\u0014Úukr;ç=IR ³¾ÃTz5}Â2X\u0005«j/À7Û¾ ñ£5ÓÝ$Ô\u0002mp\u0017ù\u000fîúÏ\u00105wßÍ.w¡×r\u001fâÜu¯·æjÍÜ¹i=@ÂD³U\u0005r7Ó,otÃÑ#Æ¨ÙT5½ÐÇ\u0004¯Ê|\u0002¦> 9ÈãóIò 1ùî:®U¼(áî÷èÔñËÙ0^2ÎOºEº­\u001dzÐ!Yuè¤Ô\u0005ÔNÉâs!þãsE,'=Hì7Õ6<í\u001fü,º\u001ba\u0014RÑ\u0019´y÷\u0012³Üiè=bi'\u0006çÇ£å^ÔªÁ­éíßdýM­»Î=M=K²eºÿðJv£p2Á%©g=Hú²þ'=%J:'j@=@\u0003t¿óÅÏÎ-=}øSçÜ1±\u0014U~|Nò>­gdW¸×=Ia+_+OòHgÁ},ædóÐ÷<Æú~'$q÷¾ø/¦¬ßq½¾m=M:GßKº`ÐÀ]\u000føól¯v1î¥íÑ¸ìýú½B\u0002õÉã}Øö=M1B ND=@Ug\u0003à>V\u0001ÕF3\u0014=MKÍâX©â±\u0015¬±\u000f,àº!=@Ç¬²@4KÅ=}1\u0005C=J¤´%t¿\u0010\u0010¦0±W¯!ä¨D²óV\u0011Ãì<V­=@ð©ÍÐ3\u000e°©\u000fþ1Öÿ­³£¨·s=IM\u0018±ÓÊ«ëQië\u0012ÁÖhÏòs S8 Î²Ó¶ð>AÞÒõ\u0011ê´\u0015h'µØ\u0007ÛiÏÝ÷×3¹ï\u001f.ÖTÅß0[ ¿åß¨ºoQ*CØkÄÂc¤«0ª-)p[\u00014*lú$}-þÎgÃÞ|¬\u0003u\u0006?,ãÝÞº=b\u0005la§¢èàX·¸þðu\u001cO³¶òß+ìch\u0011K\u0002O¡Uø¡ûmcÌ Äñ¾uÔ|ÓÚM¶=IN\u0016ââu<^]±­ú ZÐÌqs¿f¥ò4±ña­Ø£ulPàûñ(ê.\u001dÌ=JCJ(Wm,Ù$=\u001e/hBûXEÞ\u001cÃÝÈ]ª~\u000fÂ?\u0007f\u001bØpC=H&ù\u0004Ózá\u0017`oh=´ a®Kíj¦6så4qOú¢6ÙÝ)½¯º­­¥²6;¸Nì.üR-\u0010U¦u\u000f§\u000emþþômy=K¨äB\u000fr\u001c[\u001dQ5Ù´=¤Ù°\u0012n2cüt\u0003Ó½è´jCY\u0001GKðË\u0013ÝUkl\u000er=H¯\u0011n\u0019ð,¿i@pÜÅ\u0018¹=Lù=@ÐfÙX!_)=@2¹|ÿ·\u00107Þù¢¼=LêÝVéÒöï\u0016!ð¢Y\u0018´^«×Ô¬¹Ô:Â\u000e0ÓÒ-Þ\u0005=Þd.|Ê\u0003=LYtÒ\u0019Ø\u0005áû`º#Æò=LscwÛ\u0017Û¾dt÷(À5,p^¹¸lT·UºõÒ¦Ýh´«úuÿ|jö¢©ÒyrÁM\u001d=b<1gÈ\u0014 Ók\u0019{kÝ«çËÔôZ=I3=KaÌú4^5f°ió\u0014/\u001b\u0001Ø[k=}ñ·ùê=¦mÍÕ¾Ód\u0017\u000e[ÑÀêjÞ\u0001è\u000fÒ;=Lx!ø¨U=Ll[ð1~Çd¦»5ãòk3Ó9ÚLPCö(\u0001\u0005\u0018_ÝÖn÷ÌÊ¹ùnq=L£ÛÌî^¼ALû\u0018{7__9µ.HLïB\u0003\u0019ì¤­ó\u001cx¨£¸Òç£û5Ýîå=@µzµæâgEÑÐeñî\u001b=LUhnz*üÔ4ì?1Û®\u0016Þ\u0013u~³msÊ@==@»Úuój~Ñèçg}ã=M­H¡l\u0013×õ%êQø:!\u001eeB½hÐéJ¬öÀå\u001eÆ\u000e\u0003V®ÖDHzºd\u001a\u0001\u001aBbOî\u0014\u001e=C\u001cB\u0017\u001cÀõ¢i:þ_¹zè«wÏ?Ä#\u0010\u00148\u0015­àÎ=HA\u0019¦¶¹>ü}ö^'u\u000fCQ0Y£Ø#ýmaÕ­ËÕ½¬²;W+5fÈ§=Iþ¤Ì¦Q_=Iq¾ì4ìT& .<Ù=IiËÁ\u0012Ô\u0012Ö¼^Ëì¬=@N¹L^0\u0002r\u000fÒh32erá\u001eºÄó½~HW¦º=J¦o¿×]d!ùz#ï`\u0002\u0017Ê¬Lcäa\u001d>\u00049ë_=IÑ %±úë*v5F/­>¢Õ2\u0014\u0017=slß=eÙßG\u001dx+=@P8°ÊØE#|\u001c÷UYa=K\u001c·=MÙ=ßñX\u000fUc}¾c{,¤®É}\u000e]á\u00172÷Z\u001dø\u0013¡ê÷±Fî\u001c#Ô®5ðü½µ£ª\u0002a\u0019\u0005»öÔ=@úýâ½Lößì`ê~O \u001c²ï¶B=HÆ^ë\u0012A¿¥ðËÂt1,$¿6¸s8PÇ7/é1Î'(kn.\u0003W¤{rK|¡Í^1¥ôuØ£¨Ç-ø4ê&B³ãÍ=J\u001c<p=J.¦ñ»@%\u0012+-å¼B-3¬ÉÎ­Ð\u0006\u0011ØÐ\u000fÝ-â2£ßÑÇ\u0012#´\u001aº?pÞ6Y\u0005\u000e\u0019\u0012¬Á7ÉÔ÷|$ ß!uòO\u001dóPæI6Iýn4ôñ$5Ó¡ô¶-îZ}?¾á\u00118Å8\u0005Ö?Z\u001c\u000f9ÒªÝV\u0006ÐcÖS¤eÈ+ðµéØÏ\u0014øÀÌ=HãùUg=}Ö=H\u0001¹U\u0019\u0012=Le\u0012\u001a~GÁ\u0001] xrsÁ]ï\u001bÿ\u0011\u0015½Àgç\u0019\u0004Ù]d«\u001d»}=K7ð\u0017\u0013Ø\u0002ô­¶Ý=Ê\u000e®vº­\u0016ÆÀn\u001dyÖ[#°-=b¶eß÷Þ¦Ñ~½+ªËCÏ\u0002Ø×ò]r®%ks\u000e³;\u0016ôfüöÓº\u001e¸D!=Ãµ>TÅÇ&TV*J¯¾«á¦oÅ=Kõd ¡ùôäz«\u0003Ü¾ÿ\u0010{¿\u0004Ö4+é(WîÄ* Ã´s\u0007LÑ¬\u001aÒÈdðT,I\u0016l¬ËÇk1ÕàÅÏ×1P'ôsÄ:L¤½<ø£Ý­¬ÿ\u001eüSKP4Õ\u0002fú¥=}ø&`Å=L{Ú«í­¿\u0014µXE±C+\u001d\u0003~ÞvÇ`S÷\u001eÐózhý?\u0010\u0015äÑw\u0013Ê\u001eÿ\u0002º\u001eáþ\u0012¼ºMÌÍÚ\u0005=bêâFÒ$¹ô$Ï\u0005÷Ê_`?ó21ó>i2hÆ\u001e>æ7ÙU'p,Fy3kpSô1ÙªË_è1ôÍîSòòáyo¿²\u0018ä<k××0\u0015\u0014°}gëëZ®À$«ªêÛçÛ©®ÝòÀd1¤\u0004ïÃëì\u0017Ì\u0006RX¯ÄÿÓX\u0016\u0011\u0014\u0017EC\u0012kMüeuÈÂCmÕz&rlUµ\u00139+:1Ëºo¿û,½àÐòõÁzö$÷¬ \u001b´\u0013'²ªâ\u0013[\u0005ýhÅ|]$éðÝ\u0011Ã4¥F\u00155'Ñ³>ùÊäÒ';\u000fG%ï2\u001b:²sÄäßáa\u001bL1¹Ð#m¯óu~9iLÐ¼%Æ£~=KðSz(Í\u0004*^\u001agy\u0005áVoÃS=H\u0010­=LÏ¢Ïz,N`Ä·V9åGD1Ë<Õ7Õ<õÜC0=-ý¼¨ÚòN=E\u0003À©å-E·ó³\u0019ùæé+¼ù)Å^Ô(oç5äW¦ßkLg\u001f?F è¬PÅ]Á&t\u001fÚèCÀê\u000f\u0017Ðç¤ú\u000fsø¹}³À{Î­_6\u0003ijáe¥m£=Mèì}¡®uëóþ\u0012\u0003Û7\u001c.©LävÅY9ï~oxÃëTâ«q7ÑPIôgÜ\u0013a9è÷9¢$\u001b\u001c|±+\u0010TÞQûðTb\u0019ã=\u0019$Âj¾1<\u0013\u001c\u001bZüóÂhf°BGíB$ô¾O\u0012øþzøÇ\u0012»=Iú<§ÕëÓ:²<n¤¦ï>X4ýk.\u000e¨=If\u0002\u0005M%o¢´Ü)ÒI@\u0016î»N_Ëx¿^%.å;þ®ãJ2=M ¡Y\u0001·PbKîév=HÁn«×z®\u0002.xo;ïì.8 ú8\u001e·ÀÒStSÛôFÐÔ2YjKYOT\u001bÛ\u001bÊü°4½¬Ì6\u0010\u001548½D·$©BS\u0018{Àk\u0006aÞ¥ð(Å\u0017³4\u00065u=î\u0018íË\u000eï?»\u0005V§æ·\u001evD¹2\u0003'ìAAhóÒUX¾cMÍ-ô\u0013kM1\u0011-T¬]4´ýÓ\u0004I \u0018\u001b =@µ\u0018\u001fÛÍ¤>`=} ê_ÝßC\u0001¦ÂÕ\u001aÈ\u0011âìÏ°ËÌoÆõòBnßòÔÛ£FÔ¦Ç¦\u000fY~Ò¤)#ÄW\u0017Y\u0010XË> A´\u0003<Ú\u0018;ê¶ví$|wMÃ¬±Ô\u001b³è\u0003=MÈÀø¢&ÎwÞõú<\u001aúý\u0011ËÝÍ2kSdö<\u000eÚ=J>w\u0004Vr\u001aí/R\u0001=M´]ã`jü\u0015à¬ åLòÙ½\u0011\u0012=M*ºã\u0002\u0019¼x÷[Ý mÌ[|hk\u0001ÃFH¼jù4r&neÒìL!hG\u0015\u0012üÉµ\u0002\u001fòá\u0015e}Ö¬\u0005V×Ý¸>fsÏée)#´\u001e=Hµ<ô«V/ò%<ò­®\u0003Î+'K>\u0003í&­R¡vÂúFðÖQGÅF\u0006.?=b¸­ö{CÆ£1¦\u0011Û$\u0007ü§î©í¿½×Y¯ÖiïIV¬=\u0014\u0015f±³×½Þ=H|Y>XwÃe¨ØrJI,õkcb\u0006ð=M4E§Ý_å:«5iB=Jc\u0018¹>Ãõ[ÐoN\u0007/öe,ý|\u001at'@\u001e\u0019VÜx4)Öðuk\u000e~ÝúÈnTq¼¶\u0019g#¸í>Wä¦6)6ì[â\u0010¦Êñ$´?\u0013\u001dÆÖ´b%3\u001bÜ\u0018\u00076=bcâ\u001b\u001dÚ½ÿ&tÁN?1½`\u000eÓc\u0015ÎãÚÊÿ\u000eþ.ý;\u000eDð\u0019uï\u0013¥ÿ×\u0012°¢iÁu×_8u\u00135Èÿ;\u00068ù>bI¨ô´ÙâZ=LI,Äm5s\u0012Uúu,¬9¹&Ú=JÈ#=I½=Ig\u000eñÈ?¹}<6á\u0018Vw\u0006{ÿ1b\u0018Ùm\u0018s`¼\u0016çÃá8\u001dD=MÐ#-pÈôËËPí\u0002*G¢Óí}QnÞ8©½Ããvç§bî=LË((NpÔe©ÉJÅ7+âàÒJØ¸ÂÛ§Î\u001diJÔ¨P[eÿÐ\u0003;Î\u0007Á/]A8\u001d)¤ænZÀy$~(Ö\u001fB¿\u001avôË´÷Ø½n8\u0012+\u001c5ýKèòdA®å} _\u001f$î\u0001_q=}ÂQ=Iÿ]¯-¼,}\u001cEF\u0014#¾llÉ=IY,ÆYJp5=}»p¸44\u00101d§ÔKáøtÀ¡Æ#:ÛcÝPo3«ëÍõÁº·\u0013ª<\u0005ê=}ýóÒp×üÙ+9GE´ö±X¤_òLàñ¼ô5!_pì¯\u001cÂÚõo9²Q\u0013TZ³ûeÐâl¿;C;à$Éä?ÍKp/ñ±Ï÷-çc=@(90g\u0005Û,YÖ[&6J=bÏÊ<º\u0003|0<.Ü¬«\u0007ÔÁX%$ì*L¸OÉ%9uâueg¨¿¯7,ÍËB:Ç'&üUñÐ\u0014´+=Iæå\u001b³üT¤ñ%Ïæ*©>(ót¤HA'H*1tÄ¯yèÑ4û@Á/ö1â°\u000f9ÌÞÅ=H¶\u0003{¤Êê´Í\u001cÞë=@?±=L*F\u0006Ð×BGE=H7)\u001e8·DFÇAå¸äÇí»\u0019AÈ\u001fÂ¦\u000f1ûÇ=H¢=bu\u0012¤úòXJn\u001f¡j¥æìêó=K\u001b¦ÝñN`65²¸ðbq\u001evÚ]²=b©2ÈñÃÕÝp\u000f¸\u0016õjÑc\u001dz\u001a5Ç°ÉG\u0007Aéú¤èíj1Ý\u0018\u000fûPØ<ÙAt4|rÓm0¼ã¸e,î>Ý[áÚ·*ý·Kß9J©\u001b31 ÉÇ´´=J³%&ÈÊ\u0017sG/é3å×fÿùm¤$ñÑÈo@ü|õ{-kÄ½¹Hzx\u0013\u0004{¾=Iõ©Ã£¿ù±×·B¯[v§_\u001cEa=}«ÊTf«NhÍT9£Äê¢Þ¥=HØ)¬@»ä'Y¼=H(\u001boî2/¶ýÏÄà3ë[¢=LÊJY\u0010ßKxxwM\u0017î AÂäÿ\u0001d ðµEød8ÄQ\u0002Ö×7Æ\u001f]-âb±Äó~ûT\u0005ý¸åÌì-Ê>=K½aÐÅµ%x\u0006n3ú¹é¢Û}À\u001fD«=MZý7«Û2=MÝâo*\u0001äBÁúB¶,\u0003\u0006iï¿cúùõ¥=@/wv¥\u0006mÂ¤/ùh2õ8D\u00128\u000f&\u0017ç\u0003¬%\u001e\u000ek!'[G+÷&\u0001»=I\u0006\u00137ÐÃ{BA%·\u0007K=I7ÁÆñ\u001c3tµe} µ\u001b;#\u001a;ûÇ)mÚå/?Ä>\u000f¾´×@Sò\u001d\u0017/\u001fó&Í,·%5òÇ¦Î\u001aïH53¶gÂ\u0016oÍhÙôm\u001c®\u001d\u0013sA~?Ð3Í¿èm\u001c£]TðX=LÿÂCwYLÊ¯8IØO(ôèì;¯lÏ¼1 ùÇùY¸3âhqÒ£5c\u0015ÖÑfm)L\u0006\u001eÆÍ\u0001\u0010VÝ=MnØl¡\u0015ëü&Cp«Ð*Sw\u0006ié6¹ÔlÇLJT`JÖäô[\u0004Ñ=H*ÎVC\u0019q¨á»u'É\u0016eÖ[\u0015=Jù¬«ÃÜªj¦½¨=J(=èJÇO¨=MÞ8)V\u001eúTÑ\u001dY\u001dÖ\u0001j¬é|Â¬=M%ãªit i\u0003rË¥ZÝÃ1Y%a\u001cëæ¦ºI_ò>\u000e À\u0017=@=I\u0015å|$dr=Mu¥\u0004¢çÈ\u0006\u001an\u0001fu=b}Úø\u0018X\u0006­ó\u0005Ka\u0002ª§Âî#PßNYZ¦$N:©°\u0019\u001dáÙp#8zï¤ÛK¹î.#ìhú»f\u001cñ\u001aDàÁº^²³X)b>ºÚò\u0013}Ô=b@W¬r\u001b=beè´þ$4úÂ¨\u0013².\u001etók£ ÂÉb¸=t¦éJûd=byÀ\u000eúú0f>ø¦\u001cO+ü|y×±ÃêÎ6\u0019\u001aqí\u0013øaPï=LlÐ\u0010å~BdO6Æ¹Ï¬b£\u0003j\u0015ýR,¥â¾pû¤ã®(Pæ¡\u0013$=KtJ(=H¥K*õ¼_¦ÿþ\u0013´ã{ûNm¸2`óUíëé30\u0004ý\u001bNBva\u0007ºe2O´ÔÆî>ù\u001a³Þõ­©æ\u001bi\u0002\u001dÿAZûþïï=b¿,5Ù[Ö\u0001=H÷Uõ\u001e4~j=M!\u001b_ñóÇ=Lq^\u0010ë¸!ÿik¯×n·=HÇÚ8@Ì×ÉnÜ,l\u0005¹=Lb\u0015=K)ÿMÕ¡:];nÍ=K¶qz =J²r\u0003°w+ëwR=bÈDøJu¨iS6çý>k\u0002®×ÈõAÇU\u001cJ?h«ïL=J4¦-Ñàn=Msk{¸Ø=b0g\u001a!`'giO*!¡ÞäÔm\u001a¯Ü¨Io¯\u000edØ0t\u0017þ*ë%4L=IzÌK\u0016*\u0013üéæØR\u0015\u0017,\u0014Ü@»>ZåÛ`1BÆºrÖÛ\u001bDxh·ð\u0014FÑDA =M¹£Ê¹Ã´e:ÈHÉAÿ\u0001x=J\u0011\u000e\u001dêmS=@²«*½¦G6wOî.=Jd\u0006;²#9_É[eE¾FYÜÅ\u0007îÂ\u0002Uz\u001e@Ó¼mrÍË\u0012E9àñ¸2¶Ù¡Qñ\u0016hÉ¥Q\u001cHVÆµ5\u001eG&rÁÒ¾¹\u0007ÿç*¦[=àSãº£½ÃòÁé±\u0002ªBûy\u0012ï½-ßÊb¯¨-Ä¸ÿ`=Lòç|«\u001a\u0018\u0017õ»ÄZ¬/Áï\u001dññ\u0007.öBÛ¡Ev\u001a\u0001=HyòÍõOæÂ||'¨Èb}D\u0015¨÷\u0015\u0004úB}*Ñ÷\u0001î=H.0uçââÎ9«D0á¨\u0014ô`lÕ]÷®Hc`_àÌ¦¯þÙ¢ûÜ((Ózî;Ôuj¤îZ°/\u0002êSws\u000f£±\u0001¥¨m¼}pÝà\u0017¨|x\u0003ücî{}|m«)<íÉ=HûrÖó%®\u001eÝg¨N\u001f[ûO\u001a-í¢\u0016±°¥Úÿ%+max\u001aöå:kµN®M\u0017ú&=M0\u0007\u0007XÚ`FÒr=HÓã¥\u0019'[k@^p|hÅn\u0014Sx\u001c Æ¬\u0004ÞÀ~3Û&Å®*=JÏ=}Ö}. =J{ þí\u0018\u00181t=bµJ¿æ\u001aöm®À-w¦=@Óoù>=@N8ÇGÁVÇ@ÔÄC«=L~\u001b\u0017©e«©Èé®,Ô\u0001Y\u0016v¦{h\u0018Ø~Ðol¨¥ëùv\u001c#=L\u0012`\u001d=bF*²\u0014ûd\u0013ìn~\u0001WÈÃ5=Hd=Ko´V+}\u000fªn­ìî=}ö°á{NÓ;=M´I\u0019\u001cðzÀï¼\u0015ô\u0014N=IÒèå_o\u00172\u001d\u0007Qs£*À=Il~óaA7ÌX.=}'Fº¨ä3f9\u0014ì´ÏYX=9ò{Ë\u0016¥ägIg^ÖcÒméYA¢ã(M7Ê8RR¦Ä¤cÕA4§±QåÖÔbvêÃ¦É=bkçè¡Cv«{uÛ\u001dçé3®1X\u0019aKÍ:aèø­x·\u000fT7 ÄvøqÈLÎXe*óÁ# _Y}îEºå`S³À¶Þ¿»Þ¿n²G\u0015£&Qb\u0013ù£Êñä¡&¹õ-å=H£&=I\u000ff©ô«4=M¾é\u0014:\u0018 &in®ÁÏ´¹7 Íßú\u0004O®\u001d0s=bM¬3.«\u0004(\u000e\u001f'àÜb|ô=g]Î;ÌT¡ºÔY¡£UãÌ°£îå±zÏ×¹ñ´Ô*ñÝjB!X±ª\u001aÐ\u001c¼n\u00024Q¡î\u0016Ø=Knlîa=ªné®*=Iö=I=Ik8°8PL×¦Ê(80íP6¸¯L×¸\u001fZ=¯L¿¸¾¹Q»Y=I«k=@5ÐáYã¡öé'Î\u001aEPmtÆµ\u00073÷qAâ¬g&Y1ÀóBZïÀXÇï;ù6Ó1,\u0012YrëE\u0010Ùb)á»øbB\u0010x\u001b~¯8¿­îx=}UÔQ8Ö¥çÈs\u0013«bÃC~\u0014\u000frÌ¼\u0016YpG7ù»/C×#\u0003\u0007\u0002ÂÇ{wÂü§e)DÞÖáÌ¥=b2ô6·ÁEÏÿ2~ú:Í\u0018'µÅs8E®+ëzüá^~Êc\u001eF¯d\u0006åÆ£¤t\u0011ãÝç\u0011q^Ý~=M-bÊ ÜA\u001eÁ?\u0006=}µ¸û×äIÇ\u0011#98~_ì\u0013Mºý6E=Ly[g#Í\u0015'\u0002\u001aûÌ!t¾ò=Mï\u0001UÍ=JàZ\u001b\u0016¸tBÊ¢ê$ÙMa¦Ø]EìzQ%|S=@\u0011 Üõ¬Þ¾ø×úV\u0015Ûð6^2.ÒM®P\u0014tøùzt«aH;M\u001cÖsÃÇ¸)\u0004V©?u?n3Á\u001eº\u0016>\u000fa=H9\u0015=b¾4'*\u0012«qÚíCüQä¬â\u000eÚ\u0015\u0019´úânÚ\u0015\u0019Ä(\u000f\u0016TQîàyUÚsI-ÀÙÇ½ÏÓÂAropÌÞ'OpÄ V.=MÇ]þ!¡ÐÇ¹mO'áC\u0012éµí\u0005C*¾DÆþ³Ô\u001c ×tÙ´¾/{ÇU\u000e¹pÍüÔ¤ì=}îÝÁkoö=¸ÄÔlqcO$QÓ\u000e_5Si\u0012ÝéööÏAçv\u0002=};\u0003f%å=M\u000e¡^!1q=I_Tùr|ëþ\u001fM¤üQÏ\u0015\u001e_© 8\u001f&Ðr])@ï\u001ePneäÃâ#a{'!ÅQsö\u0004\u0003{ÈòL9¬{¼øJµ\u0003hÔº¶\u001f34°Ùq´Vâs©ï®ÿ0ýÑÝûh´þ ¦^\u0003\u0017ªë²[©Ù=MJ¶ç=M®\u001d¶\u00030dHØ§××H»Ý=I<Ù=Kî4Â=bªü=f>4ÞYõHý-=}QÃð$­ÑÒ²/¸=M=JViS tV³â¥Ð )\u0005=\u0015ïø¬cÎ\u00175Î\u0017Y=~Ë\u0017YË!MÄ¾Ñ©BÆ=K/>^Ó¥u®c*À{øáv¶/öiq\u0015}â¿#ø=K«Ñ5¼¸I\u0005ÝS#ò>\u0018qò2J\u0012W\u0002\u00130´ÃwpVM(p&h\u0010·¥ðÌ§EòìûSð¾³5aé}!\u0013¬7\u001b\u001d9W­×ëÔ~ç\u001eäXþÉÆ£ÎwÙ%=bîig,¶VÞ¬\u0015\u00177õV,¹üÒa=}\u001b_=bÎuSÄ\u001c$8IL¬H?\u001bÏ\u0002Ùm¡¨\u0014=@¼±Üö\u0014l/\u0001×«5v\u000f:=@2\u001bì\u001bÝ\u001a{=IO,\u0012e1;³Kê²\u001f\u0016Í2èlD\u0004>ýj\u000e9íèàÁK¤Vù«=ÖÜ´a¯§nQ·^wyÀ7Ö=H5üDTp\u0001Ýò\u0004=Mcl\u0003-=HV\u0005©¯ª?M\u0018¼×¤ÿkß\u0013PÆ¡v#Ù\u0005úQ\u0017Þý_ví4Rn,÷_¾õd¬Ó°=KÔ|;I{¯Ój°YÍ£ªÓ°=bmþÐ-; äôÔ÷â='j;9C9=J¢Ó\u0001\u0016º,zº0£ÖÔ!\u0004h\u000eÕøé~RÑÆ\u0001ý)ÒTãÞSîÕ^é=IâävµI³,=K£Ãl}=M9\u001e®ÝUÄh¾ÏL#sYçÇq`u\u000eF-Ö=HcÙAÕD®#¿©Eu\u001frÚÂ×ø]\u0012\u001eÖÐøù?^âCs\u0003=SÇÃ[sSþb\u0010\u0007Ëú\u001aNêdYû_µ©\u0005fl\u001dÀÈ¢9ã<¢fY#jÚØÕX:ùÅm.waVµKt2`ûUx¬K=\u001eH\u001cæ¡Úé}§ªqþ±sÞ£\u0014´ÌóÜ-\u001dÐºt=K?£0}\u001e5ÞãÎ²Â'r\u0006ªûf\u0001´_=J_¬±£Û³ñº¨Ä==I¡}ö\u0012É\u0007)¸\u0014äÃ=J=}p\u0003ü\u001aNõ½ \u0002\u001a]\u001e)öÜø1ÔO\u001c%\u000eþIþÅ»ZÂ?ahc7\u0002S\u001dURc~á¦¶ÛÃÄ¿%³ø£=b¥Q`ÈêäÞ\u0011=Ì×\u00054½+MZe·\u0004k°ß%mC,h|õ\u00074Ý\u0013\u0011£4ú0$úkmCwí/æS\u0006û¦íÊÙê©\u0007¾=Kq\u001f\u0013\u001dº=KÖ¤kª\u0006ù¯û_g0Î6©0PÑW\u0010½(ªnN\u001bêàå|¬\u0010\u001flNöba×jÉX¾w\u0019a\u001føÔóõTÛMYªÙ%f1H!Xu\u0018LjkeB0´¡±¬\u001eôÙgæ½O¸\u0010M¼.çÔ\u0011­ÑxmÅ8¾µûËX{ k$OAòh\u0017\u001f\u0016\u001cÜz\u0003Ù 9¹ïë\u000esk%0Ò¡¾D©ç\u0011O÷=bcò\u0005ñr\u0010=MÁó±xñZæ·\u0018_¹Ñð.,´\u0006_W=Mö\u000e­fÁ#Q\u001bém6Ô\u0017'-Èkö¼rqÉ1¾\u001då\u0001å©÷!fz\u0003Ê1.L¸4E3\u0019¾áB=K ÿx\u0015Vá6&û¾ÅÊ!\u0005ë\u0001Ë¾\u001eûÿÂEë´$ÓôüÜ{¯Þ\u000e.yii=I¾!ãqþ?\u0007´vò<(§_\u0015\u0018²çöh|m42=M\u0011ÇbÁ¸×käQî¤,à\u001e\u0007zá¢¿G\u0018eê=}Öm=@p~°\u0005ÛD\u0015$ÚR2\u0005p¸êCý/´¾dñ=@mÄ\u001c4ñ¯õô.°:\u0013)S½|:8ÌÝåµ\u0003M¾X-çaL)+Z\u0017¬Ú Æ\u0005öOWªó»)%^í\u001f¾û?\u0018\u0004Må=L¢=bBíÒ `²×ï~´5s¤ÞØè¶F\u0001Ð=H^)¨×£Ëü,f¦=IuIÈã9@{*Òó½¹^ø®ÂdÞGfr­²ûúöF\u001fg\u0013\u0005èBvÖÏpÉúY~®0Ýe\u000e=MåÂ=b=JûÞä§CX*1XÂ=HapÀQî=}(}í\u0018»W\u0013=JÉ]\u0015Xüh«Hð×® #ÂQýéÁ¥i¶MÑ\u0014rL%dLþ=MçÕ\u0012\u0019\u0011D¡Ú\u001bj~`\u001cf±×Ù:wPàÖnj\u0001­s:ëÌ5]f4 æ\u0003;~üª\u0007[0gÌÐÀN¹úàâã1¼d¤«à\u001dïàÐåªzUyà¨fÑo=@¼\u001a¢\u0007ùädC\u001dp\u001eé\u0019aZO:«q!UN µLÇ¦²ä<VàB/¢û=HX\u000fÃ\u0012ï©&õTêÖ á}\u000fR&Ô¾~¶=LÄþÔãí»\u0012Ô=}õkæèÍ¯§C/EQüÇÂ×ÿjä0\u001az£.èýÄZí³â*=Hô\u0017mlDª=b©e\u001a\u0011\u0012m\u0001ÏbBQå\u0001os\u001fü¡\u001aÒ\u001dj§,+\u000fBV>òi_jùô9}ÔíS\u001dZkùô\u0018\u0003Äé¢. ^\u0013r\u0005=MÍòxS+ã®TíO\u001dê-Jõ°a6|\u0001\u0018²h\u0005vÍô\u0018#,úð\u0010y_sû\u0001ô\u0016/úçÓ­\u0002yÛ\u0007rì¯µïõ\u0019Zs®»¡÷-ufÂU_=b\u001d*ØÏn¯j2RW4õL¶2/ uO\u001cé4Ó¡ªI>0D7Ù­ö°á¼ò¡=@ûÂZ}øj'¼¯Ó çwªµ\u0006ÐÝ!júªYqd^YzÛ?Ò.\u0015äáwÙ£©\u0006\u0014ÝÍôx.\u0011jàïIÀùlþÙØfdKò²DáAû\u000e'ÇçFvQ#ÝMm´l%®#ë³£Ê=bý(Ì=M\u0005_sÂ=L¾=}*=K\u0016½ñÂ_\u001c®\u0007ËEhêÛÙ-[¤*N¼zY/L1!þá'ôê¦VåÄêSzÅz*S´\u0003i¥ÂÛSªÛ$Ô&<Ý¢=}j.[yg!ãÓ\u0005\u001a.Ú°þµvñ®ç\u000e¤0¼¯»\u0011.»\u0011/»1¥Üç\u0001\u00181\u0015.\u001aå\u0017mã\u0017m·»)­ÁýÏ+2*Q¶TÚÅJaøa¶=M\u000fßõ9Ù?¡\u0016m\u0011Ýgûp¶©\u0013z\u0018ÿáç'¦®^ÄMM!è]\u0005\u0016û\u0019ñðÑC\u00144=K\u001f ¦Lç©\u000fEKG=}ñ³¾àaÆ¾ 1eÉ»ÂêF=Æ¾N¾ø'<Ä´kØ¢ì\u0002 NÑYßËhßd¹\u0015\u0003·AÀ^¥LU¢\u0017\u001b_üª§=L\u0016ÍD\u00071=K9=bò¾`Òmú/Ú=KµðÔÕ=}{ä}ý%\u0019(ò°¾ÿ\u00019\u0011IÙ|w²\u0005iFTÏ¬ÖÛ`\u0003u9¡û²=Hí1ëµ\u0012=Lï®\u001a×zÁã }n<øÞûvÊñþFUã¶7A(Q18Y¸\u0010ß1=MBR\u0015½U\u0007!Å¡±óÊèdÑs¿!µ7LK¥Ð¯Þ4\u00109\u0005+1\u0002=HÔÿºXµÞt\u0005ëÍ\u001cQç®;DEnÊÀû\u0017\u0014Æ¼Ñ\u001cÇu«ÔåIÿçGÀBA#\u001b\u0017§þþ©ÅÀ\u0014éù\u0006¥U\u0003=H0\u0001V/Ð¶\u001fÛQ=Jd\u001ezI5Í«=by<\u0007´ñ2\u0016\u0007\u0010 U\u001aî3¢+>pp\u0003#0!<\u0012(¯C\u0013ZgBUD~°·Éþ\u0017²w+`Ô\u001dl¦è*Y7F\u0015êg¨Ë°Ôà4LëÃ¾Äì9F\u0019=b®éñz\u001c¦úT\u0015Ê[Cñ\u0015=blxC\u0018ó==@=Mv¡/Â\u0019È\u001cg7k9æq#±ÀõÉ&=I'D\u0001Ee\u000fEÔ¯½§+É!ï¢ç\u001bqf^sIç{êØÁ¯ñ\u001eÚ¼.Aôà\u0002\u001bWa £1lÝ×ÀG\u001dÏ=Meã=MOeÙtzó2SÖ(÷N=}¬=}­Z\u0018®Èr=JTÉõ.µcï>Öòâ¨t%¼lØ\u0011FäXãóg(Õ=}+yÌ\u001a¶º¡#i*Ëã=JçÛë5Â)\u0019º=K³%FóÓñ*}=M6ªUPjÍTñ~8×4-µ}r\u001eVõn­ð ´øäoÕ\u0003­\u0011¿Ý ÆÅî\u0017[7éÑ,Q/k\u001cÏÿ(g4ÕÕù,[=Fy¾=HF&\u001a\u000eOBæÍèûCÿÇÝ1ã*Y³[ýxñy\u001bú­µÒêÕÄ]»¢)Å{væ(pü²Nj)=I\u0006òÀCß,{´(\u0012&âW%gÐÖ¢È¯=K»>=JàÞc\u001cÊ»-ú±4\u0005üÆgÀâ¼\u0011°{Vc_B\u0007ùtkÓ%MÒ\u0005×ûl\u0015µêÖ:=\u001ba]_{ ´\u0005\u0004¢ÿ6³oÀÄ\u001d §ñFÚarßé¹I¿¨<Õ-o?!Õ\u0004\u0018\u0013ÍIröã2cN½¿e¯¬×b\u000e¦døLEÓ>0F\u0004Ü¼Ç\u0012­\u0002u-J%/Õ ô²­ªõÔ²Êp-þ=M2Ôw\u000f¼ÄtÍ[\u0005\u0018¯\u001b0-±<º[%çwëßâ0ªb%ã?tÝ%=}?Ä\u0016Fb~rF,ÏÇ7#=K¹ýcS/bw´×#³\u001b³ùî\u0013\u0003î\u000e\u0015«ÝÕú2w(¡wå5ëÀ­¿\u0014ñïY'£õ=Kp\u001f§`sïN¢rÅÄ'¦B=M¶téIl#÷\u0012ÚYõi\u0002û'¸°4ó¿õ\u001dxÔª=}Èb6=¡ Ñ9\u0013¦.úv£\u0006\u001d!ôã\u0014öUòúêk-jå-be¤ïû>0´Ü¼\u001e\u0012­s-JåíºÛV'u=@!/04s«O\u0012Ð\u0016)zì»ÃaHÕDWaÀwL=bI¤·°H×þ\u001fØ½rm.\u001do\u001cn¢ï·xãN[~Ä=\u0016;YwVTbnb\u0014y\u001cx|\u0017$xÑb\u0016Ñ.o®¸_=IùM¿#lÍU#Ìû´«Ê¯¹\u0012ÓµÚU[ÿ\u001d¾£'\u0012ÌÚ«ÿeë%\u001b¶Çá=L´MËõKòÿ=Kµ\u000e)ÞZ{û\u0004ªçk}>ÂS\u0018±O\u0014â\u0012%5e&\u000fìØ\u0002\u0014­aìÿUì=Hj^¯Xõw|KÎå­àâþÏ\u0014¾\u0011¸¶Òè=}uÿ\u0001´â\u0002±!\u001a3ùYß_¦@?Xû¶.CØ{^òðÁ\u001aØ;\u0015\u0019²¹õt=J²qÿ·~8æ¹Q¿&ÊvÅ\u0007dÁi\u0003¯rE#|Ñ&=MÞÖÕ\u0007$©Ê{\u001c;·N\u001eg¤íý¡¾=Lg=\u001f¹ãÚß\u0005\u0004³\u0004îÞÕ°.Â=K=ìòY±%ÿU¬=bÜ8@ÚùQ=Iè!%ù4µ¥O5:\u0003gvcí£ÛcäãuoK3=J}àýRöS=}]Î8(2(«½bñX\u000ej\u0004=I¬\u0012\u0006ý\u001f&I|\u0005G5Û¯à3=L\u0011ï«\u001dÇ\u000e}'ò\u000f/\u0017R¢\u0015Ì OÆñ»²×~\u001e=K5BoGñ»ªXò\u00180gDoÇr^@%ð=@ÝÔI&Ë¹ÉÚ¹öÎ\u00144Z z\u001e®æ.­=L=K\u0014a0\u001b/uÇ@É *ÚÅ=ìÂ_iÝ#×>µøÿÁå\u0002=L9õ©î9UÇý\u0013\u0012\u0013´ñÓy£h\u0010­\u0010®ðîeÞ\u001b?Ï\u0018áÁÿÚ»úAÿÏ×\u000f[y'0\u001dMÓæò?þ/[T\u0007=b\u0011uvû÷U.eÀ<à(¥ö|#fûÜÐÇàÅì=Mq{¡wª÷ö/¨¿T\u0004<ðCdÄ=HßiæF¼'ùÍzÎÜòjôûþ\u0019±æûàÐL\u001b³ùõG\u0017ÿF¬Ã¤/zàx\u000f!841p»õ;?1çqÏ3Ïð¦°nàÑ\u0012]Eêø¶MNCo\u000f/Ô\u001bùB~±J¯~²Z»³\u0011á¥5\u0010n8+sk}å!üså\u0019å_e DµÒ´øý|Í_\u0003§\u0003dT5±j-üà·\u0001¼¾QQ¨G\u0013?ÞçvrOLDN=}5ºï}g\u000f=MIiðQ4AÏn¤è)TõNIÜÑ°Úzî«NVbÎµcNðñ¢÷òo§²°ìFØ¡=Mf¯=b\u0005µÑ´Xy\u0005öSÍõÉê`²á|ÂMÍ=}W\u0016ydX¥Wk^\u0004\u001a\u0018é¦*2ò\u0014!¯Þù0¢N4â\u0011\u000fÉìp=L¢O<S\u001c(jÃjBnÒOìÐ E@cÁø9=M¸Ù=I\u0005)ú=KmN?ì=J=}wUßa$«DqvU\u001e{øÇ=KçÝË=}U4dÇ~vUþ¨¨ç=Iç¥ßNsT´ãº±ømKCF4\u0003| ÒÉÅjÇö\u0002| âÉÅtÇV¤b´=K=H&\u0014çßN#zøÏA»@\u001a¨\u0003T4=}Dº±øN>²F$Æ±xyøD\u0001C\u001a¨][*Ç6MÛb |{Aª¨$Pò özüÊ2°³¶íz¬êäê\u0016ü³Lg\u0001³\u0004A­=}ÔÏ§¦\u000fÀE\u00133_÷ÆÁ%*\u001c\u00133^\u000f§¦ÿ=@?-½Ó\u0003§¦ÿ=@E-½Ókw÷£dFð%jÿ¶9Çá¡=@[´\u0012KÑç =Þ±¸q P=LD\u001a~ZÚ×°Ñæ)ë®MÙaÄ6ß\u0012,è¤á\u000f*\u000f_KNØ¥ZhyÈFmIzKpvQ\u0018{ÈÝJ<U¨+ÚHSNø3ÚHÝZ¦LØB~Üæ¦\u0017dQ îÄYÀ·~K=@CÚHÙI$ÆÈ=LHÖ¤Zh{È=KßL0a=HéJ<U(=HmI^T(òJÀú5ÃYï_9¼òå¦âï«:¼$\u001cÀ=M~üû6IµrØ#ñÌ±ô¡øâ\u0015ä\u0012\u0006çôí¡£â-\u001b¨;Gíx w©Å¢yÝì=J¸è{\u001d´ãim¼\u0014Îô\u0002H\u0005®v\u001dîâ°\u001d3g\u0006ñ!Ä,oÿ¶ÀT\u0018CÈÔG\u000egSb9\u0014·Ë èjµÍ=H\u00071|<ÿ)|\u0015'Ç\u000fA~U\u0007&\u00197~ÕÜðÙorTàF\u0013SZ\u001dÖ\u0015º\u0011º°Ø+ï^å\u0019\u0014¥*+77UH\u0007Uªç½);fÎjRC\u0015'9S\u0013·ráj\u001dì\u0002fñì¯\u0017«\u0005á¸Îa$`Ú\u0016µ=}ÍËÐ ó&=Hô=bcÑ5\u000e·¬¿Å\u0003>xÁ*ïï\u0002ÞÂÎr¥¤.ø±ë\u0016ûxµýKëÜ«fÕ¼=}ôÐ/[v¦0ÖDd;ãUØ¢·J·~=}®8>î&f\u0004Å;Þå8`\u0016·=b \u0014ã\u0012eâ\u0005ü¡\u001aÖ@¡gàúØí|\u00124ò;|\u0013¦Â\u0018ímn\u0003=}\u0017iÅå\u0007,hIgãÇ×#Æ\u0011ô½gñ£x§`q=M=äfÝ¼áiïw\u0010Ûüö&(#o¼æ\u0019@o4ízÆ<tFÕL|ªÉ\u0016Ê\u0015ç\u0016a¦&+¹=J¯EÙ[q\u0017Ãk1H ¯¨X+ÇOF¯äßP\u001fKºù}·\u0015=b#En/\u0002þÊðÔ®w½=@«®÷÷ò1=L»r=L8Ðå²½ý[½ýþ¾\u0015=b¾\u000fÂ7+Ûl7Ã*08»ÖN×eU/3oF\u0016b[Üq¥²¯íÚ~×G3ë17ÛFÓ\u001bÌ²Íúqº\u0015¡ÌW5¦Í'æÖ\u0018ºwáÀÚ¯¾­ð¢Áû¼ÊoÿMà\u001dÛ£²\u0004\u0002\u001b¦|!·S\u0005ôTCåd\u0006k½AA0Q\u0006\u001d&á8\u0018ÚÂN\u0015²ùâaÚþ±`ÉË \u0004&è¿»ÂÉýòº5ÍeGõ$}?=}Hê}dN=\u0017¬´c-§9cw¨¥C§GCS=@c\u001aÚ¶õ±|\u0003<$,Å\u001dÊt¹7\u0012É@Ã/3ñæ\u001aõGDÏÛ+Kÿm©¼À6Í«Q¹\u001e[Þ\u0005Â÷ÌÛ·qS¿\u0006RRïoyÔå:LÐK1 Ú=L5ù×ãfCø_}ÏüâmUHÆD+=^¡$¡'ÑJÁÃy*Ø{QJ,åÂZ=Êª¹tÙãÛWúÛhªðoÂZ<¦qëê¢RâÚ\u0014®¡=\u0015Ì<£ÿçÉ=ICïUßùâéÇýX\u000f\u0012Ç\u0003ø<´Ìü=LI§\u0002QCaÉÂ6VÖNç\u0011ç\u0017Æôb°c®×e­ÅÎïO=vË5ª4ÓÒ,EÅ^\u0011yvâqÚÔZ³ÙISå^¡\u0013iQNÄ~:Ê?ê+GÓíþí,_]['Òá\u0005»ke÷æD¶ø\u0018\u0018m=MrcN{\u0014\u000f\u0012ü\u0002êáñ¯ìLl\u0010ÜëaFßtþ;á×gÝ\u0017Þ\u0013#Ü,6ÙµÚ\u001cm0èn3ÆxP*¤W×ãûë!Ó8±CY£\u0016Ê\u001aåçzÁ#\u0002¿D\u0019·ØûÌÈmÌ{\u0006e§¯öÌ8=Mm,§/Ê Wi\u0019]¥pZÜKQ{v¼\u001fwºõQ°ä¦eæ|Dªï\u0010óÖ~â\u0004ë^ïG0ci\u00166YÏnå%=@À\u00143Ù5a\u0010uøÐ{ÿÇ4\u001cóp=}=bjñ®§?;××ü»<î=@ûÉ\u0017(^ûY=JZ0¸\u000eÈ\u001cIË\u00137¼´¸A÷Ã3\u0019'ê^1\u0007MÊò²¥[eòÐ.êIY\u0013i1æA\u0011ÖÈ^¯tz\u0004Í=H`ÃÈc¦\u0001~ú=MAÆ=b\u000f\u0003fAÇ?_Çè}\u0010Å1/ÖÒªG\u0003;OË\u00104h azc4Ù>Zë%S\u001cu2ç%ÓN\u0019e\u001bØye\u0019®»B\u0003­´\u00053s=@[ä'°Ã\u0016TÄïºº\u0003=}Ä<\u001a7\u001c·oË½òïKA=K8{ÛÞÌâç\u0019Ù¯=L1¯¯û~HÝPõi¸Tíäþ¹á:ï\u000f¦¼ê[ò\u0015c\u0014²;NîÓ\u0012ÄÑñ.\u001f\u001a\u0014&½¥å]y_=ìÓCTGæ4=@&>J\u001c÷c=L0GçÒ@+Õ%=b \u001c¼e0ÊyÅ=bØßàk=}þyëVë]¤\u0013ùÜ+§8Õ3\u0007\u001eh¦Ã7¸ÆDmêO±G)ïæ) °¯¸ÞÂ\u0014u9NK\u0001@\u0016Fy®ïî¾l=}#\u0015É\u0016Á@[ü¾ýê0°)'03\u001a\u0011\u0007ùq%iåMh2o©=K6vü\u001e§2'¥êäKùEâ`\u001b\u0014\u0006ÂÇ\u0005µÈå\u0001õ+W\u0004õ\u0006º8»=Mç¾I@!³QÄ£/#á =@¸+d\u0017×ç\u0001¾\u0014pÔ\u0007Ô(\u0007\u001cäí»XI«ÎBÛbÃön°ü\u000f\u000e}ê¯:¶Ì=@Ig?DEEÌ©\u0018CÁ¥\u0007ø¡Ã//Ëód-ý¸ Ö[K}<~&d;Ù\u0012vß#@4ãât\u00135Ä\u0011/¯ò\u0017{ò=M°½n®¯ó92má¤bä\u000fÒï=K\u00123y°×GÑÀë¼t*À8[â¤\u0001\u0007ÒWêÏ|OÂÆ¾º=béB\u001dmÆZß¯VyÙáû\u001b5ç=@F¹®t=@Dã\u0018 3ê7XÕñà0ly\u001d'\u0018\u0004ò°Ï¸NÄ¨\u0011â2\u001c¥jå=HE\u0015mìGHð/ÞôÍ $»=b®'¬=Kpù\u001eÓ@`½±w°¤ÇiãÎ(\u0010§V\u0011Õ;Õµ±g`LÊBÿ¢\u0016»ÑDi½¬óÜèFI+=MÈu§ræe\u0013B®\u0018OQÆ¢YCuÍ|¾=Læ;ËIgÊ©\u001fèØ=JqFû°»óuê0eZ)Üê+«Ç!av[4ByÚ$á-\u0016üóæQ<vµ\u0002ô2ðÚá=ò_×á8>ïlxÝÇÝ]ìÙÂYØ³£=@Åv¶#¿=J»ãÜÃ\u001bS\u0010y§spåfC[ÛÜÂh 7ó60=bÒ\u0010û_¤õö0ë=^`«\u000f\u0004Æ.nÎk\u000eåýh`ÔèÚ^RSÓc`ËÄðûx3¡vÚÅ:}ç\u0004\u0016P#;øÛçéS|ù\u0018ÔA®µ\u0006Ã½\u000eÄÃ'Õn'ÊtÁ ô\u0011¿Íé³ü\u001f¨\u001e¯VSÏõnÏU=J¶Á ÆÛ=KvÎ69éSV=ü4Ñ±«òû©©ÞCµbÓË=K_Å£¼b;LÚ|U8\u000e\u0018OÚ12J]R\u001b.îEôQÂE!û n\u0010Êì4óáõºSU{¦0[u\u001c=}¸Q:t!±Ö×äÝë\u001b~\u001b¸õéÜ÷&1<Êª ÜQ¸\u001c»\u000eÖéºórªð¡A¡\u0015H_·¯(LÇoîÞ\u0003x»ýÍ\u001dT\u0011±ðÔ=HÂjÒr\u0005i°y=Lô\u0014ôØi\u0015UÏ\u001e0Ü^à $òÓv\u0014VE-\u0016§ÏBz\u001b\u0006»zþ­=Lßî{õª=bÕþ.5\u0005ÆV]Ò_=J(=J$è­äg=}?¤ÛÀtéÒ[E_ÉçDÐ(oC¶fDF×PÆáöM=}Ê=Iâ6É\u0012°Î±5[Í3@=@wÓ¤<Àßo\u001a\u0001\u0005w³\u0017¤3JÈÖ¶´²=bðÔ<âÌapü\u0013qe83ä%(Ï\u00064ùbÂ]¤U\u0005/«×Æ\u001dH\u001fÃtÎCÖã8ôQ\u001fÿ¯¿o³v'\u0014Ú=bm\u001dTØ®Cx(g<ÞÍ\u0012¡·.Å!ï0âÑÅòbcö\u001c¥Mº>.j¿½ò­=JíÕÙ%½\u0015#ØKÞ!DíxÞÇñÒ9­M$ÔÃR·»ì­ü~ãrç\u0011PQ»aèÔ±ß£v\u0013bW»¤N\u0018¤5ì¯f\u0017Éå\u001ccêuÆÞ³^ÂÉ\u0006M¡zgÿ=IçS¨\u0002×JÍÇÄOVPTâ1Ø6¤¾!L\u000f¡fñ­_§Â\u0010=Ko]mz¨×\u001c-Í¨j®_½Ã¬ÞAO+R)ÕÆ1Åï\u0005RO=}à\u001b<\u0001=@ÓfÒÛÌ×ÅmlÓ¥öcYíO\u0004Æ@N\u0012ùK1z,¯ZÔ7ò=H¢çgz\u0006óÄ>\u0014´=Iý®¹KèKÅéò\u0014vúK¥\u0018\u001a=JùÈÙÙsz½a4ÞMç\u0012ÄôdúÞ¯¼m-lËDjléHé¾Öê*îz ò\u000f¸èÐY\u0016Úmû7´®$BOÒµ:=HRËzYYWòÆÅ\u001fáRtXÙ¯hâWæ¬T\u000e±î.¶¾=HÜÄÄ^2·¯1\u0017\u0012æ¡!û}è`3'=Kµ\u0015«mæèîFÐßsÜ\u0005==@sKc§Âüs:OÒ|b=K´1k\u0013\u0001FgØÆ=¶ü¬Úaïs½1#ë¯lÉe£¿á\u001a\u0007\u0013·óÿ¬²üæÌø\u000f³Ý\u001eÒK®Äð|0\u000f£Éu=JèÁ\u000eúD:r-û(Ð¼»Î]QäjcÍ\u0015|?vj;¨¦\u0001ðé×Äß=Hhsø¿´SSz}¾d1ø`ïN_%Ì£=}äï÷kÆ¿£X`ú\u000f0Ct}Í¹zRÙ£\u0014¶NÿIÎ\u0016rôÂ\u001c1IU«¬=}\u0007¼AðsùÜÐÀ²\u0005«h\u0005n8_Ô\u0001~\u001crGX\u0005\u0001=boÎwHb=@{É\u0007i§$\u001e)4êd.z\u0014\u0007w~}üI\u001d\u0005Á ß6\u0001ºÉÿ×4Ig¾»{Ugù\u0012=J\u0004 ®LõA¿I)ó=M¦IÁÀõK²ëê«[=IMáO\u0010qì¨+!ó,=M]¤ê9p\u0012ª\u0013qjb x=MÃÓçÔ«ýmæ\u0011°õ\u0002x¡!)\u0019G^ms~bÎ\u001b{Ú~%¨âvÂa1\u0004µÊ«ä@e«'ë×Ç\u0004Ü³õ ,øõa±&6Xæm;\u0014\u001e}³¦L`öÂ4¢4§¦õ=bá¨R¶\u001b.sCþòº¾ð¸q²£L[@ÙÜ\u0013±Ä\u001bÚ¤Ây\u001a=L\u0019sí§øRãÏ\u0015@Ò¦O³ÅÜ?U\u0002SÒv;ø>4@>ä·Ûß£3­Ô·§0¤º(--oMÅ¼g$ÔW9®|x\u0010¾Z\u000e=\u001d-°\u001d(5´ôÐ­áãé\u001dÖðºÃ¸óÆÉ®¦U:nÞ¹;\u000e¹íï\u0003Ï~G\u0019ÐqÖ=b\u001cà=}¯>zk=K¢ãaO\u0015ã\u0007òàC\u0004U\u0013&¶Ö3ÿÌÕñbÏñúá(\u0016·Pf\u00023\u000e\u0019¿Øh\u0019+Z <\u0015~ÎÒ=L\u0014ãù¦@E§\u0001Þ\u001fVYéÇ¬©÷kcÚËJj·ð¿¥8*Ö´$Ô\u0003\u0015e>\u000e÷Ü2~ÏeÂÑA\u001aÃ\u001dRÊ¹=}?.7ÏÜxâ}m\u001b|Ó·4\u0018ÿ§aÓ»O=L/.9Ð`-âsdäD>ìOð6V´î<ÜR>l\u0016#¦=H\u001d%Ù:\u001f©å=If$b3üµ=}g=LO¿\u0015²¯;µ»¡T=MrV]\u001fµ\u001dBÏEUÇìÎ&Æ8WÊÂÍ5?\u001ajsÁ8\u0003Ë5ªWq¢n=}=JÏs^=@wÐ'=@Æ\u0012]°§Dò^]=b6Ûµ}p¡4ñä/´Þ=M2/Kb=@ý2_Pñ>ëmn²aä=H#Blre'\u0005*yÍÚõ%B\u001að\u000e[Ã¿æüÿµåÔYjØ÷\u0005¸³brÃõ'hËÆÝ\u0019DLAE=Í©?Ì~Ë=Käe¤/\u0010ä\u0017¢=MxWü\u0002Ñ;­1yd\u0013n=@}=I¦íK,jh¥Û[ &by=\u001fp|Of\u0003`j».[·²2¾÷eRõÈîÉ=b^/xýfSo\u001aÎ\u0016ç¤P½\u0019¡¸µ>´H¤,\u0012¢O2ó¨=KËLÆÄ¶=IuK4ÿ7ô<^3ÞÉbg=MQöYÍw\u0011phÿY\u000fûhÂñZ¼#ÚMfQ?ýM;zµÖ\u001a[»°qÎpHê&ÄÌW{\u0014`ÍÂ;t´O/ªçý\u0001ôUøîUø\u0013)à%¸V¥\u000ed%Â@ÄÔngñLÞCÃ×ØÈw+ÜñÞv!>Jw:\u0005¬v¢Ö3´mücó[4\u0013\u0012Å\u0004E³Ø\u00056=H=IA\u0019\u000fyÒO\u0014JÝQÎ²=Jø\u0013¿#Ôm\u00163#øÆ\u0002æÈ­y«ÿÍï4ý\u001biÒê.czZn=HD\u000142/I\u001e[\u0012¹Kn²]¿=I~ÿ­QìJà<ÅÍkÛ¤µ\u0003Ñ¢Êa2+Ì$,Æ¹Í¢Û>Î\u0001fXËççH¤Ê±í1cE4v}qÄ§\u0001lát»ëïè\u0012?ú<¼Þ=H\u000fªÜ ÀíPµûj4ªúÌ1!ÑóÓµÎ²¡ÖrÛCbÓóèG§aè÷<òM¶¢\u0011äÒÑè\u0003ùG\u0012Ì\u0001ö\u001fÀ=H¡hÎÁ¶ÃIÕ!7ò\u0016ºóÐ»£ûÝd|ÂÁ öi\u0012¦¹¤çIµàn¨CäZ\u0016cõ½½ô^°¹lc\u001fg\u0014l\u0018\u0003Ý\u001d\u0017ñá@{ëña£º=@ÏO,\u001f©ÚÀ«1~ôµ Ð\u00168Ý­\u0016¥\u0001\u001e@[6Ê=IE=@ó¨èÙ{H·&²=Mü¡§¹ ~U\u0012ã=}Üä·²ï=}gï=}g=I\u0004´«lÒD\u0010æ¼$=HîÑ£§¾|·]ã-\u0018Lq;Ü\u0006':¢\u0005~°Ñb|U\u001c$Ø\u0013Ù\u0010TºRîéxIú²Ü5¿¹\u0005L:=b}Þ(üvAtð¼¿-\u0003\u0002(£j=}\u0011±rôRèò:$Ü¾\u0018Ì>(Väç<®Ü%\u001a/l\u0019Ì\u0007/´®à;êaW^}uèÓ=bÑsÌÏ\u0006ÌÐm¢¬mLQüJxÑÄiSihËîØp_h\u0017`§l\u0013P¯ógí=ó6@-ßZq2èqÍ\u001cî¹[\u0016A nSÆÄÿ=}»÷ÛÆ\u001c8=M\u000fr)î=MºÉù§ú£y³=b\u0001ø©[#-X=Löáõú\u0014:js!ÈÚ|\u0017=}8!B\u0012!Ù£*\u000eÈ~\u0015öÞ|éüð\u0012AÏ)´/l&öJ×ïµÄH@Y#èYH)UÐyË¡\u001b©àÆIØp=}´À¶\u0010µÝ=Ãí4\u0015;G@IkBgúDé©ÞÁ¼Ë¦ä¼_ÊQëS¤BEÄ\u0011\u0007EÚÇC\u0011çDE$@>o=ITz=J§\u0010ñ¬(G2ÁiÀ=I7æWÔxÄ=J[g¾2'\u0012:gVd]vIjt=I\u0014÷Å\u0005(J¿P®\u00019G_J¬@\u0004CøSDé8<w9G:äE£x¨|\u0013oR*Ø=HK ÑIédùjª6Í8A/ÉckÐrGÍ\u0017ktÒdÇ@\u0011ÏÚ@G¯f(#¤ÈHÈ'ïðY\u0003¾Ç·&2!þµ#þµ#þµ#Òîz\u0007,&\u0018GAÀFZgçNZH@|ßN\u0010-=}«ÊØ])q§'ÇÒ\u001dhJÂª¿j=@[ZwÿÁ×d0Pµ8Jp¨bÃAö¹iÆ=Jø_Çªê\u0013[=L/=J§»7.$÷N\u001b¨V\u000e­JJ=}\u0010R¹ý³SÇÇ=LxJëÐÍ=@Ý\u001dÌÏE\u0019nn\u0004=HV\u0016=I5è{üô¢tD>?\u0016uOJUT`9}ú eH_ÂjW§©»úTïê(öX¡=bzÿqø«I=bØL]=LGvsæ\u000f\u001dÀd\u0013dyÜÄ9à»TÜ¢}ø7õPXJWP¸«fâ\u00188\u0003ØN\u0005¨ghÏàdn6Z2z4S<oCÖeU%9Q·@TC$ëÎø`.!\u0007=}ÁÎ¶ºÙ½¿/«çb¥\u0014±\u0001ag{ÒC\u001c¥Õ¿ñÍ\u001e=Lô=}Õ2¶:'¶¬ðï\u0016vy/ùo\u0001%ûFJ?[#Eïhr`1Ö\u0014ÓÄ_Ákº§,\u0004\u0010fÙáÙÊ\u0010¿BµBfB`Eo%z¥U¥Ù¾Õ~C{k\u0018´ïðñzßÜ!\u0012{ÒG=#,):qúç\u001an\u001a«Ú¸\u0011X9\u0005PÅ=Lð8©:ø¦é¦©})ôØÃJÉèIÇI7Vß,.º\u000eyo0rÎ2öhfH­dZ$[@=J\u0012!nm;DÄ·î¿Ô/Ô#5¿º¦»8du4ã´Á\u001e3êªÂ\u0019Ò³ûÊ[A\u0012DaÁ\u001e§%Æ\u0005@!(/õgýÆ$A&0Cã·\u0005\u0006\u0001utÞ.I®ùAÒ±àq\u0016<=M=@=M \u0015à¬¼c6`þ`\u000ea=baºUN\u0001¨hU¨![2îï2­VD¾¿?úË\u0003ýòãimY\u000eKã9-%Ó¿õ§z³*ÐF%=b}óuëÄ¢üqU_:aZ»IöEö¯¤@Ó.p\u0001THQh\u001cnÓ  ÒrÜP.nÃ$9\u001d¡\u0012\u001f(Â=K[J\u0019lPyöâ\u000e7[ÕhPf¸¤UrÁäbÁIòûÎo®¦ZbÏ8\u0005:|Ñ÷î@±·gÁ\u001c¨ÓörÊFSÎpS>³ºZaâP®/ø å8\u00020h4\u0011éÁÍÅF»ìÐjAAõ2]\u0001F3ß\u000f[oÜÈý\u0013DX\u000e}¢6=}sq\u0012#\u0003=Kb¯#Øæús-WÜjÒÜù1Gi\u000e~½Ä\u001d#Á4\u0002Áû=b=MÔo5ÇH´IÛF¤@IE^gB§q<MoXDIHBÀ$;tÂL0MSKOJHQR HPHHxPHHÈPHHHHHHTk´Ìåü\u0016,Wh­Åß÷\u0011)[r¡ºÑê=@\u0019.Taz©ÀÛô\u0010'bt¢ºÏçü\u0015)U^}²Êäü\u0015,Wat¢»Öð=L&[`¬ÀÙð\u0006\u001e^gz¯Àßò\u0013+]eu²ÄÞó=L(fy©ÁÖí\u0002\u0019-[a|¥¼×î=H#bj©¾Ùï=J!ai£¹×í=L']j{©½Ùó=L&=ez¢½Øð=M%^gx§½Úð=L&`i{¼Îæü\u0010(]d²ÄÝò=J!bi}½àõ\u0014)cj§´Éãö\u001a)=b«¹Ëâø\u0010#js¥ºãù\u0015-_e~©ÄÒëû\u0019-fn¡¾Éæú\u0010/]ey·Öë=I&cx¯Íæû=L\u001f0ew«Äßø\u000e$5ir¥Áãö\u0017)e}¸Ðâò\u0004\u0018+`f|ËÞî\u0002\u0013-m´¢M¤Ü£\u001b\u0013Z\u0017ù\u0003øh\u001aP³ÉÉ<\u001ahñ=beÃ_L;ÒègN¥¾Ú\u000e2Ê%³YþÐêt*N_m\u001e,RÊÄ»¾?5?\u001474á/\u0014äáG\u0014=K\u0012«®¬´=IAÇÌlOW\u0019Øä_Çãä\u0017¹Ï&~CÑódiØ_Ø¢»>\u001a\u0014«\u0005\u001b=Lyêf<R­hã÷h(jâ\u0015\u0010ð¨Øs´©=}=LS=bÏ\u000e¦f\u00106O:jX§Õ¿â¸i¥R×\u001eoê0ü/|\u0019\u0017ÚÃÒKÅÚ\u0016=ÛCÑÂ8®U¢\u000fP=Jâ[=K\u0019=Mæé=MHDe6¶Zïa4¿XDh*Rå/Ú\u000e\u001cf\u0018flNéàðèÇëó\u0010ºW(òof×eiêÒðHZ8ËÏE\u0018?H8-\u001a£1Hã´kQ=HUüP8½\u001bßH÷z~Ád<\u0002È=K=H\u001f¥8Å]ØïZ_á_|\u0011!\u0016i-AÉ ÊÑm\u0014{.mëNÑëbïÝ!Q¬\u000ex«Ñ5ìÐÊÐ=H²aïÛ»ÖÃäòinñ®ÁRH/2i@=}ïvÙxÀ\u0002VÐ\u001eºK=@eb/»oè\u0004s\u0017ÓùÎBFÜXøh*PZÄ`ÕìvoR«N=LTI!Èð*è\u0002»J\u0010åEXÃZ¬\u0006¦fñX\u0018Î&?\u001cq\u0002WDÞÉ=@iÉèËy(°\u0010Vàµ\u0010#¶j?ykÝðjÓ\u0011=},»àíVºv¥T¾Õñ/ØÙAxvÝÀÁ)¨*òíû=JÊ¯=@Ódµî ü`¶Ô\u0018\u0014LVÚ\u0015=K§Â¢'\u001e$¿>ïa£ÇÜtP=}»ùý|\u001c^°\u0019Üb\u0002àý;¨>é$4Ûy=Kä_BÓ/uæ½BÓ×èô8ZR\u0015Ì®=JÅÌþ®yZ§·7»Z··{\u0017¡&{Íy\u0003º¾Üí$=@>n{í\u0007\u0002kj>>\u00068ru3Å»+¡7ÕcU¡YA\u001fìáy;»z&¦\u0003@þÇ7\u0017\u001fì­Í·â'­\u0005=b»;¥±7öÔDú\u001aô\u000eÎeÍU×'¬Þ¦7Û6ÐÙ~û=L*|ù=L\u0014#£4¥¢\u001b<öülwk\u001aÿø÷»®F\u0003Îe=K'Ï\u0002\u0001´]Ð8C(»M{/ôr¯BòE\u0014T¾¦Uk,\u0014\u000f;}y;ýíÄáùr\u001e1\u0005¬üNSÁb%T1Ú\u001d?U+\u001a\u0001Ðÿ\u0016Ï3A}©.Èá\u001fQ°§´Sø=åN.\u0019sïl¨Ò\u001fLÐ$j§TWÇÓ?¼8^ßWk­a´ìV]Ûòúõ­i¬Òì\u0014ú*hüÖk¬=Mh==JHW\u001dËÓ\u0018¦ðb\u0002«4Å®Ñ«ÚWä=@\u001f$=K0Õ¿8Q§\u0006¶C6k-²bÁ¸\u0002NuÔ=bÞÙjõµÝÙ³?(m³þ5ºBµßî>°c/èÁ\u00199±ÏS÷\u001dþ\u0010æñ\u0015\u001c\u0018í3Z¿gÅ3«oé{=b\u000e{ÀABµ¡Aí_sç\u0007ëÁ®V6»=MngtÙ\u001e|¼:Mî\u000f(Móª{:\u0012÷±4êTuåî\u0015£\u0001qE¸\u0019í\u0003\u0007üÅ/×â,zÅ©¼Ä®=I\u0017\u001aO÷¢qÉ9LYp´\u0017AAB+¿g°É\u0019lÙ'¤9îÜËf\u00041\u0018\u001c}ç,«©Äb(Å:\u0006Óó\u0019\u0016ÅB\u00040Uq!-ç~\u0011Äë¹ÖÆ»k*z;\u0012·\u001d\u00067*SÌê=Hs«Vßg\u00073ì}Õ4E_¶\u0013À-_\u0017¸ú£8úUÑ\u0003;w\u001f}¿[¤+Ñ¶Ó\u001f¶'»4´-û.f+q¶=ISë+>e»C+ö\u0019}¸=Iò\u0015¡Áï=HÆõ­z\u0019m¸¼Ä¦AÕoåÔîÑíå·À=L×\u0011ÏhF\u000ev\u0015Y.^Ó\u001e´%Ù§¾;±ÓÔ(á¡U§ùiÁ\u0014\u000f;ÞfÎ&s¨>ÚýQáÏ¦Å=bB·üõC<ÍÚ=@Ü\u0005\u000f\u0017\u0004´_à9T_·8\u001bácW3ÇEãÞÑõ?$ÐÕ#úVå×99Õn\u0003N\u0016×ÒKÍ»¨\u000e\u001byÿ¾Uà\u0005´¤*öû?'½M¸GÓVHõîÔñ\u0005|_zè²=@gÆS(ØzNrnÀ¯Àå\u000fz0ùÎ³H×»É+ëÙ¤%¬þ\u001a\u001dÜQ¥KkÜþÉCÙÿMÿMù\u001c_LW+Ë¯v@=KOoïRÖ÷FúÒtH÷ ¶Y;(§\u0010õé=@gqK\u00045è\u001b\u0018ÅÞÒ\u001et0,Ø\u0014ÅL\u0018YÍW?5¸Hb3\u0011ÿJÃµUõ\u0015Jp\u001dV¹tëÿÛßde\u0010\u001bâ>ÏÐG}sàF\u00119\u001b=IÛQ=L0w×øH¸ÐIk\u000e\u0003Ý^/=@/=@ï°[\u0018=IÇ0×M\u0013 ~\u001e_Û¤\u0010§Õû^SFùÎ\u000e\u0006]ìò9¬k.n{JvÙ²`³Ëd\u0018\u0015É`ÔiªKµ«võ\u000e£\u0017tëñ¡Ë÷Ü=}XKi·T\u0007Þ#H¥õ=L\u001fIZðRLè9^:'\u0005­\u0019GQXp¤àxR_úæ§\u0017çH\u001f¡¬\u0016Ò©\u001b´°­ ÀqNCzÐþW§·Ø\u0019`eLü_úp=K³M<¼}uÀ(c¤-s\u0007=\u0005Ü`ðPNù5Í\u0019À¬ÉäË\u001d\u0006e\u0007ã^x'FºÔSëKJNA=K!öPA÷NðbUõ®\u0015­<ÂN\u0017p=}fÄ¨ìà¸V¾Ú¾D\u001bØéH¶y!ª¬ þÈ}øÍÆcF[A\u0005pX!³ÓL=}l\u0013\u0015®LÔyô\u0001´nPº HÀ]ôGÀ.Oö}Ô`\u0004\u0002xR\u0004ë¨|À0Ì³\u0003P¾DÅ8,XPêJ¡JmJÔöâÒ¬&zÀî¸¶ÝAóIÕ@N$=HãÈTêb=J#\u0016óîøG\u0005¼K~ûÑ\u0003ff­ñ8l\u001bnoÛõf¥\u0003Â>°¦¶Â$Î=}³÷ \u0006l #\u001e=b²êíñÑÉ^\u0011=K'F9:\u0019%sm=MoûûþôÑäg=03kâ°~Ï­ëûO×ç\u0003¸B)A{¿÷$÷\u0004*5.-*\u0007¹\u001eD Ô4%\u000f¿/k\u0017ó^íRtÉ\u0003¤°þüxBð<Ú¼Ï=L=KS6Â=Lzõ#ùójâg\u0001üú jÙìøX=gÍôVÒÞ6Ð@é6-öeï»+kÌ¦ Ò\u001e\u001cvv=J¯\u0001¿=Lî  Ñ':üÔk\u001fö,6ósEE\u001eæ\u0015\u0019î\u0014=H\u0006î\u0012Ó×*íás\u001bÞï¦Y§u[CÂCÂÁámÃ=\u0004Í¸ï³®.Ý:ú70Ö00Z¹=K\u001eG\u0013ÔÕAy»­ÁÜý¡)ó¥Ãì!ãkr\u0015=F3\u0003Ù\u001eÇtúnw¾\u0016W¹h]l=ÂÁãwuÜÐÍ­\u001eaÑÀîÒÒÂä8&L·Ï¦¢A¾°aë¨\u0006_ñ\u0012á&º.#ç\u001f®²\u0010Ã¬\u001f¯»-\u0017ÍM\u000e²=HÄE=}\u0004 H8·a\u001c^\u0004KR;Î¹A=J£p¯2=KB¿ª.¸(p?\u0018&&=K\u001aR\u0014ß/e Ü4­5]¥U×ÐàO\u0003õ=K=K¡=LÐÕ\u000e=MìÎ=@lêÈoXO±\u0003FÖ(k\u0011àºe_éµàheÌô¸eÉJ\u001cð=@üôã=H=KyÆ7ò9\u001dÍ\u000f£\u0006síJwçw³(\u0013Ïb³Óy.ëÔTU<=}2Ö\u0018Éÿénç\u000f­°Ò,XbÀ=I¸­¡@@>ãs\u0015ÁµMÇ´2D\u0007&oËþ4|rh\u001eÛ`{=}b£°\u001fG'ß&WwfÂÀ7àûëËEìY ÔN:}Ï\u00193=M£\u001fÌip-\u0002PåÉ\u0002QmÀè×Ú0W<\u0001ñ:zwî8£3ÊôØ±AtQ:=bÑUòwà­Ñ¢r×ot=}HÕ¹ÄU~èbb05ÀÁ-¸:î}\u0013¯A\u0003a¯òo(y\u001c©\u0007ðÃ¢;è2²16\u0010±þëUü\u0001ì\u0002rV%ÒB\u0014²Æ¼ýlo³\u0013=b-»ËÅ%dõoÔ}y`ñë=M/\u001alévgÄ;¤Æ$úñÞBlrÒS¹å´VNò°\u0005=J­óÕ\u0006^7'º¼Ç-=LYG&Çjn$!\u001a¼lpºè×õÊÂ¶=Lc:G¯(?ã1ûµÔMTpÃB\u001eSZj=J\u00054t13°zlB&G9±©4ÔNÄé{\u001c'\u001b X|¢ßÏëÊæ·Å¥\u0015}_»þtç6x\u0016ÏÏ_B§Õoêî¢`²\u0019dPQ¶±Æ\u0002Åi­\u0016ü9¤\u001c¤½¬¯Ü°ô^Fw\u001e~sI\u0005úg[¼7}ÇRÅÅÝ¨éÉ\u0006þÞÍ0ñé·å?ÿ!³ù\u0019?w\u000f=J\u0014Á²°è\u0005î|©öåæb4Æk=@\u0012·äÞrbB$Bè©\u0006\u0010Ì©ë7Åew÷f exßL°Kú.Ch¹b=M\u000fÃóÿE=M-E³î\u001aë\u001d¸l§\u0003ã6^nt¼y\u001fj :\u0010F>Ã%íE³JõT=@ÀÚ[´I¥jÂ®Õ[ý\u0019_ñÑB3[u\u001c\u0019#\u0017»T\u0019ÿÖ2lµ|\u0018A4@Ò\u0011â¸\u0012&¦Ve)¥#90 üó~\u0016 Ç\u000f\u001búÌ!\u001e\u0002b=HW¼\u0007\u0005Æ¸Ý7 uÔ¯8»#/°\u0014ð*÷w5\u0017ù?\u0011ÂÜòd¥=}\u0011Ì¶ëMº¼'Oý\u001dæ'ÿ~ \u000eàïÖÉ+¾º¼}>0êvBºuÈK÷[\u000fóé=I\u0017f\u0011úÏÑÖ]|\u001cCþ¸9`ÚÍÎ\u0006ü%9{\u0018Hö÷\u0005. ¥T*3\u000fBÓñûnS\u001cø×\u0017\u001d\u000f~BÖî8\u000f\u001fW½ø>õX:÷I¡+õ\u0019ÍÄ½=M=I=}A\u001fÈ%=IÐä°Åg2¹&uØò`¥íèWåÃÚ\u0014´hÕB§m¡ò«¼»x\u0002}\u0011Ö¤]à÷îÚ=M.LSÞ=bçæ\u0002`\u000eÿæ§ôà\u0010=M4/.3\u0011\u001b´ÁÊFÀÄ¼í°ìd\u0017\u0018§g§¥áèé\u001fÄ? giÉ¶PºÁv«ÙËI=MÄW>|g%`°éíÒ#dpæÒbÏóµ¨=I&»\u000eD\u0010=@¼à¶2f3CÜñ{=J^õ=@±Õ|Ydæ,]|¯¹¬e\u000f\u001c=J\u000e³À¹,2½cª\u0007=bAÌ\u0014¥jÒ=Jªù ´>'sª\u001bsc_?\u0012æ\u0011WVûÜ²´­óJ]?±p\u0007Ýz½­\u0007âÏïÜ[¥¢ñq\u000f¸ÝBd- ÖÜ#8Ävê\u0004fC`LVÏm\u0015\u0007=@D<\u001aÕPe¹fÓ%íòc0J\u001bU)a0ÖõsÊJ\u0001\u0019\u001b#þ=Lõæ{¦=HÉ%5AÛ[ý¼`Eå\u0006ûXSÆ\u0019ØÒú­ã¨ÌXäÕ°Xv\u000eG¯\u000ff=@kÈxÈ\u0006ùµ=Lþµ#¾úþµ#þµ#þµ#>6Eaó/n%E=}Õº¥Ôçþ\u000fO=I\u0012ìh=@wmPÚ\u001bÊ(kÎEµÅY·Y¬|É§Nº'¥=Iä_ënÁ;=}\u0007G©b{à=Md.ùÈt©as =MbPkÊpªÐkÉlkËtº\u0010ëÈjpëÊr²ðëÉn¢°ëËvÂ0«Èi`«Ê½¡çU!à!äu!âµ!æe!á¥!å!ãÅ!çKàäkâ«æ[áå{ã»çS\u0001à\u0001äs\u0001â³\u0001æc\u0001á£\u0001å\u0001ãÃ\u0001çOÁàÁäoÁâ¯Áæ_ÁáÁåÁã¿ÁçWAàAäwAâ·AægAá§Aåá|\u0011Dá\u000eT®yÏÁt¨Y \u000eRùÎX=JÐhÒ`*hÑ=\u001a\u0010hÓd:pèÐZ\u0012ðèÒb2°èÑ^=b0èÓfB`¨ÐY\u000eà_ðÑL0©³Ö.Â,ìo\u0017­»\u0016/µjn#av/¯bîàq'\u001by\u001d$ ~\u0015æ8yK\u001b\u0015Ìâa®=M{ë­Þáø9´áºDd\u0017}þçoïA®\u0012\u0016S¬ú\u0018äÃÙ\u0005¥tûm.=L\u00155%zuß\u001bRá÷|æ§­#ñ}>¶õåTùïé¾~Ô¸÷kÄ^1 Ü»êåc+â \u001f\u000e\u0001ÏºZ%{\u0011\u0005Ûk=Mû{%û{\u001cØñÞt}-ðuÕÁ²u»é=bÓ<h\u0014+=}îÿR2ý¢\u0017}Â÷Û\u0005tb­\u001alã^aý\u0012ò¥®åú3Ú©×tÃ­=bw#aW\u0011Â.«úçxË½\u0014ª{!=H´~zë\u0014²{#$4þ|4!\u001eÿ#e\u0015À¯û&\u001dæ6¶¯?¬·÷?=}!FÖe0äËåÃð³V¿5Ù6¹üÃe3æ\u000f\u0003?æ¹Ò¯å.á¯À>¡²u/ó1ý¥ô\u000e\u0013\u001cÂÍâ÷CýÂ=@¦w11^\u0005%î\u000f=}Âÿæ7\u001bCKzÀ ^×\u0012,Q!më¯­=}\u0004\u0014¦Ú%ózÄ¥Þ·\u0011<¥!\u0006w+×¬Eñ\u0014ßE¾x¬/&¾\u0003¿è\u0005£­\u0017Fä)E´\u000f5\u0019\u0017¾¯\u0017m\u0016ÿc{\u001e¶6¿â;ì=\u000fû¤§,ÅÝ\u0002â¥w;[\u0016'\u0014Cådß\u0017\u0017º@;d/§3BCdÇ=I;¾\u0007'e§D_\u001dHgB?\u0007\u0017\u00142!U¾+úùîÒåDÿsþÛó5îñþ3â\u0015è&*å=bþ\u0005}7=}\u0012Å?8àËè\u00122üNókRÍLÏY¸\u0007X ~¢?ïP\u0014wP³``£xX{apz(2`|f«xx3¡½®\u0019ÒÍüÉ=M\u001c\u0003taÔe­Øa\u0014Ã¬@DNüd¬Ìd\u0012åº¸',xüäéÈAúJ\u0006`Nqi½É3ëÊ8ìx×ì@ÄÕ=J`÷Î=@¤UíKö\u0007NÕ\u001f}h5µ¨&©Ëòîþ°´øÍ,¶ÏñS4=H#=K=@=H&\u0002\u001f=J$è=M/î ¾2Á#I$X`|X\u001f=I$\u0016a\u0017å©ð¾ÉX/Òñ×¥=I\u0015»ËíeO)O;¾¿Äf2I«Üo=L\u0007éèO\u001bSÕM&h\u0015Ä¨n\u0006ð\u0002-Ó\u000eåÆØôÖ½¤H=@æÉx®M²eT»´PÏ:ø|µªÅ'=\u0012ø®(*â=K\u0018îM=L4àÃÍéTÏé~J«ì]Ç=\u0003` Z«iTÐËÁ'È\u0019Qª\u001f¬pFW$¯KbQhUõ¨F=bbµ\u0019  VOsGe=I\u0019\u0016xÖ7J1£R\u0014«\u001b8á\u0015È­¾nÐ¿~Ü£»=Hí.=I8gªi\u0014Q=MF¨ ¦NiÿJå\u0002Ê\u0003&UÞBfXN>Ê\u0001gÄ>0O+ßFXP¨ªHrOl]h I\u001cMxAHSÈPHçW\u0018)È=@\u0010=bWI<[=HYØyL\u001aJ`K¢\u00178®iE\u000eÊ®\u0011¨\u0013i¤ß$ïH\u0007QÂMªóN1òI\u0005±KÆàe=LuL¿OàâÉ>¼É¼=IUÇW\u0018lwà¢BbcH:¯x@ÕÎ\u0004[Qù|VÜN'ú]\u0010=b>Ø\u0012¨bÜ­Í¡Hé\u0006d\u001a\u0019æèaK©²Qé\u0016Pù\u0017|83²ÓßÊ\u0014 UZ;°ÿ(%Ö\u0014\u0005L=IG[¦ËÅÍì[iÑk\u001cÉoî§*Ñüÿ[iÓQg~Ø¹JY/thª7UÌ²l=J×\u0001\u0010=IÂè¨?\u0005aÂæY²úaq­Xuû`\u001bB=}ÔØÃÊYÝ\u0017aFx­1äîtñ­\u001dXÞ\u001ev¬AC ù?[8üÛá\u001c¹zâ nµñÞQë?\u00110êzÛwß¦î\u0012 LGÀ\u0003ä=b\u0007ÞÓJ=*+ZM¥\u0006=I\u0003ôh¯dÜ®î\u001a|ÆöÚÞ¦Rg$ãR]uyñõòÌ7Gë*\u0004¡Ü\u001f&î¼¬»}\u0001¦â¥\u001b±\u0015}D\u0003qbù'Õh·±« ¯Y£1¼¿£é\u0011±£Â~\u0012\u0016¼è\u0016#=bÛµ«4A+·4±õ -îßíë?\u00161@ñV,@O±ÞëqEîk¥\u001f\u001d<\u001e=bx\u0016á>\u001d\u0002à\u001có¥ÌÁöê6âs³àcý».=KÖìÝ\u00012=IO´?X\u0013ÂÀR¿\u0005±EÁ=K\u00121(u¼ì¼3agEÄ§Ñó8k=JDA#H\u0004Yh®´QäóH=b=bI>æÈvZp\u0012K´¯KÝ¿È@=ÊöQ.·©(uù8\u001d\u0013ù)âJ¿`R-^UDøì=MI\u0016\u0001jü¢×8\u001aHÄu·ÎCëùøémRª=HFÌ0\u001eE¨Pz xWåwµ=L '+P9=\u0017¥p\u0001=n\u0007vh±\u001b?Å¬ñ%oÚz{Î!\u0019¹Tý7ûú\u0014Û\u0005:³m£^ÂÓõ0#¦>:=K¦á\u0006&\u0006=}5¤ì`2AY \u001bìd@èó²¸Ï®|ùä\u0007F@¤Å5\u0012Å\u0015*Ã\u0017´¢Ç¨4ÎGa²·\u0004svòãa[)=@·;ïæ\u0006±vD\u000e\u0015\u0017e=b-Å¨\u0007\u0006A\u0018CÈ'\u0017ÇQ@\u001c[\u0004³A®F÷¹\u0015ä%OÍ\u001e}çf\u0019=HçÒ¶¢cc§ZÀ±²\u001fMur¯ý!ºª»Ï6K´Æül+×]­\u0001ë'^_}§÷$½Ñò\u000fÕ\u0003Cü±8~6­ë§\u0011\u0005xMð¡NÄWj0¶=K(ÁmÓ=Ms,ÐþB»;þÀ8 Y\u0006Ï9ÂPÎ\u0017ÑÏ=8§Âj8÷1þ]aw8Ï«{º/*`zA=K¥ºj{Ï!\u001d<Y+4|Ó­\u0013ì=IN\u0001\u0018j¹®)-D¡Ü\u000e6¿\u0014£¯kÁ'ö=Lù×v=M1=J.\u0001öCÊÀôx$#|l(\u000eúFDG5\u0012T5ÇD±¼=Kâ@,Ré=@5î\u0002:\u001cµ·R:\u0001!=M¥ÃÃÖc@¬*ÝyÞÅH¡%ß=MC¢MTF~ØÚå\u0005%g7\u0007=M=KÚL:­n4Ï§=H(\u000ePª úÛÿC{>/\u0012 =Iû³­Þ\u0019\u0011Rú\u00054ãBÅ\u0006å©5tOq8Ð³½?p÷?êØ-3=búti\u0019Fo\u0007ÖËïdpx\u0014à\u0018§\u0012Ç|Ñ \u0011+é³.P)hÌü>ð±f\u0002¿=bUm¬iëk!â0\u0005ºéÂõäý\u0019µ¦2«\u0007=Lå=@×Pl¥Ü}ýÁ5½\u0013ÞS³²GT_dñÕÈ3ö\u0006 D/½<å¦´WG¨\u0004\u0002$?Îæ>Sû\u0007úªÝ#=bæò¨FC ì\u0019#\u0014BE<'2ãç |Ã|î-DÊn!-\u0002´£\u001fBh,ð\u0016ßÕ:a&©$ \u0004\u0004:\u000eê'`9Âø*\u001bì#/~Á`¯\u0006ÔY¿1-\u0012vÛlcÓ¥Äç\u0011Æ$ãâ\u0016*\u0010îýÙW°>Dá4j=HúbØµKÂfI=b¦Kì_È=MJÔ'KÔL(D§\u000fÚJKH ·Tø>¿)HSÍÇ'±H@H=bèíý×FÃ7[µ%?NN=}IBJ-\u001eE|ª\u0005\u0017H\u0012{É¿¡@÷Xx¨iËdRpéÊb~øË^¸ËoDXÊxli]%h´ÃT\u0015à&\u0001õiv=L7,è\u000eÇ­ÿ=J4\u001c>¬;¨g¿oãÇWT0¡Úã&\u0001åØ`eb*5²wKÈ¹ÝËÂÝ]¬í¾°Ý=[b4=K1´Px=Mº\u0017ÒêäÇÁÇ\u0005óÆá©\u0014(\u0006%\u0013:{\u0003ü³a·Í43¶^\u001d\u0014à|Â@=H&]/î¿²ådc&|=HÑô ·>¬«\u001d\u0018Æ\u0012Sû=b£9ý8jc\u001fvòæ¹4ÐÅ\u0002Ý.­D¼»ï+GÝë\u001a&eãõ£¡\u0003Àæ \u0013âEæo)'òEï£óc<YLD\u000f¬g\u0017ç+z?ÀmðÂ'@ÇHùHGÊ5Ñ«úKrMx$ü¿dëæ\u0019:=MFÎ9ãóXMõrÌ=J.¬YÑÊÏçÛ\u0013úí\u0019\u0006=@\u0007\u0014÷)=Ò?VmO!<Z§yg°\u001fsÒ+xÜg\u0007ªÖ\u000e¸øßÇ£Ï¨W×à-ÞÁ#æ¸6î c÷C¨ÿY\u0003\u0007o\u0010ÿê\u0018Àr!Ü\u0003)T2&5:NÑC\u0006TáK­`È£#þÕ´Ä!þµ&ÔÓ¡.Â³#þµ#¾¤##«ÃÆ¾´\u0014È=H.T¥=bb?o5a\u001b\u0005S^~`Þ Ï\u0014\u0011K=@:'XòsØí`KÉ2<bö\u0015[.~\u0003Óaï\u0013u\u0010Å·Õxú¯Ò[R¥ñr<(«úÝNÆl\u001cM¨kÊA=}{Ü\u0014ÈPþvÖ*@á`ö&Òë\u001b\u0001L¶tj}tM?î±ÄA½+TVÏ¬z¨Á^w¯+?rÏµ\u0001\u0014\u0005Ù\u000f\u0013ÕA¬®=xªÌäâSº^Ïr\u0018Åñ¨ÈÚ=KoÜ=V9îª+¦]\u0007ð`0khà{§¸±Ïè3¡'\u0003ÊwM×'P>Ä^ÜFXäCu=@;\u0018êø¢:ýÚGsÁ1³8ÂÑ=MuÕcl\u001bu¤B^Kí×\u0019BhmsyHß2\u001d=b|§.uÅiÇ3i­\u0016c|Åsmç@x;×|6w±Ö·\u001adçLb7ì=@\u0012\u0007Ø\u0012g=}ÿLßLGåÜ.h\u0004¸¾Ýè'Ä=Iùº=I~iÀÛv\u0010ÑZÁSõMüMSNS¾=DBóª¹\u0005ÒÒrvf)\u0003=M@r\u0004ÌÒ{¹rR%\u0014\u001a9\u0006÷ÒÁÕDë,.mù£Ý \u0016ÚÝí,ë×ÚÂ¶¿ª:=Iï£R\u00065(x=I3¬MW5]<aò¨E?,4=bvë\u0016çPT-2h\u000füòHCKMôðt=Hm3^xóIb?;1ÿiç=HÊÄ2d:\u001f{çç\u001dÁ\u0010¿-)y×ß2Ã.ù+­vß/ªÜã\u0013º±%zß\u001cóTãÛËÂ¸V-Ëºxñ\u0016\u000eÄ~»úù\u001c\u0010\u000e*^û¾®©äÝÍ\u0006^ç{a\u0003kÛ)úº\u000e­\u001a\u0003Ëö³zÐÖ\u0010è½'Tâ%\u000f7\u0007¼\u001c4\u001b±°Ø)û+a\u0015Ï\u0012Ð\u0004çÿ\u0012|N¢îy-³rô=MsxÝ«µqÜ=J2,=B=})EÍ¬B,oûÄÀz[¶n¹l)nQ;ÑÜ³¼j\u0002[àq=H­J\u0019_*\u0001oÓ¯¥?À¶gÔkVCî¹Dÿ~^µ\u000f <&=LxÿjN\u00079y,¦Ñ.³|ÿ=b\u001bÁ«=#5ë ]\u000fÙ¤7_\u0011/ÅY,ÂXD~äÍ)=@VPo°·`_¥=K ]\u0012µÁpúéìöQ)ÎPSöL»njàÈwÀ=NùíXa3J¡´X\u0010@»IÔ8Sèð\u0012gÿÇÌârD0!\u0013×óÄ9?­.ÆgÔôÄ¸\u0002,\u0015¡··þ:êü_3ñÛÁj\u0006Áx6=IïN¿ö¾ï¿S¿¶Ü=@9óÕc\u001br¤á\u001d&ÝG\u00018þ\u0005S^Ý\u0016|³/Ô¹á[\u0017£9»òkÛcjV\u0004C±\u0017\u001dtÃÎ\u0006ÿ+µ\u0004eë¦ :h\u0018^ýã~t¼ü©\u001b¹³üTô'ª=MÒi\u0014û,Å£\u0016øè?_»òª\u0015aÁgòdé\u0017i{vÕ}+Cj^ÿ}-Ð$Ì(Â«úEÕ±Å\u000eÐÆ=b´¦²\u0010=I~Î -b(9çO\u0016B\u0004$ë\u001aú¼ACÏ^É\u0014ö\u0015úÙ=b°DïÍ-6M²:9ðNÝ} ¢ôÖ\u0017ã9¼c×\u001eÖ¹l¼e\u000fÐäùl%eË\u0006=I`\u0012.Õn6\u000fpvAÕ*=HæÙ°½cÑ¾.PÖ¦c\u0016å¹=K\u0011we\u000e=b2é V­E*ipÇT.ñ/¨ö¶bÌ;LÍU,\u000f&IT3È_¹E\u0019=b×Ö%Cyy\u0001w<é¿\u0017 í<5w\u0002?wùo#W?(À\u000ff=L½¯-6¶,ü0\u000e»Gö\u0004¢'M9ó{e{©o²2³\u0018ÙqeÀ\u0003Ý=b;\u001eÖ\u001e=búû½£ÆAþ)1Ò\u001e\u0005³é©sdîü¬\u001bÝ^´5!J7\u0010.t$ Ô\u0011§â\u001a=Iüqîã\u0018)º«R\u0003~®Ákjð9'=}NûýiG\u0014=b\u001fEyÙA8Hh\u000e]Iø\u001e!þµ7Çýª#þåäµ#þµ#þµã{#p#%L×ANRa\u001eÙ-\u0006ÒgLXY\u0002Lá\u0014l\u0014=KµVVá{àèî)ÝÑ\u0010'o=HÎF9\u0011xdGd=JßêID\u001e×WÁ\u0005ø\u00191=IWa¥`1ÌÄÄBí=bøa$J¥\u0006®»³UÅK$\u00152\u0018ü£K%\u001d8äòÌ=LÕRþÞ=IGG -^«ùP­=IM(ª\u0017\u000fàÁv,~ûù@xS\u0012¥a DeRáñàÛÉÊ£ZÞ\u0006Ì\u001e\u0013ÀÄ\u001f_Ó»ÏªèØ^MOéÄúQ\u000fD¢p.·Ì(X$J9ã×Å/Ï\u0007æ@hø!SÖ=bæ¨W¼Ï*×¶`Ä*Jñno\u0018°=J$#fÆCþÁ#N­¸ÜúÌèÕ\u0014á@ÌQ$[ÕØ=H´Ð\u0006yÎÇ9EWØÀÓ\u0001\u0019ß@v,a¦'ÄTÒGI¶½%=IÌ3\u001cç=@N¶â\u0013ðq×y%{ÀôÆZ/Öj<XäöDÓv.\u0007(¦9c2¼QTÜýYîÖó¦røòÐ\u0006ÚË¶Ú=F=@kV~Ys[?¦¼Ñ»)±ccá¹¡ÝI¡|¿@Q¯8¤î\u0007\u000eÊ*vA=I²Õ\u0004dâor=bÛ,=@+Xñg7nñìÝÄ3¤R\u000e\u0013\u0011Úi9ù\u0017j=M\u0011,Ñ¢t9~Wk¯EÑ\u0007üo\u0019C4\u001eòõQU÷qy·GFÁ?ä¤­\u0005=bZ\u0017Ø\u0014«GZ\u000e±uz²nÆ[^hú\u0001l1D¿l½ÀÞ\u0002=I\u0019\u0005Ü\u00190B\u00129\u001c)¹²ÜãÚ®ð\u001c9T\u001f\u0019ÙhPfHrÓJpHöµ#þµ#ãµ#þµ#~'!6¯#þ³ýrùDË¬º¸Ãúç\u0011;zs\u001d\u0012­Á$:éN^/\u001fu¾[\u001c5\u0010Õ=LB=HÆªêÄÎ4µ\u0001\u0004ÃÄE\u0007X\u001fuT¬Ìßè Ò<e\u001ch»=}\u0010è\u0004q©\u0001°=@óä\u0010êÖo\u0001¸È\u001cþÌÙ%®ùlGQÞ\u0002\u001aØf\u0011Å¦F=}ÙwÕ=L/±O©50knëì96T¹ò£jÇ\u001f¨©\u0017NÄ,%Ô9#Øü±_ba?=Ji0HB.Vë<\u0013¹Ä¼Íg\u0005¯\u0019B8j1¥Ég5°ï¶£<fª[gÊ¿E GÂÉo\u0016÷=I\u001cAVk©Fs¬ÇÈ½\u001bgGDW±N=@|x+\u0012a¾d-/Ê°xwVS(=beY \u0010Ð+§ä=Ìî­ÃðPÁ] =Mñ[7W³ky¦OíG=}¨xö×S\u001c¥Î\u0006QÄ@\u0014hû\u000eJ\u0015öÞ0À¬UâU*5è\u0001\u0019IµfÖðÆ4T>º_pR\u0001)4bWøÂ*=Ju·ð®CÈË=MW=MëF\u0010\u001eS=L\u000fë=I@]fÊÞ©àôTÏ\u0001l/ê8%lNª\u000f+østfÿ¦lêìpQÅt=üBQ´=¸º«b\u0016=bì=KEntúx;xOü<¤äAæ×þòJ4-p´yúl9®îT\u001f\u001d±\u0018¦§Ñÿ\u000eX%Ë­ã¢\u0014fòOëKÖç´=JO\u0017®\u0018\u0016üj\u0015\u0003U\u0003\u0016½H&åp\u001bÕæ ½úW/¤B)½°X~P&Ê\u0003ë û¶dgozÑh\u0019±\u001c¾\u0014ÈÉÁVß\u0012.99=KjªÛÞPÊO=HXLÈÊùµ#þµ#þ5Äîþ5ýÿþ¦Õ;\u001dþµ³®·ÐùT\u0003Fo=Kõ±ú´ÔÛ=K9ëd)ã,Á\u001bî\u0006åjA/]ÁÑØl­tq;=KN]Ö~ñz\u001b¤Õ¯G+-L½^L³8GObDý[Ïdu,ü\u0001ÿc\u0007eÔ¼¡ºß=}Â\u001c1û>ü;nbè1·Ð=}½Ö\u0015~m=Jà\u0013?Ô¡¬ôqßfáêø\u001cÔÅ¹.°~/!ªS2«t±\u0001·\u0011ßÁÎ¡»1\u0002}>\u001b´@(µ=}a£:¾äúý/.YÃì5VDò5=Mn]\u0019:&Q;¥ìS2¥@r½´+\u000eÌÅ¶0\u001e=@+D\u001dåó=@_6\u0011D;ædd:ª'ã\u00153\u00041?©#egì+ÄAï\u0001g\u0013þ@9h\u0013ç¿E\u0019cS(æ¹h\u00193JyRê3XÑÅ=IôVé¿­PÏÅ¡ÄpÜ=M©´ÄX\u000eoOüjØGvÊEÙÄ _\u0011'¤\u0004b=MÌö°ÆF=\u0014<`:Õ«\u0001>«tÿ\u0004+ð!]ÆÃG_\u00172úL&$(jÒ÷[!u*æÄz\u001bîoûoM\u000f=Mq àïzÃr%>±4GmÕ\u0011ö14F{åÂ\u0017TL³{Ø;\u0016,=K=b2\u0004úPESÑÃ~F\u0007¯0Ü=Kågº=@­Ý\u0016:¤¤T;0äÛÏÝ²)+;@içµÅM`p(²iÂ¯S¡ç=LþEO]k;y¹Þmâ=J_!Bq\u0005\u0012WM­,frë\u0011\u0007äc'ß»\u0003J}¹M#6¸ôøÚðEÝàÀ\u0004=@Ò?§ó@=b\u0013Gó9Wõé6\u0003b¦r\u001dº\u0003ëÞø[ýSò­e«§2põõ¯F=IÂdc¸ä$È,K=IÕ¬E$\u0010©AnÞ\u001f~97\u0005áÛ$\u0014:[\u0015lÀþØíÍý\u001f¢0Vµ­\u000e\u0004=6ÿº\u0002U\u001d=MµtÄ Îxîå%S#q\u0005\u001f¾ÀO'\u00152hE²O!åD\u001e+Gaü6*²¯_'72ªß¦Í%\u0004Cöc;%tR2éÁôÏ\u0001\u000fÃ\u0018\u001e3-±wB'?ú,¶w\u0005æÅÄ\u001f\u001fÏ\u001bþ¬>)_\u001d\u0017>ùÆ^f0/ØDHñQK dh/(Ho¬OAuÂØ[êº¾TªCÂØçi>üUy=}ïiÆ\u0001ÌÙ\u0019x/{ÏÁ¹à*¥=K0g\u000e\u001a±L!P¶û¸'Ê@-PþÖë`]ÕyÁÜ_£\u0001¸³=ÅI\u0013«L<¿R ýÈ\u0019©IçRÀ¯rì~¦Ð¡ÏX\u0003ÍL\u0003Ì $Xªôjê=J=Lû¤YoOpv[yÁßÐ=J\u0013jB\u0007Ð=@²m®ÁÜàgs=MÄXÒ¡û\u0014DõªæX?üòÌÃQ\u001fklD¢p©¯ïL;ZÖ÷Ø¸°ËL\u0015ëZÆ=@p©\u001aQ£,ì@aA,l\u0012Ò=/ZqV\u0015\u0002NípØº·Ö=\u001bÝ^EríÂ+ÎÕrèÒ¾Ñ\u001ajÚ¾Z\u001a¨shCU%eÏ6Þ¶ý*ýc\u0003[Ç4¨\u0007ù1Nãú]S´:B|×\u001b=Kª¾Ó×gø=@òæ=M=Jtþû`Bâ.kÓ\u0013\u0006ú@2ÓïÆû \u001eG\u0017¶Ð=MC=KG8Y^C xc®)\u001c§^¤B à9æMõ/tL\u001eø¸/nS=I\u000f¡\u0018#=HÊ¶S&t(^J\u000eùxC\u0005`¼Ti#=MakÎ=LMªøbYÉíP¾µ^É\u0002ÿP²&pÌ¿cÌ(®sÌ÷ÇM¿HgL¨{H5A¸ÌWë@¨¤H=}~M¸\u0001sg¦8;=I}gì:\u0012t7ç\u0017¤À5ãSWº(´V,Ä\u0014N#,´Ð5\u0011Ê¯9¡¸\u0004[6N¬Ê¡¥N\u0010NtçV­\u001a)\u0010\u0012|À%ÛR3©C-=`íâJµñ\u0011èÝL®m\u0016z¸òLûÑø~I\u001av\u000e1çXÚ=@¡`S±¿«è jNÊtêépoR¤\u0017=J.öPPÕÈ;)ÜbNÚÃ6PdÁcTU:=Iø\u000fhPNdK©pnHVÓE)\u0015f|æ>Ë°\u0016_Ö\u001eA=H\u000e/&èC\u0016Sº\u0006Á=I·W 0V¯Î%è» ]¢O¥¨+g¯`\u001b/L&gdiþ=KIdâ4©(Öeô\u0004°S·V =Hô}\u001e¨æ®MSEt\u0015T(\u0011=J³Cu/\u0011=@Â=Md^·zËSyîè±\u0006LþsvN1\u0016Íh\u0007HFR.=KRÏÁx¡­v$ÅªJ4i«(aÉëþiL\u0005\u001eÏõ\u000f<èo_zn3=H4®µØ§ïM¢[ºÂ¯É\u001c9á\u00184K¦O.$0>çJuZÛ©:\u0011Ñ¸\u001dµJä6Ïé5²¸Áér\u001cþpË¯ÎZ sÖË*ÚùhüÈ\u0002\u000f:øwVÔÚM¶Ï|\u001eÙJ\u00113ë´RîegiñíËì\u0007Fwñ6B¦ÇE\u0004N\u0007Ùqz§ÐËªW1Áó\u0005iÁ²w\u0011b-êõ8ÊLmNÇ#9ï®\u001f&v\u001c\u001eZ7£L×l=Kc6Ùáÿ\u0011Lfl\u001f=LcÌCÁÍdµ\u0002¾æÖE7|±Pti\u0002n=M,ú=L\u0018¼Øôú×¼î4n£\u0014¾ØkÚ¬5nj\u0005ÅR À\u001bÚ\u0002Ö-,PÐz®Ûúíñì2¢¹{ÖlÉ\u000fÊ\u0010Ð\u0002w9¢-ê\u0007#[C¸ê ­ò/vh£¿aÙ\u0014F!¬\u0010\u001a¤Ñ,m´\u0006Ja\u001drîÏTzáÒ§aE:¶nvéÝ¹õ¨,·y=K\u0017zsmW{#=yú>sa\u001d2=Îw5=K=Yî¯{ÀÂ|\u0015} 8ü>¡Ö»úÀþÜ);-5Ã\u0013#ë\u0013\u001fßÜ£±ÿß\u0007RÝ/ü<ü\u0001¥'P\u001f¿ØC\u0010\u0017.îd¢=K¡W5(rËÖ¹ó÷§(DÝ¶}ÿçÃ\u0014%Æ=Km>¹ù_¯ÙT\u0018ìE?\u001c0/àq\u001cËæòÅ`[òDÀiµ¥¡\u001b\u0011Ãd±É\u0006O%¹\u001b×:40AÎp\u0002\u0016ÙÂÙßÏ/\u001aDi=}§SÃ%ý|{ºK\u001d&ÿá=b}]\u0019áå<ÒAfBmÁ\u0015ÀÐzýñ-'ªâíÅÚ~=@åé/1ûÅß°\u0005ï¾%èíkí\u001c­í]î¿0´7C|ùÊÒó1$ê¢ÆüÙ¤´é\u0005­×0âO1\u0007Ï}¢ <÷´Áý\u0004éEÕ7q\u001b&C;·=}\u001aÐû0\u0006K\u00071ü=}Eü{ÃÐîàè,\u0019°ôrÑ·Sí\u00180ã|>Ï\u0010ê³íd\u0016àNÛ?q(DÒàdVoséùÙRæ%ðÒ£Ã\u001cø\u0015¹.^=HÔ)ÑÀãaë\u0016÷\u0019\u001b¸\u0005'¼ÜwáÉ}\u0007®ªõõN\u0012_±ê8\u0001^²³\u0017\u000eé­Bêv\u0016EöÏs_b¨ÇÞi¶\u0001¬Ì8!`­½/(óø\u0001 =@«f\u0016\u000fBFM@\u0014¨Y\u0006W Ô\u0007v=I\u0019_>ùaVá«7tS´ø®¸§=×-Èg>£ª=J}sÄ ³Õë¦=b(=Lçþpq«×?\u001deØï)Ð\u001fUåøÃÉ{þâ\u0001(n\u000e]-=IUµÑz8#jTz9=JJµ·¼æ,Ë\u001d:\u0006@C×w\u001e\u00079ÿfî'<\u000fmÏJ8©hfÑRª]Ô\u001b\u00182¿PfóW=Me\u000f=Kd}5køuZç¾j£ZÍïê\u0019¿¦TÒCª/tí=L)cåÀD\u001bf×\u0013ÿmè=H~Y'Ç=LÃÞ) ßl\u0004%ßÌe\u0003Ûy\u000eMçí(Ù\u0004<=K=@\u001b±@=\u001a9»þ­¨8ÿT|_¬ªÎ¬^Võ\u0015=JVÍ´!àÕ\u0003,»x±­V¶a\u0014Ñ\u0014¤,¦/*'ä¼Wwc-+>eA >g=}R8±¡I\u001e*+0t^;¹\u0016I²¯Px(þHó\u000eRyßo=L8Ë¤\u0019u=LvY.Ò\u0018)èPfÑ¸; y¡Ò9ª\u0002`ÿeZ+ñryF4]«\u0016^=}\u0015¡Vª\u0019x×=MDj^Gä¬9|\u000f*ÞN^¼ø@AkÓ¹ a@ÏWû@¹ÌÍÇ @7uS\u000etP×øø{áÍJ«^Ô¦Ñ)\u001anyp`ÓI6Ð=H#¡LÖÝ\u0018£rÌ'\u000fL=HÕ8©\u0001_gd?==HÔ\u001eÄØß\u0016O}=Køÿ\u0017Íû\u0004d¸W\u0011NGt\u0010½\u0010L}+TànßVÏæì=JÑq¨aÜTªÍl\u0002äPÛZ¨¿d<m\u000eJÁgUcê(+=KP\u0019UOe¹p0\u001dL=Kò¹(+`H\u000f;Áø)øw\u0014*\u0004iÿ\u0011[Ö\u0007¸Oö=K]æ¾NýX¦øOÛ\u0015þ¨]«U=};t)\u001bw.§¦¢R\u001eQ®¸ÅQp'¢PóE.ËF\u000fx\u0017`ªOU¨Y§WÖÆãUW=Ký(¾=MtóKõàRõµÛ=H¡»J`lð=I>Z­p6LÉâJà¡\u0012=Iä|\u0004£{bÔ5¸\u000e§ú\u00030\u0019vA4v\u0007k^\u0002Ñ31/ì¼¿cñZ|X\u0012ójåÂ?Â§\u0001¹-a\u0006R¯än#r×ÛôìËl¡¾Á¸¨sñx¤¶¥Egñ+[Õì=êZZ<µÄ\u0010\u0018tÃz3ßq\u0019\u0001¯Ò\u001f\u0016h\u000eVr=LÇÚìÇ®6º\u0015\u0014û¹áVGË\u0014=H&]A¡Wn¾=b=®7àrSËÚí^¿:gÝb#®ÜCÆ6¢ð\u00135R-\u000e÷+Ê¬Ò\u0001Üz\u0012±n-$]Æ¸÷\u0004¬1ä2<?«UÂÁVE\u0017\u0012Ê\u000et»ê¶3Áü6|=}ß5vÐðê\u0017rÂðºK|%×6é¹ÚÏqÎåèvçéÑkßðé5B¬íN\u001f6\u001b/¥\u001d<Ì¬[ýãFà.`ÿ\u001b&M÷°6$W<þ.\u0002±\u0014\u0002G¥µQÙÄ¥N?GÜ=KèRMD\u0005µdBNðè/½ô³àÈ¯So«ë\u0019|ä\u001a|K}8ÔÜ~& öË!=}ùª\u0007i¶=Iú»/3Ä\u0004)\u0001PEw=IK®0´¯ÉñóQv$8\u001dbÅn=b©\u0016ªOÄ.2Ìvðd6ÎÊØ=@Á)\u0006=MÀ­Êg®Æ.)Ë\u001aH$qV=J\u001bXÔBXÒî£=K\u0019\u001aZ+·)Iï`ô÷Ô=Mfnf§å=HZA­ðcÙÌ\u0006¯Û¹.ß=,\u0017=KH7¼ÛåÉ9c{Ù%ãÍ7>¯+\u00165p¦æÓ\u0003ê:ø\u001dtg/\u0010=(éÒJäp.+VÅIrSØgv=LþWäÜp\u001avÃys^«5wy\u0002Y^W8¡\u0004ÆÎ=M\u0005t=bÄª92HÓGÕøø+]SO>ùó\u0015Ê1RyT¥^I$XÊ=I^IÄ/³±ðp-=I÷m\u0018þpS,,{è?rDåãT£o=Jäs¹(»kb¶×H¿\u000føÃ=PÚÌOÎ\u0013\u0005i>èÌ5ºÎ=blÃ ~=KbFæ¯=HºÎapîtÌAO.=HâûN\u0018»°~>tyæRÙ}+\u0019aZ¶ÕÉlM±x!=b£C·'£=J\u0006ÇF\u0003\u001e%m6\u001fÐÉ7q*½@Haò'&ôh=}l2ø_á3\u0001Ìü¼k\u0005ÆëKkÜ \u000f°WzÓ\u0013t\u0006/9\u0012ªà&:ú#\u0019¤Ä°Qï\u0016\u0005(lO,°^ó_\u0006«°ù¹H\u001d¹\u0017ìòâó115¼©=K©=bn_Ô\u0005ïPf\u0018(Òn¢?íåÂÆEsfFì£·èÉT²³Ô=M_x¯jÞ^=K¿|¸Dce¼6y¦\u0013¤TøPG¯¯Ö½LO_=b¨ÁÉKÒ>\u0003(\u0012\u0005f{\u0013O×2B«<=}hÄkT/êZNçl=Më4ê­ûua\u0001ì)Úa`âÍßº¸ÊWÇ\u0015pÕeÄ<³_¨¨\u0007XCÒ¸$My®#û@Ç-IÚlÈ=J¸.!þ%\u001d³7ÖïÂ´#þµ#þµ#þµ#~2n2`=b7W\u0007?©Ö/î\u001d\u001dGHd9n¦t{XWâ=Il+(\u0003=IØÐ®=M«µË¿(ÿØ8?:?K·C\u0017ø\u00178iìÎ\u0014Øc*\u0013W\u0004Ï KC¨QqðP\u001di\u0006D?Ém¼Û=Þv|ÎÞ\u0018VJ¼f\u0006£Db:.D:\u0003gÇA5WJ9\u001e5¿7%\u0007G8\u0019+oçÇËÚ00a`áàØ\u0017ÆnÀª¨ª©«/,.]XZY[ßÜÞ\u001f\u001c\u001e}xzy{ÿü\u0006lîì«)*[ZÛÜÙ\u001b\u001a{|yÿüù»º;<9WTQÓÒ\u0017\u0014\u0011C=}\u0003ÏpïÐäâöùí\u0005ûÏ¢¾Æ½'8@\u0014=J:\u001e=I!/Û»\u0011°£=@@l®^\u001cý¼Õ\u0014õ5åÅDsÕèòá£¸¡/(,*\u000e1\u001f¯[yø¾=}UÕ\u0016\u0014wñ´6fâ¤ #=@B0\u001b=brëì\u0006³¬¾½?<¥jóÚ½Â\u0017\u0014\u0016\u001d#ÿ\u0001|¥+\u0003.V'kx\u0011áÁ\u000f_~V\u00167¤\u0004ÅÏ\u000f{\u0001Â¸52\u0015Ïê\u0019+·Þºµ£Å;\u0006Ø¡ ¹G\u000ec¬¤z\u0003ÿ§oUò¦Âåsú½7=}/Æ­\u001b÷2=L¼f\u0007Îâ®\u0007¯=@R¸\u001b=@°¶¶úk\u001d7\u001b=@µ««ÙQÑ\u000eÝ¨²²²ÒÒ\u001a¥±G \u000e½©=b##³²:\u0005QöNË_öe\u001b\u001a\u001a¦æ5²Fíþþþ=@=KUmü+¢xÕÕÕ­­¡6lLèùq8%Zê|ðN³@[øN\u001bÈ^¢XUHÜÎ\u001d\u001fd=bË\u0016XTH\u0019Ãûµv#>úµw#>úµw#>ºÅþù'þÕ\u0016»d{yæ¼å]¡\u000fï¼8ôen\u000fC\u000e¤oÔâ¶ûn#@Þf¦ýO\u0011-¼=Kt=LÄ*°0cú×§a(¥O¸ß\u0016\u0016¼Ô.M­¥­¡9iµ±cÚ\u0016\u0019\u0006xcÛQêòãô\u0012n\u0006ìÓ_5=Jú!h;yãp2\u0002\u0013\u00024*BÀ\u001b$lçûÕú`ÓêñÏ´\u0012iF¬ÐWe=JÒ\u0001 l­Lq-ºùä?°1y£ºTe){{Éÿº\u0005Ý \u0017¯¼<äe®o@\u001e$\u0014hä¢¶ÿ^#AÖæ¦ûo\u001f\u00105T=Ku\u0014J*±,Æcùç'`0Oº×=Jvx&<Ô)m-¤µ;Yµ­£Ù&y\u0006|Pîâãõ\u000e®\u0006êóß4\u0012mú=M¨;{Ï°2\u0001#Â4.oBÂ\u0013\u0006$j\u0007»ÔþîáÏµ\u000e©Fªð×d\u0012kÒ\u0003=L¬\u001bxÚ¯Ü¾Íí¡=ICü:=@õbB\u0014tlÈ\u0012¶øzc@äæÿ[/\u0011*K\u0014=Kjð5V³ûË71-½Ã¹å\u0016|=JjtlÉ\u000eføyO@å&¿X?q*[\u0014=H ¦&}Þ¯Ug\u001b\u0016\u001bþ+|ad3s»xÝXò\u0003=M2´)³\u0002Á!¶¤nÏUùH»Ñé\u0006Ãô\u0017fÆîçÿ5\u000fµR\u001f`øÜ=âÃ=L.d)·ÎA ©îÌyuëÀa¢ÎÝÄ³ â[ì½Ü\u0017\u0015\u0012lJñ*óøÙw04M»Éôz\u0018\u0004\u0014jÚ6üVAÉ&&ø\u00103tku\u0012jZ±*ã¸Ø`4KO;Èêvz\u0019ÔÔ+}]¤³M\u001e:Q5«Ã\u0016Ø\u0019¹\u0006~o\u001bPíÎ£õ=I\u0006é\u00034\u0016]º\u0015Sz× b=@\u001fN4-_BÃ\u000fF$éè;Ôýl\u0013íÍµ=IF©=@d\u0016[\u0002\u0014'üÇqtOhùêpÎ\u001eþµ#¶#þµ÷µ#þµ\u0004C\u001fþµ#¾|¯À&<ÐÈC¿é¢LÆ­L:=MÓèz©]#±uÊk\u00177{ßjà#j=M\u0002?Ó¨ÓÓqãwÔ\u00057J \u0007öx\u000e\u0015\u0015¨ÉÏÍ9\u000fïÑ%=Êõ5ÀÒÅlÌÈ\u000eü£X¿õêW\u001fL\u0019F±1ÂWkØ=IYêÁJPQ\u0007mg@Y§¹ßn\u0003:Ä(]eó/=Mý±ºmwT¯R\u0015Áf|Z\u0017ãG\u0019kOFE=K\u0007\u0017²ü8wöî1\u0018w&(°«GÎ×Îmý%DÍ=HrÃ\u0002ùEoe¸ë\u001dË'y¢\u0018ÏFÄËïgë/Z§y\u0007yÜr?Ç=I\u001a`¢8Q\u0019êÊgéFË\u001a®Æ3ßBó?V>Ç°<*ÿ@=}óÒÜÜ§«*\u0003N=b\u001c;Zc÷ÿ=MÛ_%\u001eáf\u0017F+®ÖÁÒí­«\u001b;×=I[zæ{^ÃÐVE$º×C(A~Ý#åÃ¿>ÿtA>\u0007GaLw=@Ï\u0018F\u001cÆ)EÃíE5mr=M>GØ;ýóu\u0001'\u001a#F\u001c½1Ee¤æ>g³,>»Å¾ûÙ$Ç9ÚÓ\u0005#n-E'JÏCä\u001c>ö¸øÇÄ«G¦Ãgµ¨_\u001f=bF9%Eãt5auT>Ðÿ¥¬üG{ÓqÈIBhH`Ð©`\u0010tÎv²\u00016F8\u0018$Aæù\u0014\u0015âôå!b\u0019b\u0015°×\u0004\u000e{&Ûi¡nú\u000e¬å\u0014\u0011e\u001a­í#¼\u001f1ä6=KhtÎ Tëøb®©T=K:xU#=KôW;øÇÎ1ÈHHXP yGò\u0015­¨Ëüàn±{Õ\u001a²âí%|\u0013±âþ\u001bõïÁ=b×É `[ùyª­\u0014=L\u0016`Òíy]£«t\u001e\u000e¤4Õ=I dÛù«½\u0014\u000e6`Ö-ye#«\u001e\u000fÄ4\u0017KÁ©æ\u0010c;¦\u0017,å;¦-õ; ¦\u0017-\u0005;¨¦.\u0015/\u0019\u0004BCqî[JSpLÈÌyH\u0015}å\u0005?gfW®1ç7 =}\u0003æ¯\u001f3!=}Æ¾õ\u000fö=}!ýg\u0003>¯\u001fÁ ½¾åß¥/¯\u001fÅ ½¾%ß¥?¯\u001f }g¾\u0015Ó¥;«\u001f!}§¾\u0015ã¥;¯f4\u0012Ï¥Áùs¾-\u0011öÄ!Ý\u0003:¯g \u001dW¾=}Í¥E©ç \u001dw¾=}Õ¥E«g!\u001d¾=}Ý¥E­ç!\u001d·¾=}å¥E¯ßO¾A¨ß_¾A©ßo¾Aªß¾A«ß¾A¬ß¾ÅC#«æ;b÷=}f7ýÎýô±µÃ \u0013æ>¾N¯¹n¯»¯½®¯¿O¿¹o¿»¿½¯¿Kûx[ûykûz{û{û|û}«û~»ûßÉt¬jca\u0011®úÛét­r£a\u0013¢.ú\u001fI¥\u0018Q%\u0018Y¥\u0019a%\u0019i¥\u001aq%\u001ay¥\u001b%\u001b¥\u001c%\u001c¥\u001d¡%\u001d©¥\u001e±%\u001e¹¥\u001fÁ%¯ÈMn ¨Ì]® ©Ðmî ªÔ}. «Øn!¬Ü®!gÓ¼´MhTKy¼J~:±£>;fØ Ú\u0006';ÁÇ\u0006çG/\u0004Ç6ãC¯æáw;®F4ÛEú·>W×8Q÷8S\u00178U78××@Ñ÷@Ó\u0017@Õ7@W1k\u0005ìç<Ü\u0006\u001a£BÃt\u001eIUHhT=LäLb9Êô­\u0011Á §ßÃ\u0014Å.¦»\u0007\u0001/$¿6?ç¬g!>Û­§!£>ß®ç!³>ã¯'!Ã>gW*\u0004Ðg9l\u0006=Lã@[×*\u0004Ò§9t\u0006=M\u0003@_W+«\u0004Ôç9|\u0006\u000e#@c×+»\u0004Ö'9\u0006\u000fC@çfìW1BÙæìw1BÛfí1BÝæí·1¥Bßfî×1­Báæî÷1µ/'ÿüfï\u00171½Båæï71ÅBt\u001fIHhXLéª&GÆ°I9ÄXw=LW9ÄY·=Lg9ÄZ÷=Lw9Ä[7=L9Ä=w=M9Ä]·=M§9 Ä^÷=M·9¤Ä_7=MÇ9¨Ä`w\u000e×9¬Äa·\u000eç9°Äb÷\u000e÷9´Äc7\u000e\u00079¸Ädw\u000f\u00179¼Äe·\u000f'9ÀÄf÷\u000f79ÄÄg7\u000fGAÆØw,WAÆÙ·,gA\u0010D¬\u0006zÇá\u0017\u0014·.;çA\u0018D°\u0006|Çâ\u0015÷.£;÷A D´\u0006~Çã\u0017\u00157.Ã;\u0007A(D¸\u0006Çä\u0016w/ã/ç/ë/ï/ó/÷/û/ÿ\u0017¿'oPfXJIHHÈ5´#þµ#þµ#þµ#þµ#\u00106QµÜ\u001d\u001f¢¿í\u001f Ã\u0005Ý£»å=}]Uü\u0019a}|\u0019g]\u001c\u0019_MòòéþÂróîî2óê\u0002¢2òq\u001d|\u001aw-\u001c\u001aoEs%=qæºB¡/æ¼2a¯ç¿:±¯æ»FìÚ~ÁlÛn,Û¡,Úh\u0011{\u0014~\u0017¬\u001b\u0014|\u000fÄ\u0013¤[nÝ¢!-Ý¤¢á-Ü§1­Ý£ê=L¦Ç3%ß¦Å+5?¦Æ5\u0015¿&ÇÑ~ ®×­\u001e ¬ÏÅ ¯Ó¥^t\u00012Î#6\u00014âã6=@7Ò3¶\u00013=Jí#°\u0003\u0005Þ£³ûå>£±\u0005õ¾£üLr`¨ËOz°¨ÊKpèËMvPØ]´9^¹=L_¼ù=L]ið©Ìe¦\u0010éÍa@éÌf=@ib½Ôù\u000fcÁüy\u000faÇÜ\u0019\u000fb¿=LÐÕs+dÈcµ=KpBm½ã¹\u0003ù2\u000eòµ#þÕ'þÕ}\u000e Ã\u000f\u001eV^«5õ»co\u0017o\u000e¨ÅÐÍM1Fj¹à=KeWÆF;:IÑ2 \u0007G;çñÏl2j!çÐË\u0013R=@­=HöQÆ%)MóexÙLß}¸\u0013É¥cDÂ=K±ô>Xl ÐÏ×@©=JØaÖ(U{å=@4X\u001d=Kren-¸!Rÿ\u0019ø£R\u0007¬XH\u001brx®ÉúMä=I~]¼\u0003PXI\u001bx.ÉºfCÊµn0>éX ²ßRêxµN+vN¯oYÊ9rgôD=HoSÌBÑI¡ ¸ÞÙ?0@[¾oÇd=}1«\u0018á°$ï;¾ôÚ°VÏÐ=K)6¨iHU¯X¨ÈÉPïèËH_Td\u0018L\u0015Û=JOtêËÔ!KyÅJ=bÀêLb\u0018ÊÍfZ¤öc¢8\u0019=KQûÏ©Âi=b@étb\u0011>e\u0012>\u001e9IÃ\u0003=KQgiF´=bã8(7ÖÒh¶i_ÙçÙ÷Ù×ÙU¬MA=Ág!\u001eV¾7h\u000f\u000f!#E)=I)e/ë\u0006?ÜÅ\u0016fîðo[R}ªpyÞ`ÒÔ)%Êv=I((î\u000füqÇEGÑ£ááæ[\u0015R¯Ì{:ö\u0014RÉþh§à¢äkµ`XT¹skUQË\u0015¤è\u0015\u001b,¯]-Ü²}õÊvwóßý6ù1\u0001-=}}5\u0012'\u001fd÷G-*?¿ÿúvýrë¢àä´p\u0014{ÝìÞò2ì=}úN¡·\u001a¸\u001cZÃ~ôÚï×Þ_Ý\u0012bkâ=K#êÃÀå\u0004V&(\u0018Ê\u001fÒ?oö§=@Ç6A{Ew\u0012]/ãÖÇ=@Ä9A£=bÞÝï\u0015ý¡ÓSº:ûü!ÕÚ.Ü6ìv©Ï°z¹8»mìÒõ×Ð`ôµÑ´_<U{NE\u0014¹.d³!¯#77\u0017KVD&/?Ó<ÓÜ?1\u0013¶\u0006Çs\u0003|^ãý=L÷ð\u0010öó\u0015±\u00166=>mÕn=}m=}R/+_Açy~ráÂI\u001c)ÙÏ8X¤/âÝ f£¼(Ó£?¼RzÌ'Çêzä16¦ÆFÉ=Iié©TNÛ=Mª+Ó|¤ÿ+­\u001e&*°¾?N7H\", new Uint8Array(91333)))});\n\nvar HEAP8, HEAP16, HEAP32, HEAPU8, HEAPU16, HEAPU32, HEAPF32, HEAPF64;\n\nvar wasmMemory, buffer, wasmTable;\n\nfunction updateGlobalBufferAndViews(b) {\n buffer = b;\n HEAP8 = new Int8Array(b);\n HEAP16 = new Int16Array(b);\n HEAP32 = new Int32Array(b);\n HEAPU8 = new Uint8Array(b);\n HEAPU16 = new Uint16Array(b);\n HEAPU32 = new Uint32Array(b);\n HEAPF32 = new Float32Array(b);\n HEAPF64 = new Float64Array(b);\n}\n\nfunction JS_cos(x) {\n return Math.cos(x);\n}\n\nfunction JS_exp(x) {\n return Math.exp(x);\n}\n\nfunction _emscripten_memcpy_big(dest, src, num) {\n HEAPU8.copyWithin(dest, src, src + num);\n}\n\nfunction abortOnCannotGrowMemory(requestedSize) {\n abort(\"OOM\");\n}\n\nfunction _emscripten_resize_heap(requestedSize) {\n var oldSize = HEAPU8.length;\n requestedSize = requestedSize >>> 0;\n abortOnCannotGrowMemory(requestedSize);\n}\n\nvar asmLibraryArg = {\n \"b\": JS_cos,\n \"a\": JS_exp,\n \"d\": _emscripten_memcpy_big,\n \"c\": _emscripten_resize_heap\n};\n\nfunction initRuntime(asm) {\n asm[\"f\"]();\n}\n\nvar imports = {\n \"a\": asmLibraryArg\n};\n\nvar _opus_frame_decoder_create, _malloc, _opus_frame_decode_float_deinterleaved, _opus_frame_decoder_destroy, _free;\n\nEmscriptenWASM.compiled.then((wasm) => WebAssembly.instantiate(wasm, imports)).then(function(instance) {\n var asm = instance.exports;\n _opus_frame_decoder_create = asm[\"g\"];\n _malloc = asm[\"h\"];\n _opus_frame_decode_float_deinterleaved = asm[\"i\"];\n _opus_frame_decoder_destroy = asm[\"j\"];\n _free = asm[\"k\"];\n wasmTable = asm[\"l\"];\n wasmMemory = asm[\"e\"];\n updateGlobalBufferAndViews(wasmMemory.buffer);\n initRuntime(asm);\n ready();\n});\n\nthis.ready = new Promise(resolve => {\n ready = resolve;\n}).then(() => {\n this.HEAP = buffer;\n this._malloc = _malloc;\n this._free = _free;\n this._opus_frame_decoder_create = _opus_frame_decoder_create;\n this._opus_frame_decode_float_deinterleaved = _opus_frame_decode_float_deinterleaved;\n this._opus_frame_decoder_destroy = _opus_frame_decoder_destroy;\n});\nreturn this;\n}","import { WASMAudioDecoderCommon } from \"@wasm-audio-decoders/common\";\n\nimport EmscriptenWASM from \"./EmscriptenWasm.js\";\n\nexport default function OpusDecoder(options = {}) {\n  // static properties\n  if (!OpusDecoder.errors) {\n    // prettier-ignore\n    Object.defineProperties(OpusDecoder, {\n      errors: {\n        value: new Map([\n          [-1, \"OPUS_BAD_ARG: One or more invalid/out of range arguments\"],\n          [-2, \"OPUS_BUFFER_TOO_SMALL: Not enough bytes allocated in the buffer\"],\n          [-3, \"OPUS_INTERNAL_ERROR: An internal error was detected\"],\n          [-4, \"OPUS_INVALID_PACKET: The compressed data passed is corrupted\"],\n          [-5, \"OPUS_UNIMPLEMENTED: Invalid/unsupported request number\"],\n          [-6, \"OPUS_INVALID_STATE: An encoder or decoder structure is invalid or already freed\"],\n          [-7, \"OPUS_ALLOC_FAIL: Memory allocation has failed\"],\n        ]),\n      },\n    });\n  }\n\n  // injects dependencies when running as a web worker\n  // async\n  this._init = () => {\n    return new this._WASMAudioDecoderCommon(this).then((common) => {\n      this._common = common;\n\n      const mapping = this._common.allocateTypedArray(\n        this._channels,\n        Uint8Array\n      );\n\n      mapping.buf.set(this._channelMappingTable);\n\n      this._decoder = this._common.wasm._opus_frame_decoder_create(\n        this._channels,\n        this._streamCount,\n        this._coupledStreamCount,\n        mapping.ptr,\n        this._preSkip\n      );\n    });\n  };\n\n  Object.defineProperty(this, \"ready\", {\n    enumerable: true,\n    get: () => this._ready,\n  });\n\n  // async\n  this.reset = () => {\n    this.free();\n    return this._init();\n  };\n\n  this.free = () => {\n    this._common.wasm._opus_frame_decoder_destroy(this._decoder);\n\n    this._common.free();\n  };\n\n  this._decode = (opusFrame) => {\n    if (!(opusFrame instanceof Uint8Array))\n      throw Error(\n        \"Data to decode must be Uint8Array. Instead got \" + typeof opusFrame\n      );\n\n    this._input.buf.set(opusFrame);\n\n    const samplesDecoded =\n      this._common.wasm._opus_frame_decode_float_deinterleaved(\n        this._decoder,\n        this._input.ptr,\n        opusFrame.length,\n        this._output.ptr\n      );\n\n    if (samplesDecoded < 0) {\n      console.error(\n        \"libopus \" +\n          samplesDecoded +\n          \" \" +\n          OpusDecoder.errors.get(samplesDecoded)\n      );\n      return 0;\n    }\n    return samplesDecoded;\n  };\n\n  this.decodeFrame = (opusFrame) => {\n    const samplesDecoded = this._decode(opusFrame);\n\n    return this._WASMAudioDecoderCommon.getDecodedAudioMultiChannel(\n      this._output.buf,\n      this._channels,\n      samplesDecoded,\n      48000\n    );\n  };\n\n  this.decodeFrames = (opusFrames) => {\n    let outputBuffers = [],\n      outputSamples = 0;\n\n    opusFrames.forEach((frame) => {\n      const samplesDecoded = this._decode(frame);\n\n      outputBuffers.push(\n        this._common.getOutputChannels(\n          this._output.buf,\n          this._channels,\n          samplesDecoded\n        )\n      );\n      outputSamples += samplesDecoded;\n    });\n\n    const data = this._WASMAudioDecoderCommon.getDecodedAudioMultiChannel(\n      outputBuffers,\n      this._channels,\n      outputSamples,\n      48000\n    );\n\n    return data;\n  };\n\n  // injects dependencies when running as a web worker\n  this._isWebWorker = OpusDecoder.isWebWorker;\n  this._WASMAudioDecoderCommon =\n    OpusDecoder.WASMAudioDecoderCommon || WASMAudioDecoderCommon;\n  this._EmscriptenWASM = OpusDecoder.EmscriptenWASM || EmscriptenWASM;\n\n  const isNumber = (param) => typeof param === \"number\";\n\n  // channel mapping family >= 1\n  if (\n    options.channels > 2 &&\n    (!isNumber(options.streamCount) ||\n      !isNumber(options.coupledStreamCount) ||\n      !Array.isArray(options.channelMappingTable))\n  ) {\n    throw new Error(\"Invalid Opus Decoder Options for multichannel decoding.\");\n  }\n\n  // channel mapping family 0\n  this._channels = isNumber(options.channels) ? options.channels : 2;\n  this._streamCount = isNumber(options.streamCount) ? options.streamCount : 1;\n  this._coupledStreamCount = isNumber(options.coupledStreamCount)\n    ? options.coupledStreamCount\n    : this._channels - 1;\n  this._channelMappingTable =\n    options.channelMappingTable || (this._channels === 2 ? [0, 1] : [0]);\n  this._preSkip = options.preSkip || 0;\n\n  this._inputSize = 32000 * 0.12 * this._channels; // 256kbs per channel\n  this._outputChannelSize = 120 * 48;\n  this._outputChannels = this._channels;\n\n  this._ready = this._init();\n\n  return this;\n}\n","import { WASMAudioDecoderWorker } from \"@wasm-audio-decoders/common\";\nimport EmscriptenWASM from \"./EmscriptenWasm.js\";\nimport OpusDecoder from \"./OpusDecoder.js\";\n\nexport default class OpusDecoderWebWorker extends WASMAudioDecoderWorker {\n  constructor(options) {\n    super(options, OpusDecoder, EmscriptenWASM);\n  }\n\n  async decodeFrame(data) {\n    return this._postToDecoder(\"decodeFrame\", data);\n  }\n\n  async decodeFrames(data) {\n    return this._postToDecoder(\"decodeFrames\", data);\n  }\n}\n","/* **************************************************\n * This file is auto-generated during the build process.\n * Any edits to this file will be overwritten.\n ****************************************************/\n\nexport default function EmscriptenWASM(WASMAudioDecoderCommon) {\nvar Module = Module;\n\nfunction out(text) {\n console.log(text);\n}\n\nfunction err(text) {\n console.error(text);\n}\n\nfunction ready() {}\n\nModule = {};\n\nfunction abort(what) {\n throw what;\n}\n\nfor (var base64ReverseLookup = new Uint8Array(123), i = 25; i >= 0; --i) {\n base64ReverseLookup[48 + i] = 52 + i;\n base64ReverseLookup[65 + i] = i;\n base64ReverseLookup[97 + i] = 26 + i;\n}\n\nbase64ReverseLookup[43] = 62;\n\nbase64ReverseLookup[47] = 63;\n\nfunction base64Decode(b64) {\n var b1, b2, i = 0, j = 0, bLength = b64.length, output = new Uint8Array((bLength * 3 >> 2) - (b64[bLength - 2] == \"=\") - (b64[bLength - 1] == \"=\"));\n for (;i < bLength; i += 4, j += 3) {\n  b1 = base64ReverseLookup[b64.charCodeAt(i + 1)];\n  b2 = base64ReverseLookup[b64.charCodeAt(i + 2)];\n  output[j] = base64ReverseLookup[b64.charCodeAt(i)] << 2 | b1 >> 4;\n  output[j + 1] = b1 << 4 | b2 >> 2;\n  output[j + 2] = b2 << 6 | base64ReverseLookup[b64.charCodeAt(i + 3)];\n }\n return output;\n}\n\nif (!EmscriptenWASM.compiled) Object.defineProperty(EmscriptenWASM, \"compiled\", {value: WebAssembly.compile(WASMAudioDecoderCommon.inflateDynEncodeString('dynEncode00073¸=H=I8\u0013=J¬î\u001f¥¬ùû[»Ä(:xXx¸lbØ=@bÆ»RmA¢.½0±/:á¥¼L~ÔGé3\u001fi¹Ãêø;~wëz¬ª0´\u0003Xd,}\u0007Dä. öí{\u000e^S`«Ì\u0001u¤RTCþ3htÖ¢V¦9ðF¬é§\u0007\u000fÕó¥2õ\u0015vùÒ\u000eþIõéÂÂ\u001bH8{I(¸ü$P:ô(ÀåÓ=J¤`Ç÷{K7K7?;sØMï=K[\u0019R¦/Î?UxGJ¸¯\u000eøqÂ·|I ×øÔP )IÎIë{S\u0011h>­tº&\u001dK\u000f¿W\u0018\u001f°óSÌÓ³w\u0014Tm9­LEÏ_5öÀü\u0002\u0006.ÅÄë·/g\u0010lè¸)²*r.òÿ=g\"ÂUsØfÕì\u0012¼\u0001qêëûó\u0003¢ÔÊªÙU­+¢´õ#fceôeæãåäF÷\u000eVí\u0012f=@ÌV\u0005×rºm\u001cçx$PÁÂæ=Jñ ð\u0010sÒ%ÎµÞh=}¤©6òûk\u000e#Î\"lê m(Ù1ÅÇ_^¹]Ò:\u001aCù=LEvGÎEâÎÓÒÓÓkäfÜ:êÝ@Ýoe\u001e|=|<[Ä¥&\u0003H¿§\u0006Ì\u0017zqMÔ/°âd;t?Q\u0018*~E®¯ôÀ12U¦®Ù +ß\u00130Y²\"dñ\u0011^²\"Pdk=Mÿ¸x6Á±\u001b&ÍÕò=qlÏs+<­µ\u0011i­2nÙw,Ð«;@k§Á§(ÏÓÒÿ¸¬óÉ(=J=LT\u000f°Ù[Á=@\u0015b=Kð»®£q)ïVüü§ñÒ=V\u0019_÷éù[D\u0012¥Ò¶Tn3\u0010  =MzÕ»=Mb[\"OBÎmW[|\u0018WdñÓ5bï=gÊõ·Zd±=w®¬;éç\u0017\u0018|ÄÏ=K^2=L¹\u0004km­\u0018Å¯ÒÇ´ws`\u0005Mícx³n¸´úP\u0016\u001bNÍmb:zP\u001e :©}\u001djÄP6V\u001aûs`C56ò\u0010ôûû¹åJí\u00138ÖË&5ò\u001a#¡ø½9\u0003°@^o¡A=LsF|i¾íTIúP^Èg+ê\u001bµWg]/7F©=góWGH©`P® *«îÎà\u0017=Lã=}@&=H.ð!ZÎK}|ÏÖ:à²8¤q~Ù[V\u0013R`´õ3±_\u0014~ob2=L¤o¨\u001c\u0002îI-\u0004b=M\u000e2fBõ©Ùd\u001b¬ °¬ñ8\u001e¬Dß­8L+©ÓÌÈzbº=LCØýÓC%/1ï!´WGL=@\u001dÎd\u001d±¹T=`XL\u0018l2_Êeâ\u0014Õg 7;ñárL=Hm=L#\u0013óûy\u0016-;³ÁwáüZ\u0007Eâk{\u0012ÛÚ=¯§«¢\u0013à\u001dÜUÂ=H\u0011°\u0007m&pñpØ=g³\u0004\u0002×=Io¦¶É¿-:Tä×Kä\u0002§/\u000eèÃ®äa¹©ÍG$þõs¶¯ÒÕP\u0003zúµ\u001eûÝÞZ|ò±Ígz6ZS\u0013éÎ\u0012¢®ÐI\"«=IÌ\u0016²\u001fL&\u0014Çc&´@·[lV4ËçX+3;]dÁ°\u0006\u0007\u0002»]CòmX½ÜÖÅºFD»=M£%a.Q§Ïyý=H Ç(\u0014=IMO=gL8Èì1`=}ÖÁ³ïÉ¦\u0012brQÔ=@Ú9Üºí `S3ýe=g=JE\u0010Ø=IØ\u001f\u0011+=HW×óC¶~ôº§ìseb:\u0014\u0010|Z?¡q³:óÿ`zz¸=M\u001dr\u0011nl¥§ü¯¹i-Yàl.Êª8ï)>W \u0013øÑáI=@ã\u0003ý\u0019ªË%%mH® m±Q\u0013>@¿ÛxX»;½lh%âS}\u0002?=M­¥NÁê?r¤1Áñ; K¾²¡{¸U(àÓ).jmø@9¤D?Dï²=I­ò1È¸ºåÅLòÓV$\u0006¦-#ÌmO=g+\u0017Õ7\u0004=Jþpn5^=MIª\"K³=@\u0006\u000f=M=HRº\u001aJ¥TBÏ¿6pu\u0011Ø®-0«Ó[ÑÒ)$¸!r\u0006Øï\u000f+þ\u001c\u001ewês\u001a+=Mcø/¤¥Oß\u0002ÚKG\u0011).@Toy£ó¿,Ô=@UX_í\u0018§|£7\u001aÏZWy=g\u001b·=MÌ¤(ñBRò,ÓQnÊÁ\u001b>p|Â=I×I9:sDz\u0011m¦?%#Ká;£¥Jñ<\u0015RÊ>ª ±«fÉ(\u000fØÔ\u0002\u001c=Hs)í!íqw\u0006KÈÔ{÷äZ¹5OÊ0çö_ó\u0014\u0001=Jl+E²\"xd=M\u001b­\u0016cÅ_jj÷ph%úsô¿í¹ûéiH=J!464ÿºeýá¼LoH\u000e\u001eiHÑs9TèI©BÈ¸~ðo¡Ý(\u001eu ð+2®£ÊÁ¡-í\u0007=MLb|=@­c¼ÀkÉp½Ad¬\u0013ì÷Óº\u0017L\u0003\u001ceCT­=@¸ÛJÛ=INªÙòþ\u001d \u0014Ï¢j} :Êø6j¥Ù#6Ä¬\u0006ÆØ\u001eôîÌ34Á3} Z¹~ÂÓiÌø@¬õ\u0013Öa=g:ÌòÊÔ:ïkÄqYø=}\u001e\u001dº«\u0004ÁÚÔ|®BÝdË=KõÞçÃ\u0012%ÿ|Ï\u0004\u0007øúhp\u0017,Äh|UEéÁû½@=K N³Òé_11âk. #lóEMÀò_ÌL2CU»HÁ:,ãf[ðÎ=@Çq)¿µ¯7sztX¾\u000eh^13Ì\u001c(K¶8\u0011kèç_¾I.sfØç¯T=\u0019½ð®r×4pe¡ß$vÓ¸½¤½=HÊ=MK¬×ÅFL\u0018yÿ==L©Û`d=¿|í»xÏ\u001c£×-=L°=Mj:¾»rC·=IúÎvGHº.`æ\u0002Dë\u0005=\u0004¿Ýê¤`\u0010)Ç¥Åe\u0013P.Hºm»¤ä\u001f\u000118ë5d²2Ë\u001c¬#Ð[%`d1& î3\u0010Î+\u0005,vãµ5\u0019lÑÂ_*=LÏÀÃ¯Käc\u0019·É@ö\u0007ºÍl- \u0013¡m¡mH\u0013¢³Cu0¨qê\u0003àrYº\u0011á ICÐX¨¿N4`7a=@}¤´£ë+\u0002a¯JúÙ«=ca}=Jáà¼:=}Ì`°¶X=J\u0011ì\"¥´·¡s=L\u0005wuY¥=M£Î=J5ö¥À?æ\u0011qÏºßÌkÒk ]èOY;?@H|Y¼=c\u001dá\u0007\"Òq¶Û)è\u001f¦ÏYèAE=JI[0·\u001f¾\u0012\u001bÔÈ>O¼è$ß)4ìaìÎÃT\u0013||ÿ\u001fÈi\u0019Ï!^¾Ñó JU*wè(E\u00163$yhºy\u0016ß\u00105á/?WÛY\u0010t\u0004*P\u0012\u001f6À¢Ü\u0002Lå8óÉ=Maü\u000e)ÙXûÔííÍ §K¼=L\u001dX9ðm O(wåé\u001c6|íS¨n]\u001b(ÂÖ.¨ÉpÓ¼«Á8KkHú¼¢KÛÞ~#XÍ«\u001fû,£éNã\u0018O°Þ?Ó#n¹ÈéÃº«¨ÉèZzö\u0019Þ÷]1ì\u0017Ó:Üc]±@\u001b\u0002¨\u0019eÞABí£íE¡ª=H5Â\u001dè»£j=J¦jJfLÑ¹Sb=L~gÕj½MáÛ«ø%ö=I³Ý>Â÷<\u00064HL\u0001~9=}=JÆâ¼üûn·\u0011\u0002[LV­å@¸ËP<_[LjÑê\u0018\">pÓ½Æmx*ÎD:\u0014ÕÅ³×^2MÀs·®ÏT.d\u0017{\u0019\u0013=Kºe7ó«\u000e§î 5~$;w£lç,ýÿ4úÀÞBÐ9ËQa\u001cÅh,I\u0015ö¸£vI¯Ó=}§Ibwbw×>=JÅZçh¾Â\u0014»¨È=}»¸¬\u000eÁ|Ù_¶e!B·ÍÚo=gl..5\u0015î§viæë\u00150H×¤|sM8ÊrÇõÜ­Ñ=ÿÊUúÊ÷[F\u00037ðäÎµÍBå\u0001^ÔÊÂ®E\u0004î&\u0002µÁëëØÐøÒæêâéåÊ*\u0016ö\u0005ø®\u0005i\u0006t¾\u0004\u0018:ÛØªÆuvØÁ°&7­}&xèÒÒ&E=@÷u,f @\u0011\u001cj^N&Äü½ÎM%EQ\u0011í=gþÁø6k³\u0005d_ÂwZÖnåñ\u0007IêèW\u000e:÷=}Ë²\u001aÒ*\u001bSD]]\u000e¦8S:­\u0018\u000e1*=I¨T£=L$7!5+ÿÕPøy×°§xÂ\u001c\u001765r¬ì°Nx\u0011=Iï(q_\u001e(qeÛOÑJ\u0005±²d`\u0010[ç=@\u001c/í\u0010\u001eo^GÃ+=KáÏ>s=IØ(\u0016¤>kÕú×LJí)\u0016d=}k5ú×(ºÌJBÓ\u0015\u0016\u0014\u0016 h\u0016ô#9BPê;î¨x©C)%ÉÔLäðDëI\u0007!\u000e=}cn!õð\u000f\"ê\u001c\u001eõ\u0001O\u0011Ë¢×JM}&J=Hýâq24v=Iß\u0001=@÷<$6×V\"E±ôâSzÛx\u001e«yN8 \u0002þ¦û=HQõdQÔèÚí68!Òë~éE`=Lðæ$\u0002éc\u000f \u0017ÿ.õÆ3°äöå\u0006\u0004+±=LÑ$kÉªxæBWd7=J\u0001Tö#Hvª\u001b\u0005#\u000fië¦EÅÿ]=}=I÷*öF«J\u0006\u0001Z4§°&ÇGRFë\u0005EàEZ\u0004¾ÅZgG&\u001f\u0007áK=}ð¶`òFÏå;uM\u0004?}ÀyÃ=L¿BWá÷ñ¬H\u0015=M¡×Je,C3ä=Kt©a^¶Ñ\"$®Ô\u0016{Gêß\u0006d\u001e£ü\u0011x=}~¯L\u0006ù¹µ«Í¤\u0012P-csnÖ¤==}Üõú¤lüO=Me9knA/ùä\u0013ççßrwm=H«Ìj¶p±þc-äÑ0.é^¢ÕÓúö=g´QíèÁËn>-ïÓðkí=@ká ³êæ@vNêö À\u0010dWÑHÊ¤ÓDM=HÃè+rbëó\u0019µô\u0002»9ª£íyc*¯íPþ ,ÁÒD_ïãm2\u0005¡y¼Ç\u0016ÞÐjV0DäÊ)á=IFîLÜ\u001d\u001e¤Â¶ïA¤4ÈÜ=I\u0012¶ÎåY\u0001%GG3Í}3£ß%ÜA£J0¿ O9\u0003EÒP\u0014=LJAêò\u0013w:\u0005ôì\u0003}>)§Á33Ò¹_·Þ\u0013EÈ\u0014càMv\u0004$üYl·\u0012¶6.\u0005ËÂ¢z\u0001y¼\u0004-Ên¶/\u0002ú.qÅX¹é[.`R`âH×l3»\u00011Èÿ²Ì=K¸NÆý=Iú\u0011=H\u001cc1§\u0003Ü\u0014\u001e\u001aº\u00011èMîxÒgæ¿3ñò3 [:{¸ÐPPËùÍ@tmk¶lÖÍë¿J=gdE%\u0016e\u001e_=M³5·9g`hL÷ÃÌ=M ÇÓÌ\u0010_á½ð§2wû×´Ïäg2Ê\u001dÀLÍGÂ]=H)ÌÆéG=L.³\u0014¹§\u001fÔU\u001b|q3\u0019Rb°­\u001cµ|Øâ¤=I\u0012°é\u0017\u0002âÊ²?âx´!f,=@32»c±tÉ¤Ï¦(~©¡ol\u0001Å\u001b7\u0003\u000fÏó¥\u0003à\u000eßþ¯\"ýÖ=M~óÂô¦M«u÷2\u0010,ÊÊ=@òôöÖÞÖ\u00179®¦ÆwÕ¦ô\u0019ì=I\u0004¶Qþ¦\u0003´Ö\u0005³vè\u000eR64\u0001éêÛ*gòÙ¶âÞ\u0014dNÅM-ôER$r¿u=Iâ®6c¼6cg=°!{±öÞ×v­Z4=L¾ÉXGÌP |£t\u000e¯\u001aÊ\u0012AËD]¥´ \u001cD9²§ÖCL î\u001e®2=g\u001aÍ¬´æ¿ÓæÖ«b=@%¡0N\u001f@Év\u001eD½,|p¾<¬ÛQ0ÈXg±íö¬\u0015ë\u0004¨8Á!Ó»ÊÑjFõÉ]9\u0015áÐ}%í;ã¢/f`{-i\u0014\u0003ê£ \u0016¥ÜôËÑ\u0010\u001fÄ=I}\u0019;DRá\u0015,´ñª\u0016¼tPEõ»ühUÑ¤½a\u0010}ÛòlZ$@^Ó\"\u001bå¹Ü=}ÜÓÐ×Ð@a$Ðà³UÕM6Ëa·ÑÊt\u0006 \u0018&\u0007½YûìÇÝçK±µ\u000e§Vö¤gÙN\u0010cÖ\u000fßÿeFh>0\u0006âtº ûTÕ\u0006Á!âr»¥èºj×&µùú´\u0012W7<~$=g0úÑê8ê\u0013ó=KÐí=AI|Ð¶Èn&¿z)=K4)\u001cF{\u0003Ãò³I[ø=L\u0002nãã²ÚçAvú\u0016\u0006öt;*\u0005ñ\u0004ápP»\u001c\u001eÿr=JeÇÃF\u0004.ÔÔ6å¶ T-õæ×ó)þí\u0013>õ=JV^ë_+ææÿ{à;ß­Jã­È\u0003÷gNË=°¤0f«[=IKñÝ(ÊÖT¬CÔ#êÈ°P-#SnV\u000e&££»V\u001dûßÍ,mÛ\u001cÀàð\u0001q5!=}ª¥Aóùãówd<\"=}ÊIL×ÂÀÀÓà¡Ò\u0015¢4¥òèíC^¯ÀÓ·ÀÏZÐÌãs{\"rµ~ß®\u0015Á=Hu=Mã@<¾pß\u00139¹B`ê ¸bÒTÈ´²ÀÈh\u001aqÕtí-{òruÊ·Ð8©7»­M¶@\u0003\u001eÔu×ÝZÔü\u0014¢\u0017w¥Á¯ÂÍJÏ\u0016¢¤«añ\u0018É¡hºJ\u000f=LrÔl=g{ÚM!¯@\u0012á·@\u0016=KRî×a(³&=}\"·=}Þ#ÛßhÈW\u0016ü=H$=}ûDö\u000fà¼ÔðBCwuÁïúÙ\u0016£¦Õçû\u000ev\u001eçÉûB%¿/æÆ\u0012\u0017®Æñð>Còi9ÛVàûXðò¹\u0014\u000e\u001eÖ¨e!³¬NLÝ´t¿Rq§KüûXV`ÞwÝãl»0DñÂ\u001c!u\u001aloJ4ÑRWÊd\u0015Iµ¥\u0005©.+\u0014~L´íµ³ÀY\u0001\u001c=}Ôø·<ù4\u0003â/Èù¡¡b\u0012q¸U7·\u001cÙâ\u0017y¯eNd\u000f4HîG=@AH ¤Û!ÕÜã}\u001158¶vwS\u0014\u0010ùa=gK(ðR×ÏÜdÐÛ¯\u0014¢à£7=g\u0013!!¨ì,\u0011=J|\u0003BK)ñ´ØgÄèò_[=LIôZª\u0014ÇR|îïi}¿Þ\u000eà)Ý=H`÷9|3è=I¶!ü\u0007öÉ>bz=L=}z\u001e¶(He\u0010kªÍX½õ¹Så/µk=Hh××\u000f´\u0013Ñ,|èà=gM$Üä=gdH¢ñ»\u0018Åt\u0007,^~\"q×z\u0018´¬43_+\u0012y¸õ3\u0018´c¥GÏÞñbó®\u0014S<x!\u0019ë¬G=MÌE¡3\u001cË8ÇéKM\u001f\u0017=M\u0014×³?}p¤)swÁ£$ÑhZº*\u001eÉ)t´jþ×\u001ff\u000e/æhÿUßáÙ9\u0003I=g=J©&TÒ7g8\u0019\u0010=JÉ§¨\u0018a=HDøð¶è=K§\u0012/Vf\u0014ñ:<ÞÖi=oër=HH¥\u0012+ýai{ÉKl#±W\u001f\u0017=M\u0014×ï \u0018i!Ø=@[Ër÷§Kg]Jà7ÿô\u000eY÷\u0011\u0011´%=HgØ\u0019\u000f=JÉ§¨\u0018a>\u0015Ù=MBV\u0015Ôú³nRú?íYÔ|oÕ\u001d*\u0013\u000fMoDï`É=H=JÀzìwAª<½;æ=K«@ï·Jz/a»7=g\u0013!!¨x¨ dÐy¢p\",$EÆ<öupÅ=Hù\u0011[mÌaC$¹=g¨\u0018ÌÄ}Gm &¾Bdè½k\u0002Gû`XÌd¶¼î\u0004~9Öè©ÐÓk\u0016Ð\u0014Ov\u001d%\u0001¿Ò»\u0012:ÀVDõ)°[òëeû7òãJXR/\u001bm}¦ÆG*dò¸ùÑ\u001a¨ã0±ÛWÇö\u0016þùäQç<ô=H=JÁå®ø_~\u0017lèH³h:|D«×.¢ñcâËG`ºæüh\u0012ÓIÉf=Mçh=MÀÙ\u001fYèy²ÎKÆªøÁ¾LH2FHOlH±=H\u0006NDôB¤K|=öìÕvVyÔ¨\u000e\u001aT¦7·ÈÄÀ=@ûJYþ8o\u0002`(:ÐHÑj?=L\u0016§7\u0006\u0015§-ÜÞÈ}×k)S¾XáOüØm\u0012.Ã<\u0003C-ëøð¾Æ6ìzÞ¦tÖKÊFÄ{óèiÊFÌ.\u001fÿ©KñÆ\u001dÆÌzi»íÛµâ&\u0002ÉWJ)Ë8$h.!Â¥érqjÞ:¥ÿÔ\u0014#ojå\u001aÆ@É2\u0006A\u0002Ù\u001aUhÞ\u0012Á°xvê?E7è%nQ_M\u0019ÚÝa¢S=IwÞä}ADCJ­[US±¡ÆZtøòÆ\u0011ïfE\u00044[>ª÷ºÍ¤\u0004,üÉ>\u001a×\u0003®Æ§Ò£c\u001c=L.WMã¢\u001bÏy{£<ÂÃ¦óÊ|ªæïofp\u0018q\u0017l9\u0006±\u000eLr­Ñsë4­É\u001c=ga=IÛ u?Rd?Ù\"}<#Î[òºró²¾eÚß|â½Þ*_Â©NåÕ\u0014\u0015ÔvÃè\u0004ãCûç\u0001!=I_o=M4Xó=gr\u0010}ð[Áò|OÇ\u0011\u001fôï-#t\u0015ê÷¾%MV\u0002µ¢\u0016;§êÖ\u0004Ýv=}=KkMHJ=L]*úÒ¤-ÈJQH­µä-³)êjjh\u00181|;º\u001c#X<*Jê=J(\u001dB=J.¾´gnôá=@Ë÷ý!p¿úiãH\u001bIRH\u0002\u0013Hþ\u0007>Ô¨ö=K«ÑbPÄ\u001bÎW(¹\u0005íE\u0006\u0015Æ=ga¶Dëly7D´1\u000eÒ5Ê=gí0\u0010ZýÀÄRÊPEoÉÑHÎ6\u0007\u001bÏý;#!ÆØ²ì®1~S£¯zO\u0007\"> Ú\u001f=}UÐ´#1£4ö?xùÎY¼|ð£Èlµ\u001aToà\u0001óÁð~½uvóñ\u0005ã\u000e´°\u0006¦\u001fMú9BûB9ü÷µxÁè³Z<EA\u001b\u0015!2pÛgÞ6»&.µ¢1ÂG=M|Z/.KA²ìõÖ;7z=MÎ}ç]=\u0019Z7}=LúM%n¯ \u001f!ó5À:kJÑÔTöl$pà\u0012|9\u001e\u0015Ðö\u0011<ßgnÞV;_E?h\"P%8ó¸2Ö\u0006çõVçô±µ\u0002w\u0003óýÀÚÀþÄú«.ð¨.gæjhD\u0007,(8¸{\u001b+Ëç Bj\u0006ÔãûEl1ÛPÙ¸´ûVj\u001cTYáw\u0012|K²\u0019iê!\"±xRZ<ü\u0013pÑG$=@^¾¥Ôö\u0002dr¦zÖÄY+n\u0003\u0003=Kö¥DµÄýárr´Äð¶9ð¶l½,®¯\"ê¬¾\u001f\u001c\u0002MÌlÞáZ¦=}s/@´¤0ã¥r=@Ló^õ:=JU|\u001eü¢?£oð¸£dVCsÈ=KY\u0019ëCô¡l\u0005.õê\u001fCÀ\u001dîc#^#N¡=K!ãrÍBlöd;.êkýx§qôÕ\"º§²ï\u001dD¦Óÿ\u0017®ó¾÷þ7h8Ël?$\u0019\"Ç=gªG\"èÏT±=H÷çWJyÇ\u001dñj¦É7(J\u0018¤Ã·êpì|C`\u00077Sb\u001f­D2mu@Ó\u0017?¯J?Ó;to\u001aaZß\u0014n\u001bÆØ¸5V\u0017Þ.+:B7Yx\u0011= jp®Fuw-Säy1$(NOñju¸<$Ë¶SN{E\u001fÄ/ß_0NØöbS«à¶Øo«P=Ý@:1ª\u001aÆÈócIw°rÔ(éÀLk¨1qHýmH¡öçÙN]ÏéE|f?X7éM§þmæ¼ýpÁ¬UÞß¯æ]½\u0006#=IÔ¤Î\u0017øìrøÏìç=}a¹ªX[C·Æ|ý_×¾\u0016ÅËå\u0004\u0010yÍ·JW$Çw=HY\u0018AÛ\u000f`Ymõ,|äÌ26¢\u0018f\u0016ïS=K\u0005h=ïG>½~ænµºÎ«ANwezFd=x}\u000e\u0001ª¥êF}¦Z$­4¡Byª+5­Ä lbÅT95ä.t=@\u0004s#¥vÜ=M{k¯WäàéÔ¦\u0013ÑóL9õ¡Ï¸)=Jd°jáC\u0018á ÎÛª¥¤AË 1¥mD7\u0016é0/\u000fÔ\u001b)ÛÓ¹2å\u0019ÿ%Í¾?ý[;§MéLèÏîhü6U=L\u0006âJ\u0012ê¾ÃTJU|J\u0002ð\u0016xN;uÐ8U8i.ð*JèU,±MW.ò=H&«÷mò}QÛ¼OÕSæ\u0001Soý.>ë\u0013ûS\u0015µÙA4EJæ\u0004\u0018ë¶YÛïóÇû_õ,lÞP¢TÝ¢©_C¯Á=LÌ>©$Uü&*ðcô§4^³\u0010$NC\u001a>ÒzÄO¯ó?/\u0004Þ\u000fûIç©dëK=KDýØçq\u001aXw»é\u001e?\u0001è\u000f~\u0019[l6Ñj\u0015E¾Õ9Û=gePRX£Çüs[2ëûZª7ï`4«@/]\u0003é=@\u001e\u0019èÆ\u001bD:\u0007\u0002:/%><\u001cdF[\u001cmor6·0õ\u0005H0¨R;[;µ¼ºFk>g°>DD\u0019l\u001en¦«ú×.S\u001f\u0006W=JÓ<r\u001fý=Iæ\u001eÖª=L\u0017¯,.Z`h1)÷óÎJÈ\u0017.òXä!\u0007Ãô8Å`=I¾øH©Ê \u0004¬ý@G*s\u001b\u0019¾ó¼¯TRÒ\u0002ã®À:O\u0006î¤e·Hsæ4,=LZ*i\u00026Ú=@ÔT¶ñªÆ·=@vuR°.y\u0004\u00165µ\u00165ü^ªr\u0003qÃyªR÷\u0003ûV´\u0004ÐÎ¹^ÅöïÙéÏ¶\u0005üY³a\u0003;µï\u001b±ñ\u0018££¸®ûMýiöHEM÷OÌyõ ÖÀ=K¡&©aÅ\u0010·æJ\u0014B\u0018*XCfÓ\u0003I%zÒÒd=EX\u0003\u00035ñ¨gô¦£\"¾\u0012À\u001dâCý\u001a©/\u001b.3=Lªøå¾\u001bD¯\u0006\u0019\u001c%Ýþd0r©#õ¤·r°\u000eØa\u0017m\u001aþ4Ó|xF¾]\u0001²\u0018ÇÙ]\u001aÔÄÅ>¿=I·»ïßâ8ë/ [e±Ô9|9÷²`}óä\u0015$2\u0001ÛÉQ²(Vö¶/=}ú:\u0010K5¡Î@xzFQÚã³\u000fÿ¿ök­Õ¢\u001f¯«ù®Ö¥=KMfÔÆú6ÆëoÅm»ÜÝÃªrI¢¬öÑ²öFÁ{µ±t½z=H ¹Ê·¥3à¾º<=@ñ\u0011\u001abÅ4?\u0004\u00108ÕJ¼9\u0001$ëõÃò\u0005qDd=H»=}r@´=}~8òB3Ëñ.ök\u0002¥\u0018Uõ=LaÞ)\u001fõÕ\u0007W£fx. µä:lEíÉ=M@ÔZGó`\u001dq\u0002pì°4FÎ<[FlK«¢n-|ú=zyÕÔ\u0005Üvá=LdP\u0019\u0004]ÆðºY¡ÂÑÊ:&OuKÏ9{ã÷³=Må@âHb=KÌ_t[¡Ë>ò\u0001Uh_@=g\u0015G±f\u0014Pd#\u001e²²\u000f½=J©»\u0001ö.löÖÑ<ÐJãD\u0001Ýô9È;J<¼iØ%«zÅ|2`¿Pïtñ9oFp\u00138:Ë(=JÀ\"zÏ½ÀÚ5­°aßUÝÙ¯=}¤*v=}8±\u001c{g{ñHÄÒ©Þ·Xq\u0004w=@EßÀE¿Ê;Ññi=M¤³býéîcàÿø~´ãÅ²ñaîm}4HWh=Hîï(TÝ¸\u0019z{ßñs\u0014q%ò\u0017\u0010\u001d\u0012t\u0018ñ%y\u0014\u0003µª+ZL\u0006aÌ\u0007ÈC¡F-=K»ÿ ê§4b¨?ü\u0015*ôgØµa]Ü=MÅü¹%*!¾ûâhãlÎS`,S\u0014pùÜ<K£sÙ»]e¯\u0017Ð4ZÌ/`úâ×éY\u001fº=@µf\u0004\"Un\u0010:ÈÓIÈu\u000eòëñÑ/ñ®{!0ÐcÛs\u0018ù:=K=H\u0018lÚÖÍ-`/U\u0003\u0010â\u000e<LÐe«äÅ$`éÚ;å\u0019È\u0013ñ=}Dzcd95Z8ðÒ­Í\u0012Fmó7 \u001eì\u001ax«2\u0015Ý¸Ï°\u00145T®Ãà(?!<t\u001bÂ­¿\u0002!\u0011¼f­ùºK(\"§8\u001a~\"M[^[ÈÑaI° ¡`È4ixª\u000føJ=L=}E\u0018\u0019<ä÷lkÇ¸#.-÷æxB1dy°$\u0010ýA­¹Þúiq_¼Þ¸Ä\u0010ýAwcé r ­ÄáX Ù\u001f¯$\u001câ°ÉDÙ\u0011Nnºª11j\u0003_{½¿3&\u001b\u0006\u0007®\u001fc\u0019\u0002ã¸Y6L«q±\u00199mÐãe©ãÿm¤«×½Óbr9\u0012\u000e<æ4¾ê\u0018F,´ïnJ¡å8²*<l6DUQl¯F,Ù¥\u0019Ú=MÌð\u0019\u0014=KH÷?\u0017ã=LÂ(È$\u000fõ(¿2\u0010õ*¿=LÈ´\u0019C(ÈtPwi§=K¾ç]`D]É\u001aCX\u000e<QhÂAÞ×¶¢o.(\u0017=}0?\u0019\u001f:Û ûñS^>}Ð-[`\u0018O\u000eÒQ¼»§ÿZ¹E\u0015\"ßVWHvd¡òOh(<á+åtUUe­cKfMë[ÓÏ\u0004(GZçÃÌ«¢Ø=Jº- Åþù%Å\u0016N\u001dówâÐ;#ÁlBmZÉ3mÑ\u0004=@Ak\u0014âs*dLÒâ lrÚûé\u0017=@ÛbÍm$à\u000f7=gT\u000f¸hÔX\u001eÜb\u0019+-~j\u001c%×$Ú°Ë×êÛê77ør~ò¾¼=Jê°ó¡ÙÊ\u001aÌ\u000eeÇ_÷3Õ\u001epËXSý\"£Aøtyô=gpxÿ8*åMG~µðµuøz¶vÙæZ=K\u0014\u0015ê\u00141EÒ9&ØY«\u001dÿCÑoQ \u001dæa Î\u0006ÑO_\u00184ëã=L\u000fßWÑ\u001bÇj¸G+âvÌbH\u0002Ë¾#Æaa$7\"w+ºPÔ:hy0!¹#Êq.ïÖËW)\u0017O¹\u0013i\u0014Y¾H{\u0005W°lÂG[ao=LIÚns\u001c®TÖm\u001ft=M@=K¼I\u001a]ïÙÎ/oï8=JVå­§b)º9¹vxI*Bó1·Ó.=H«S\u0004Úû¾ç¦ÆÔ ¿°Ë§\u0015Ý8/i×Á\u001a\u0019½B2ò¼¹E[½Qó¾\u001d2.gÙÆ±i5Gd¥A}/<i=L£-op5\u001aO¬YæØ=KähRlau-ì-ÛU²Ë³×@çã<«#/%*À\u0001íYô;Øðcr4[¸©Iio,Sg8à:t]g% ÃÓ0·ò¬9z=H£1t«_\u0016\u0015=£Þ~ðä+årQö÷s\u0019b!)°S.§2ÜyÛÀFF(V;<Ï*Õ=}D¶×¯MlqXÆ³XMtM[YMôÛ/®X4KÀ9ñî<1Ý¯@KÌlÛ\u0016rÜ¯ Kà9ñ&oØ¯ò\u0018lÑ¯¢+q²Í?1xMÚ­ÿ É×º¥ÒB=I_¡mlÛåMdJCÒ¯âJ\u001c;±ÒáXÂIÌ<q\u001apYM\u0004=gM´*,Ò¯\u0004Ï{æßö7ÔÈq¯\u0019­\"ÕÞù6 $ÖD7\u0004l.V¦»-Í=Kf£Ûï ç¾\u0010\u001döæÛ÷\u0016òuà¤w«\u001cY\u001c4¯Ù>yªVøßª=MÁ©÷DãÖ»\u0004\u0017ZÙiZ\u0019èô=g£=K¡WÑkÓÉÜÚ4=HE^[&ç°O]=HÌ>&<¢©Oî½§Õv\u0001¸õª½·=gëEe=K\u001c$à6â\u0007Ø\u0015(íøtÈßG¼=}¸=L\u000f_Ï9¡ÌJd[÷6*=}Ãþî¿ÔB´{L¡² qÎÄ5±\u0003pu+üß½ã=MF\u0010:>u=}È\u001eCTÈn\u001a\u0016\u001f.R\u001fý\u0001>Ââ½òÕwgG/4)UvÝ\u0014öBúSQ¥&§K¢\u0018&=JÓ¬ÂR~Óñ¿tJÓO¾ó5½óô¢Ù\u001bEßo÷óàùãàÒzjìà:Òº*ì3~|=K\u0005\u0001\u001dp°´/K8©Ûíÿ#é\u0006Ì¼ð>\u0014_¢\u0005\u0001aW>6âÁC®å\u001b=J#\u001eÅuuÃK0\u001e{¯ÐP%²í6ÚEwuçpò;hEnD\u001aQâ+¹)0µR²Á=®¦µ5¬îKa=}Î¡_\u0001½LË4\u000fBG%ëg)=Kð9CÝÄu9)óZ°!àò=}µ:¥Âzé0|ñj=K·l\u0007©{b/Í=@`ûø]¸Rß,\u0017Å\u000f·*Ôìé¸9\u0001p<ßU¯=J\u0012H4=HÑk¢Ùû5\u001a|z1µ³À°\u0011}Opu\u0013©Wðã\u0007=@![=ØOýQz=I©#º)¬·Xá¹Ó(L,¼7ÕÖøãéä¢[ç(*Ú}à=IË=KJ£w=KzâI#¬7¨Ý\u000eòXç\u0010Á×ãE¨ÝVêÏ«¦nÀTo=H\u0019áò+¼âÓ\u000f=}â¥¢t\u0012y\u0012Õ3¢\u0015\u0019Þ/ÆÇÀß¦Bm&±=}_´0é¶\u0003v|dQ)Ey³®mÝ=ÑüZPK×AïYGþÐÎ8á«#GqmÍ=H\u001cxê`4¨\u001cr¿2=J±\u001bwÎ¯\u001dS\u0001D\u0018¼%W6¥d\u001a$»+S\u0013. µÓ\u0005\u0018åÆª«=g£öí\u0014S\u0016©©Ê7x|+ìÕ)æk§Êo¹Z¼õGZT$}©sn¸VuZ\u0019ò¶=KdUËµ îXGõ\u001fÌÒ=M£vH~Nõ& =g]ÂÁ¥?é=J<=gy¤JYäv¾&r¨P\u0001~o)=M=M8q\u0014=Ií¸U1\u0012ÉèÅ!ëè\u001bRB\u0018Ú\u0017°ü_\u001b=KÖ¸ÅåFK~\u0011z=H\u001a\"þ\u0004NR}ÊEBjÙ\u0016°\u0004\u0016¾\u0006x*ÝCuÓ¡1\u0018\u001eg5K\u0019ãìª¡ì\u0014F\u0018ä¶í\u0016Ù æç*¼þ\u0018³\u001fù¡\u0017$Ü©|Ñ\u0002^q¤È\u001d\u0016íyªc?\u001cºL\u0018Gv=HHýÁ¶~°¦\u0005¿XÎêv$\u0010\u0001sþU$$o¹¨sA¹ò\u0017üËb ·_\u0010\u0016çñ°åc4Á\u0016D\u001c6\u00020\u0003d¦­Æ$â\u001fË=MA5±o¥n¨!g°ßX0$ØT+\u001f**K}<=FÏiõH(²8â²sÀªê\u0005V&Ø§(ö{¶¨¢`\u0005÷E:l©¼=I=@ÜÑ=M1#\u0005=H2 Ùß.Â=JÓ¾vN¶Y^\u0016\u0014=HªíOaö«nÀ®Pñ²1\u001fcL{ÿ´­ß\"íM´\u0010=Hpì}Âs\u001c\"=HÏx=HI¢=¿Ñ!-¨¶]¤¦\u0016Yq£>Îe²Zë#Z¤:Lù½S@q=KÑðk\u0017\u000f÷Ð{Û®7_ökz0B-|\u0010ÅiiÂ\u0017êXGúKu1=@6»\u0006UÆa¶¬c]óÒX_×B«è½2\u001cæ\u0017n,U^±V^±=L\u001a÷.öæVÜë[\u001c3v©ý\u001ay¥Ê-Ñ=H\u001dî¿*4\u0010EÖÄöÐêª;(ý¸³îåþëö=K=Hû\u0016eü=L_%ÁªR!zéªÅej\u001d¶ FßÎN\u0018Z¿J\u0012â~­p»âCf{uPÆF±³Vr¾Ær=g\u001ex³=Â\u0003x3ÚKü*]n³#s°%¬ñ\u000eÁÉúI?XÇ()Ú\u0002å¿\u0011bW¿ZüHA)õ?´%g3¦@Í¬]°XÿÃH!Ë3ãá-\u001a\u0014J5,Î\u0007¤\u001fÌh²ç÷\u0001LXF=H8Y\u0010\u0019¹u%3<5å¿G°ÿÃ g·ÀÖÃ¡Tò;=gÀ9àAò±Á)\u0019â{ã«Ä6µuO¼\u0012<pÊÖæYU\u0001c<y´§îÂ`:=Lºc8V:ÄOë\u0007^õïÂznó¢\u001c\u001fy_Ø~1!öóùm\u0017\u0013\u0010V\u0006\u0001v(á\u0010¹úN@tØít§§\u00058ÀpØ\u001d¤²ÝÔ*,A\u000eþvâ\u0007\u0018\u001e\u0011\u001a\u0004=Kà\u0006ô¢æ÷ÐçV%;¶ÝB =Iíî\u0012TòÑ³WÙ8ª3¥$´=@=Jc¾ÖÑ¡§}=gåV+=Ja\u0011ûü=KD¢=MYðç1ë¼Mk³|¸¤èãRÙø=J-?eiJõ©\u0002Ö\u0010óÄ|Pt¹%)[Q^Þ=IÞÁèZåémë\u001d¾-=Fã÷]GÀk,È=KõÃô\"\u0012 âÅ¬¹\u001bÄ \u0019%û8æ©ªH\u0011a/¶¾IHI¯Ë£01(=g1¸H[i©\u0019\u0012X\u0004B©©«\u0019ß=g1ê\u0019Ö_ÒßlK,XX@Z[Yå\u0001=M;Ö\u0017;[[ÉÑQ1i55d»Ï^YzZ¶ÀI)=LBÏ^éÁ,ëvY¹«a\u0011[P±bFBYå~VÀ_0\u001e6VÀ_0\u001e6N@þî©£\u0012jL¤îL9aî³^t¹{²ÿZÆé½`5p\u0010k{â¾9Ù\u0004è\u001fcÀmûT\u0002ã\u0012\u001eá\u000eôù\u0013\u00023ól\u0012¡ÊDÂàzB\u00026gu\u0004¼;«ì\u0019ÉÑE(óLáKM\u0019îTý\u001bÄl\u000fV\u000fó°ÚÂ©ºÀlÊ5_ä©=M±SRþ=LLÌ/\u0002(\u001b\u0005§¡á\u00157¼BIF_ô`©gý51¶^À¸µG¿IÑ>sOûis_ìÿ\u0014â·ÙüØBÀ ¿3\u0017§\u0006I E?-nóÞÔYm¿=¼¦<ìm!ã\u001e³¡sÏ5¬wy\u0017:ÂµÏEýx=J39;zý=IH§TÉ²\u0017Ñ0è¤KÚbY0ß%\u001bf?\u0003¦lÐ?#~\u001c\u0006øõ|V©¨\u0015¿=L\u001bñ,¢§`ð\u0007¸ÿFÊ¢²ë\u0015ÓÀh #¾Óýó!mÂ=v?C\u000e[dç¤Kl=I¡ù\u0001_¸\u0019\u001dp¸$F´CÈ, úù9éÙ\u0004­ü{H¿Py®võØM\u0015ÿ¼N÷r\u001aFHÇQ°ÀÐe§ÚHõ=g#=L«©.®.=}Èo2©ËÇ¨_\u001e=K=Hä\u0011ð-U+±\u0011§(:­ÌÔ Ý\u0010×Õe©áà_ð`/¤à¡Ó=}è9^J¶aZ^tã\u0014\u001b*ctóãqzº¬ç\u0003¼>#Tu\u00151Á0¦\u0018ZEZ ù 8ìÂÝìÚÍ5Bf2!Dn7KÖ±·8®H\u001f ÷\u0014î!#AKHV×¥W}:Ñu&\u0002.ö\u0006.kI<¼o©!,\"ïÜ-ÌÁlÑIÌÝØY²Pçö\u0006¼\u0002E!\u0016²´P?ð\"#Ø5ÝøËºðâ©RÊ=J¡½ãáÒ]TÄÕ»ÎM¬Ú³U^Bäþâ]\u001c>DÜ%Ñå\u001a`}Ò­/û~Rlÿ¡ü=J\u000fdâ1ê±µc¢\u0004]à\u0017ÃS½þ¡¥#N\u001dTM_;=Hý¢ë°5¼\u0005àßNßèòÿ-7ð-p\u000f±¿î*ÑU¼/,4ìã±F2PZu\u000fX2ò7 eúÙ8ç]=@Þë=M\u0013cåOÒÎÿÒ=@\u0007£kÇ9E\u0001w¿´[Ñ\u001eÓÜìÿ@}±Û¦jÇ<Ã\u0010hù=@=M¸è0g\u0018|æ2n¼oü=Ho²>vªH@ÁyW^ïõv©ÊÉ·ß=gÞuí=HZNä+uº\u001e_×m\"{7\u0016[P»4%è$á\u0015p0PÒy_=g)p4ªèÙW\u0010ÕÕô\u001fZ¢h{heÝ=}\u0017\"\";çpgÞ¬ÛN6¥ÿîÉV6£ºÊ«:ì0h6=M@ä\u0005ÜÜl\u001bê+=H¡a)ð8RÜÿAöcRf|ïø*\u0019ü|øêvØ}Þ =@m¤¢kãæ\u0013-È\u0004|$X=}¢1CZ¤Ã\u0016=£4áÌ>¬x\u001côA¯ðzjä÷P<;É| 9µzG]ë\u0002\u001b°Y[óZ¼¡=J<¤èCr«ê=@Ph¥êøEv\u00152¦á\u001b&Äü\u000f;_Øð7y($\u0004I \u001e\u001e!ô\u00177¡ù\u0017hñ0 ÜoÑ6Ù°òv=I\u0011ö#¬Ì rËÐ=KÜÆxtÓâ¨°J¬A¿Û«w¯\u0010ü\u0011ð\u0001|2²S¯Ç@\u001eýÒÞæ=}\u0002#Ý«9Åßö\u0019%ÖÍS¾ÿäC¹\u0006A=M®Å´NÛ\u000e±5©ñ´Èh°E×=J¯Y\u0014Î\u0019\u001d\u0019FJCIû·7·-*d¡=g\u0011\u0012×Êïzê\u0013¼\u001b@^ñJ%ÏàïÀ½<ÿr¾ÔÏî@\u001e(»|J+­­\"*KKç½Æ\u0017#Ä~Z&¼òVøYzýïÔi3MÈê¶\u0003ýB£ßÐQª49=H¶ã*dá\u0013:LHÈ\u001b¼ÜlÕªEa¡=I¡½É~ç_N¦¿mçyéa=H^R\u000e×E\u0001Mæ~7É\u001fç\u0013/{n`%Ú¡ñ}&RÄÇWÀXØ\u0018«#e¶úË<Ê\u0004àê÷>òÐµÉ~Í=J}E¦c6é­âÞ\u001dsÉ«{ Vì¸\u0003\u0001-ì\u001dàÌ.iåÛá<ÈôàÌ¹\u0004æ\u001dl²lr%òý1\u0015búÿ´´ÀmiYGhY­[@±\u001ac\u0010tÔ&ú^=@\u001fvªóææÆ\u0011Êj¨e½Êâ\u0007¤ÒØ\u001bÇø9ûÏn=I\u0011V¢î\u001bÎ=LÄhÞ¶.=Må×o¥=JúL}¶äTZÜ=}JãiUx8>×ðÆ Ä\u001bãMûs¸%j¤=}©ø\u001ezDM[>ÊNh®¢Þ=ùtº\u0005iu×ä=gcµ÷iÉú\u001e²þiËý6\u001dåQ\u0002\u0001°=M5?î=}ê}9\u0013r#¬AÂ¹*Íñ·4\u0005\u001eóª\u001dß\u0001[èÄ HsEdOÕËÒ\u0010\u0013HWÎ°k\u0007,@¢Æ;FxòçFîAÿ\u001e~ë¦¿dÿ9\u0006){-{])t.\u001a\u00196=J¶0\u00057á=H%HSèèOÁu;Èzl¿7k=}ÿ_a=g+hÐò<&\u0019+\u0019ÌÜ?Uò=KxÆÎbëÕÞ\u001bÖ÷½G´èóÿ\u0004s\u001f°ì]2ó¤Z¤Æ1,¤=Ls4\u0011\u0004ÎùÀs¼=µÒt/ó½@¨\u000fÕ×+4þ?\u001d ¾ÒÒ\u0005Îñ\u0011ôÞv«°T=@\u0016ñ8p)Å_Éd¡=}W<oqùnê½e»æb@É\u0003Ø(È´û#\u0005=}Ç¤é=LÅD>éÂ=I4\u0003´\u0006Q^év=IõTÿÂ#d\u0007SÆÄµÞÞ\u001c\u001d\u0013\u0003W\u001e=@®2i16&\u0016õ ú.µÊ\u0017 JÞPÉÏX0ÿîãÇÉ8y?2\u001c\u0004¾v!sé\u0007-áè\u000fß+Ø=@Ê\u0010mYLòmdm<Ê55*y¡#?=}M¡\u001aRIÈé¾_g\u001a3Ó~Øï`R=H/¹X$ÌÈzjk4bÊÝ»¨Obrévö=M²°Ø¬ì\u001b\u001aJ¥Á%à=Hðã?x\u0018è{c.Ý#\u0019ÅµØ>ª\u000e^iÏ4\u0004@=Kd¼ª\u001ez\u0013°øù%Ù¸yÙE×t\u0019*`Ìúì:4\u001eÀ-[Ãv%s«\u0006IGóWeL®Ú=H1Ã¿gàF££`ÊÞ4\u0005=g¡6!÷OÜÿX¶ñ\"wBØz3âvïv+\u0003uøÐoåBËÅ\u000f ^â\"½<\u000f¯³Ëà§ÎÇÅ\u0019°\u0017½>é½/ò\u0007uà+£¹\u001fáëîivvÐaÏ7.øaT¦vÂ/ú@\u0001=}_\u0010\u0003\u001c\u0005Qkå7kõ]f7;·?à­³Çfy\u00164­-èi/¸8,¯^²§I=L^7r\u0006\u0011éð}×uã\u0012jëU{Q¾1óÚåÇ.Ùôn¢ã|Ü×\u001b\u0019!=gðÆªà1\u0005\u001a\u00042ÿ=@ÝO\u0011©ÖÌQa\u001f#ÕX±@¾´ü±g¯mß\u0010U¹\u001a\u0007^=gm/C=ÖwßÛ=I¾xHÏ\u0018<ûÅo\u0013²â¬°U6Û62Y\u0006OÔ=@¦ämæ\u000e±\u0015ë\u001f¥\u0004á=@Ne*àkÎOZ&â9â\u0018\u0011vb¯ÄÕ(¸oIª&=}å¥ 8=ML:¾×Ê¶4\u0005.¦½*®=Lj*\u001d!Æ×¯J­\u0005ÐsH¼íÆLý¤\u00045XJ\u0015l=J°ÞYóÂº÷ÞçIÕ\u0014óu\"=Ij\u000f8÷_êw@>àºpËñßt%´ÉZ¡Ï\"á¬\u0001 Fú¦Ôså4ÅSS`äGÙ\u0017ã¨¿ÆX±\u001ezÑiäÇ\u0016\u001dÜ¯ËGEæ´\"\"§?/\"Ïá=M©¤¹7¤.tàr=}m6Z³6nÿp¢ýîî¿ëfð^y¾\u001e/\u001clùýÓuè~õíä\u0005à,+¬\u0007æë=LÀê]gqZ()\u0018a`\u0016=}¿C¢=g0\u0010b=K§u\u001d¦2øhÐ{Áqf+<MD«Þ¸Í,£=}J§æ\u001a=$mã÷Wýy\u0001Vß(B5<}BX=IB°ÇM=K²«HÓ\u0010É#n|R]R\u0002ÃÁõ\u0011C$Ö=Mc\u001fÑã8Ö=]vn\u001fP`÷c¾ ¥¬6,\u00045Þ6ãF\u0004N >Å\u0014\u0001r?ÄËAÒÐ3v?ÁÁØ+!&Öê; \"o\u0019<E\u00138S) \u001a¨Ä7°©ã@yüã=@¶|±\u0010=K|qNÊ±\u001f@=gÆ=J®Ûek°\u0010k°ã½ÍAÆ\u001fõ¬â|÷)\u0019¹\u001fßhÙj²Vx>>\u001cAßÁ¥lÔ¨ÈèÍÇ®±±ð^h¿¬Ðd,HUIbS°ó1@µ3á7Û]ü¦à\u00051q­\u0016ËIß2ýÅHÈâé\u0015ÑÍÿýÔ­æQ6=K»×±ùûÄ\u001bûÕ¨âþmHÓ´qÚ2Ê÷ð\u0013ÊÞæò@­xëõ\u0004g¢_0\u0018»AÕÍJ\u001dXG$+Þ\"U!ÅB93ò}z\u0003»Gc âCCàçîeÖSxÐôI º+1#{Ø=!èK=I$Å(ÚµEmÊePÞUV>Àc¢lÞ\u001d\u000eêÃC=IË\u0011T.bÅýºó7VÚ\u00184úô9ø£xòÌï\u001f\u0006q0î· ºoI@ðç\u0001uº¿S\u000enÿ6Þ`=L÷²\u001d=@¶Õy¹$¥G^ \u0007Òü.Î]\u001ctØ½=}I[Y=KýÐ=J\u0016ü=JB´¶ÈÍDÌáB=Ký\u0010:«B=g²Qéà¹È(°)\u0006xZª\u0006\u0010/p=Hd$yR©Çtq=gVRxqÏ¬-=K=H«\u0015À=L÷ª°~À=JÙm3@DKí[GíNð@@ÓdmWÓ)w¡é¹Tç¾Z<3@=H18¸D\u0018çJ\u0013VÝ7ÛÀ±Nû\u0005÷æ\u0015Øb¹,´ó]½U2Bså¿qÜc%¾Tr}ô}2\"îQÜ\u0001=¬ÑDg\u001cô=Hé\u0010j?Íp)W3ã=HzëV¥XàRñëÒ^\u0005sM\u001auIÊô\u001aPGgIã \u0011r³fËCâfÏ\u001c\u0001· ç`ä/Ì}\u0003SóßÔÎÇ3ø¢þD\u0016~Öú\u0017vìµæáÜVÏkÏ\u0010hÎ=K¼\u0010¬\u001féè42o=gé\u000fèZvO\u0013Ò[\u0004\u001dÇ¶æàVl«U=H=Ie¹qêóÐF\u0001A%-8Ìë´°\u0010?ýÒ\u0011¥\u0013\u0017_@íá=H2¸\u0016¿[yßÅ*$ï]\u0012\u001eF(\u0017ëXÀA-Q\u001a\u0019¯_\u0013»\u0001ÍSRÖ¡\u001dõm1ß\u0018P[¡òÞ·Úæ\u0017=HnÞ¯×Ô)£¹õu«ó-H5}\u001f\u001bE\u0006\"ö\u0001¼yßOÏª\u0010ª¥QÉ=Jº;wãð«cÄø\u0001\"\u0005c\u0014â/,Ê.Êew_½w\u0007×Y\u0007zÉØ\u0010\u0007´É9?µ\u001c4vÊ)Ù\u0001 ï=@zdÕ\"8\u0019åbxð\u0007ú£=HO¡=Mû\u0017L¶3\u001d\u0003¬(5Úgå<\u0018±í\u0018ZYÀÛ\u0005,Eü¸è,kJ\u000e=}Srs\u0014^\u0001f¸\"J)e\u0019`rB¨\u0016=Mø Ì\u0018}£=g÷KfÔQ\u0019Ó-¡{!µ\u0006Çÿ³@\u0015+ìw¶+êËÄSÐ½PÙÆTB=I=I[#_)\u000fí]\u0013\u0006\u0006¸Ô$ù\u0018RPLÀ\u0005E½Âjµ2Ä\u001byá;¿k?ì\u0001\"YìôÉ\u0014\"(ªcKô¢\u0005ý/çsë+æH¨,·`W<´¦ãÉp$ìÔÐM0F%à«Qß0óLÉLE\u0006\u0010çõ.ä\u000f·F\u0013ÇU¿!·õSg.£\u0007JÕ\u0005þ]\u000fÀ\u0011r*GÆ¾;ù\u00107\u001eò7\u00166=JzXh¹\u0018\u001cÇ\u001fYR|\u0007Î=H·=K\u0007cæ\u000606 gìQÛ}bß¯Z3=@{J*V3¢«Õ=g§g\u001e\u000e\u0005gq«\u0007m_0äÐ=Mg\u0011Ð±Ó\u0019ê[ç§f:öÚ§ÉÂZ=M¥ÀÁ\u001d\u0002|ø\u00048É·|?#eaÓÿp=KÈ8*YèjWÁL»\u0014\u0001O=H\u00031ýý@H\u001aI\u001fM\u001dj=}·\u0019Á&k,]hK°-IÑÂB=J \u001aÕQ[ª=HÀ}5ºÆæMâ5*V\u001ceÎ¸ë\u0015Âg\u0015ÿÑß¹\u000f\u0018ÿézN%ãwF/=LqÕjº\"\u001b×ÿæ\u0011öm@ô´-\u000fÆéíàEiçôBÍÐg¸±¿%\u001cQ½ÚªMb¼ø¢¿ì\u000fÎ\u0012GÉ¦s=H=Iã7»\u0002$ª\u0010®=MUz¼Å®:(\u0016kÉh%+ò½u¹>àÝ¨DÀF\u0012\u0002Á@äÞ3×úå&\u001bz¤5ëû¿[\u001cü\u000eæÌa|\u0005»JÅ\u0017Ù\u0001\"÷\"\u0017¸\u0018¯Òö\u001a»dB¡ìs.³=Kæë¡ê\u0012N¥Ï´y90\u0012\u000fu¥å¶=}@qèÿQÂý©4\u0001\u001cÊñ\u0016]:ýBù¹­Bê ®\u0002\u001c>\u0001ÕÓ¶EK\u0001S=ÜE\u0018E½ý_©æG÷§âÇMq8¬Î¹ß\u0016- ¸Ö=Mà½\u001e¢ ©\u0016=gH\u0019=KÏ^ý9F=L¡¦ëõíy?/³¢MºTË¦¡ä\u0017Þ$.0éc/enp8P=H±N\u0003\u0006Í-¶¬åIF^øz´ÀÃâQ,ÏÂù«ÿ&\u00172àØóTA<¿b<1më|\u001a÷I}³i¬2=bñþë\u0005AIÀ j=HnØPüíÐ\u0014ØÒÁmË7üM¬|¸OXò§½ªÕNØG.4µóbÌ·RuñQH[Yð@$úÓäûda,{l¹,£I~]\u0017$S%±j9ÇÙ.\u001b0$êLf\u0019à^q\u0017=»Ë¼ï\u000f/¸äª-³$Ì@ÉCÂÆgXÓ9i/h]c\u001fíç\u001bù¯§\u000e.îW,§ó=I¹=@_W¿¬\u001e¦TGÊ=JGOqéhG\u000112¡=gk{ª ¤«M4±j!ûòyÉ¯dã\u0016I0\u0006pzRæd\u0007Õ=H~=g\u001b\u000e\u0005ì±«ß-1J*&;«Æ\u0010ìs÷¢ýþ6ÆGß=Kk\u0007ï>!ØÂïNð=Lã£wúTâ\u001då÷Êc\u0005}1åùËN¼jÛÇ¢nW<!ÐÚ©¨«¯}Y=KÑ2¾ûÂ\u001eåY@gãéÂYü=\u000eOõ¢O\u000eÅ\u0010ÀæOCø9óú}\u0015¿Å½.2\u0007×Èâö©C\u0007¾Å,\u0014p\"ldÃ=IÌòAwÔµ)àÒº6jÎÃ\u0010³¤[CØzáUþõÐd(ö~^úk_z®<îÊ¡KrÈ®ëzù\u0014¶ôL3T1\u0016YÓÄøµö¹Ý\u0007ÓÔìF±=JS Uâã\u0012\u001f/àkqdnLÁ³w=Mïµ?væwà|üÇ=J,[n¤YY\u0018¦íð&.\u001e\u0003ÿ\u00147Æï-1êæ\u0007 ÆêãòRJ­ÒNs%>úè4\u000eìùK{ç\u0015Î»\u001e$\u000fãÄø\u001c¡t9koäèü\"e86¯§ê×=H\u001d6+æ/ö\"@£üè-]=IäWîËNÇ¨Àÿw>®ÀN¹ñ£Vÿìx%\u0017MÒ\u001e\u0018ÊoÕ\u0015ýÖÅ\u001aíqx!·=IÈÿ²a=IãÌ\u0005cÃ\u0015¾äzGàYøÁî*\"á#WñvïÿbE\u001bÃ¶÷z/z/\u0001=ã²2nJ/á @!9u>)X¯Eá>=LóCq±ò\u00156bÜu#¡4@^º4å§M¾\u0016Ôíå\u0005*åg£Ê^zÝjRøfÖÕØ\"¸ÆÆ´>\u001bétD×æ[Èm=L»\u0014îÿ{þ-­Eæ=}30\u0018¼=Lß_É\u0010§áú«3»s][\u000fÔÁTÊß³½ÿnf\u0014=÷ûÿ³ÔQ\u0003±;r©Ô\u001eP4¢\"q=gË6ÜrP©Tûkå4\"^ä<U¹TâS¯\u0002?p)Æ¸¶N;$=}s\u0004ÔÚT»FX\u0004¢w8\u0005A\u0018/ðÈÍ¬©µºN=gPW=g8>îdx\u0011s\u0018Å;>Y\u001cµÿ¯îþ·\u0014zñk@1¼rªYBQô\u00017ÞÍÛî!Ù¾vmv\u0019±\u0004p`\u0011ü$\u0016b¯q\u001eÖ=gêsÅ.Ú2\u0017im\u0018H]iTG-\u001cÏ\u0012¡ûÌÓ¤\u0004½¦]ôëp¡g¾´>H@æ=I^Ú~:M«éÛn¿ºiÃJßúVÍÂL½/\u0013~&7ú/\u0004@\u0012¾M¾û¢±4Ú=Mð\u0017ù<\u0013\u000eøÅÃ\u0014k\"Ì¼~\u0015ý\u001bc\u0011c~%(\u0014S<t¼cd(M»3L\u0012·p\u000fÙÒò^oÿÈ\u001bð\u0016õ8k!L3ÏÜ/\u0001c9Ë`1\u001eÿP5ÁÃ=g_m§$\u0005)XB<§*i6Õ¡yp®^ìúk2lÚ=H9ì¯De²=gáÁ\u0004p=}á=@ÖTÙoè\u0003LV\u0016ÑîßÏoÀÒL3â§\u000f·wg7ì½e¸MÕhx\u001b8=HjUªØ¿ÝE\u0006pØV\u0019¯iB$Õ¾ð+Ì=Jú,uÈúï!«ÄMW?zÊZ6©ú©6®Ë\u0004\u001f]\u0002Ïª}=}ØLs(ôOìlwTÊñX{Äàü»\u0019¡pPsuª\u0017\u0013#\u001c¤:üãKð×ê|¤àÛÞÛNúmÖg 4`Âx¯;¨Óý¿pgqÈvAòÿ}Ý=H/ç\u0016(\u001bÆ\u0004ÙSh]tôBöÈ\u001b\u0001G\u001a<¥\u0013m·(J¨<ý´\u0004Ôp¬%5\u0011Êã)|a\u0006øØG\u001a;¾.~­oø%R*\u001eòe@\u0017Ù¢[;¿,æë\u0007À}ºCÖ0u)¢:2ÝW{óÔlãÿábÑºÛ\u0005Åd#r§1ãwú-mó\u000e£åíÕ¿G:ñE¬zuJ$K¼ £tµÍ\u000f¨°e=@U\u0012¥D=Læ®ðb==Kî+\u0012û¾ÏîþÀZiè@l}zàÑj$¿uº=@\u000e\u0006ÒÚVÆFF=g¡ëº/=I\u0007=H\u0001ö( ~ÓÑ\u001cD\u0010S«ö/KB\u0017=0å\u001a\u0019\u0010¬@é©¦\u0001¿Ø]·(J(ªÇÌaÍiÄ=HJ9a1d¹\u0016aè ÄrÐôL¯â\u0002¦=Hö·¯Ù_(&<^÷*½\u0017»rgØ\u0017¦h¿µyûÁgñÈ\u0001øY=@»9:Û\u000egü.qG\"µª¢DºiË\u0002¡ç¦þØ¨ÐjuÑ*èsòY|SµQ1RÊÂ&\u0018úãÃÖdNÜî =H\u001b¡iãç¬±µEiü,¢»uGÐáÜS7Ý+IÔ/YT=}%­ÜÔ­ïJ3\u0013­Ýú>7/D\" ñ=} q^ÐßÑ³Tjr¾N¯Ø£ÄE=KÉiâà\u0013\u001dsëw¬=K®/¢s 13\u0011;\u0010|m\u001a¤ÌSmC0\u001aQ«=}´Üºz[dOÿð÷ÝÌrð-\u001e=KâZ½¸þÙtºgõ¼pã=Iéo¯?¼¶xÂt=J `lÂ=gn|ùÓ4c2Ê2FcËÂçö7üGføhLjÉ=g=g»\u00018xË¯?\u0013YG<Ï\u0019\u0003°Öó¨=Jo\u0007=HýÂ>]ö¨ç|\u0002+þdÈâ§>N (§¬ÐÆ\u001cQqÚÒ0îrJØä\u000eªÆ\u0017 \u0001?\u00130W½V?kcR%ÅRÀù+ÿ356cp.bº÷¸eT\u000ez=@%rÖ\u0015ÖU¾¢4n\u0014Mÿ¾ú\u0011^ÄBËÐ=|~Ôõ¯ùw\u0005Ñ±ëy¾&ù\u0006ÄéËÞ\u00068\"0Sú\u001dê$ø\u001b\u0006*j=}d\u0013¸=L:giY}Âm#é`ÊÑ7\u0013ÔQb©ÙE\u000e&Y9~Ï\u0015¡\u00152\u001e<B\u001e·0h_°L=@\u0019hëÇ4UÉê\u001f¯¶é0E.¤Ôæ\u001c=g}Ø\u0019¸óéMBîÛöL\u0013-j\u0014¦Á\u0006=L\u001b±í\u0011Kh2ßô\u0018ßÝÂºGF¨×\u001eFæa=MA4ìZ°R÷.#Q\u000f\u0017zB\"Ñ©=_p\u0019m¯ò6Mj=Mú\u0019¦ûè\u001f]&ßÜ<jhÇ»91ñB,²úý\u0013c}Ää2_îUâÉ\"\u0016}Ë^¨\u001d¶¢ä°\u001fDÍÔ\u0004PüßBfÓSü¨r=@\u0013¦*ï\"¦Ù\u0005ÂdC°â\u0010jF\u0018óæB\u001a¸<Å3¬:P¸wzfÝ¶$æé!\u0014éñ\u001d^ !NuxdÈüË\u0001\u001d¥J¬ÁÊ¤Û¾ì¬O.~¾®w®åÂ=Jd¿\u0004=Hû\u0011Ør½E>æ¢þ¿2Öâ¬©ê\u0016ì´D\u0015 7yRPLðë1³,~=J<=JübÁ\u0010bª=L=K<\u0006\u001e£àg\u0014Ä=}¿pÈfl[ÄÍá¢êÞ=@öäb·\u0013FÁï(\u0012:²\u0002=@¶EÃ\u0001ÎEzÊ\u0016æååi=H\u001aZÛ¢ø\u0013gCW\u0006èÆ:¯kelÒÙb\u0003GuÃD¡>å2ÂÝf\u0004éªqoròî?=KjòØ\u000e±ã=\u001fÇCc\u0016#¬\u0013ä.RN°\u000f~\u001bÔØèb>\u0004ðÒ½æA~÷FèQ¦¦íªþå\u0001Í\u0006¹lðïT¿ý\u0004æ\u0003Ëå\u0006MîRfÿí^Åí<&®ú=@æ\u0003¬nå=@\u0012Ö× &\u0006\u001dÕ¬ã3=oysú8\u00129E5D¸ëä=J\u0016=g¨ü\u0010)NÙÂé×x(Lªÿ¡×ËºZ¢\u000e%¿ðâø\u0014Ö½Fù¬4NÄÂð\u0006&¢E|üR÷ÃÔY%ÊVH»ËìuppOA¼â¹Ñ¸V±{\u0016ÿÍ=JËÏ>\u0001­¾«\u0018Ç=ID7áJy Pç>9ÊdU\u001b~÷ÓöðÌ¯à~ì¦ÄÜbvmçnoÞ ®Sú<9/e\u0006çd²dÐþV:%7&Ú\u0001ÿî7b=g¼äö2uL¥Î=}é§Êu;î&¢\u0005¸J.Üvá=LÔ?ià4pý\u001bþ=ICesH:c\u0001ñà\"Dèi·-¶·ÃZ«nVEG©/ð1ìäU+©.u+\u0001¦Åï\"æàÍ7vvØµÂF=@ê%KÖ4Ðò¨ON\u0005>ë¥væ¥ÆäÖÄëïTf¥\u0006ä\u0016\u001eöÖ\u0002Ç#¢\u0005Îl\u0006u÷á0ùÐÄöæñdö\u0006À.èÐrÿöÊ\u000f=L=}çÇ¹&¥_SÊ\u001dhJBPà=Çe¨\u0006\u0002u8\u0014Xw\u001bçuAr7£©ñMëb³òdV­PB=L¨R\u0016æz\u0011uõè=§vzL£PU=LÊX2¾\u0016:Ãý#loïn7\u001c²Yyó9veËgø¼²Ã¬r3øYÄøÆP\u001dÃE@.fÅP=Jòl\u0001«Èº\u0013&\u0001\u001eE­&«^í\u0001\u001fi4=}aÞÙ=g\u0012·L®îÙì`<ZåÒAã¸\u0017öÈcÉ\u001c\u001c>pyn\u0006:¸tgÉ¯=}#AzËqÖd \u0005{´\u0019\u001e¤HØ_Íbôüê2ª­¬z9Vÿ Ï\"\u0003ûyÎV>võàºN¯Ñ²3c8ÈÄÛ1=gÞ/¡þóXWp8Â¾¿ûÕ©nVrºÙGþ2¦°õÝ\u0006án«ÕåØñ/ÜÞÃ\u001f6Ö7¼EïÌKõXÂ\u0005Ý½4vù´ÞF\u001b³öÖîQ\u0011\u001bÖL¤r*NÞÜØËª\u001dÒ\u000exÃ\"(Uæ=KS©6Þy=Hpq\u0015=@yªn!k\u001d°V(\u001e¶çÊ¾Ö±y©ÝxÃ=M\u0016(XR\u0001E\u0014ÂÑ\u0002EiÖ TÂ\u0018 ÝóÍæûÆVáíÉ15\u0014Ua¨È=½\u0004Pv¥5J\u0004Ë»F¨ýbÜ$t@¶±è\u0004o¾B\u0013ó=g\u0017^® åÚìÔ2Í5}ó#XÞH\u0018I\u0003d7i|eèä\u000f\u0007B=IÇ¥=HÇÜ\u0007ÿ_Ì=güiåç\u0014öû}+3mß=};^di=J\u0001K4$G9\u0014H¥,BªöØbë.Ãl¡àaÔz=}÷Ä¹(ß\u000eÚ?ÝÐfþ\u001cjý&\u0001=M\u0015]&à\u0006\u0017-ÔP£´\u001e ¦*r÷ÿ\u00030âöùÉ±\u001d4!Ö¹ó.ìvù\u001c\u001a¡=HWëYÚH=L_â\u0005+ÆÎ8ñïÃx\u0003\u0012V\u0003Ñ\u0006\u0003kôqâë\"()\u0002¥J~ìý\u0007¶\u0016\u001b,ä--~XQ µy\u0012\u0005-Uý\u0016ÛÉ\u001e,l\u0007*Ê}â\u001d\u0007IÃ¾(\u0014| bÓXìÞ÷Zm3öpzMånÐiCöÐ:ú%FRå,\u001aq^ÖcùÊ·)¾l,\u0013éÛò)Ñ¤7 rÐëD¹&,¢ÞE)ìî~C¹`å)Òê`\u000e1G$S\u0001Ã|´h\u001e\u000fíú\u0013oëÚDf\u001cWa\u001býî2½øÀïGÅ\u0019\u001a/==Jr4>ºôÙJhéÓäH_o\"ð8è«fè^=I¨\u001c\u0001N!1¡\u0018©fæ\u0004\u0002þº¹ Úµ?ï6áæfß\u00072ú3AÆË~ðµ9»×¶áìlÇaæD¶¨¹ÏÈ\u0004=@q÷\u0003~;Ýn×8bð^\u0002</\"fWÊB=Kí\u0006^78Ü­þîrýîò\u0003+iÃ=L3«`7þÇ\u001dpÁ\u0002ús¸Ö\u0007ªòÄ\u0003m¶=Ld þét%«è=g»=M\u001frX«Lh Ë9fÀF¾=gl\u0015ô\u000e\u0007\u0016Ï/U\u0007µÊö!Æ\u00150­\u0004!\u0003µù\u001eäÈæp­zË\u001c¼¿[=Hµ9=@6¶»\u0004\u0002\u0019FJAünÏ·ãÒêÀ%¢ÑÁ=gëþÃØ¾ÐsÙ^ëi¸=J\u0004µãÓþ\u000eì=}P)\u0005ë|â½\u0017Êõï$Å=@\u0017Ýí!³¦ÏJ_DÉ9[¦â+Ú£fú¹º\u0013W[ø\u0014D§j\u001a\u0002PùLÆb¢SJÀ\u0007x\u0019\u0010[\u0012ûÔ\u0012¾\u0016NPeÿµ<4vC\u0017ÎÈãÞ=@ ¼éÏ[{>E8å¡bHFöld\u0001õ\u0007¢N×±´CñÒ=HvizõeÒ!\u000eq¬OP`¬=Iã\u001drþ\u0019~I>Îk\u0019\u0015Èêû:Å=J¬Íå¸¤þîí\u0015G£ì3_H@©¾¦ñËÆE(°\u00039miéà÷õN;jâ¬;Éû8ÚÎSyöeú\u0015\u0007á®ÊòZ.¿¦\u000e¾Ïò\u0012Æ\u001e¢Õ¾èUî=I²4\u0004\"·\u0017Þ\u00045cø3¥Ôi\u0019®kyÛÌ« VËLòEÏ\u000f¢yìç5ôÑ*ß\u0010+èüFÀÅÒ8­\u0014N\u0016\u0019\u0015w]\u0018YLÞÅiÜ~èCD.{Nx\u0007\u0016G=H7=4¦]W\u0001DDhù\u0010Rðñ¼¨Å¾J±{\u0010s`a_÷=}ý\u001d¹\u0013ÈáÁï±_%·údñ:Ì~ññh¼¼¸5¹^ß\u0001c\u000e3\u000f5¦ã1Kâ(ÛÍ¢IÛ1[Ã­Ðés=@+E(0g,+«o±\u001fWÓO©_ô\u0007dAP\u00195w\u0016W,0\u001dÙûuó(\u001d»xêé[§[\u0012L¥\u0013õwqZrÛ\u001cë=KET»i\u001evÉMÍÑ0dMúÝeó\"â°W­i+;NLîÿ³{Pî£gXTÂ¿©zÚúÔ¬·pñtæ0óÏxPk?±®ÑÁ.Lbõæ×Âj²ì¤]Qr*0ÙÆüïïìø|£c\u0014®Kxq/\u0017Ë¯#0H=Lú\u0015xy<£a<£A<£!Ç1X£a2x*\u0011Öó\u0013xÉø=\u001b\u0005ú4ök0ÆvB£cÇv&jç}Âp8¼vBµ}P}Ð<\u0004@!Ðãµ©8MÒe²IaO=}ßrÖÜ\u0011äa2û¿¼Û}Xîº»Ic²xÞþÕä\u0011\u001b\u0013Ý\u0002*~vwÀnùnè Ý÷óãÙB\u001e¾ûq­ÅÈU\u000eCâ®¹éÈ#¥Ù\u0012é=gvÒêà Îú¶ÚÖ.¼¸_}\u0012\u001cê;üùÙÅ\u0004­¹k×\u0011Úvµº²\u001eó=HÜ¢ÛÒ|[!«\u0001-4.¢\u0001ä©== üËÃûúMÝÍÀ\u0011=}î\u0010~72·`\u00136äÓþB#KïÊZjCå¢k°:ÙMX\u0004°CØMG\u0007+tR1?Ù+[dÿ½\u001fBÖ<T3x¦÷ÄÄ\u0004írKªZB\u0002²!;bN· ¦q=}{Tþ=HÞ¢|ø¸ÌVnÐ\u001d4+ÍÎðN«}Â7¯@d¸{ã][\u001e\u0003wÿæÂñu¨Ì\u001c=Jski¯\u0016ÿ\u00196±\"þÚw2á>¹\u0017Ù@b-^Øµè=JQ=H=L¢¤Ã±\u00062f\u000f8Ã}¿M&\"\u0014jv®o|S\u00165[4ø\u000f`¤ÖXàÇ/$À)=gQì=HìÄoÔP\u0010W*C\u001bßÃÑKO´=IXæ þ\u0010æ}jÜÉ:=Hetí\u001aÉr{¡2gÒ¤GN¼EÆ»E/£¡\u001bï«\u001a\u0003ðel#BÛ\u0015;êq¸½MÖ1¥=MÅD2Y5\u0005c»kì\"WÁ2iKü^7n×\u0010ñ¾ïp\u0007=IE«jïÞÆYFHó-?¼´V=M/æã2ÎaçëG¢·+»LÑ|ääùW)\u001cRÍ²\u0010W*a8=LÈ§Óg\u001c´©\u001dÜÏa0ð]X¥\u0017ñ/9t=LÛ\u0014÷=I­÷Ô/3æürx×_d¶=}ª»¹È³ÐV\u0015,ÛòÜòùKÃzñtì°>°ÄóÃ`û½¥ë«\u001eðêp1m¿é\u0010¹Eèæ´;6OèQðiå_Ù%\u0002¶-Å\u0014¡cÚ|K-Jcå=K²ÕërÇ¾g¬Ú_©ýnÇ!f¨jÝÚwk=gÓãØ7s8½5;|m\u001e¡!òIZ=\u001e¡A5;=}¨°úðIÑ!T I®«\u0016=HâÎ=J@qÓ³D\u000fE:\u0004\u000f=J6Zð:²9D]ð±1Úî¯\u0011Â=K¾æ%ù.\u0011¨¦ª,ìx¥y8\u0001\u0010\u0001Z5¤ìO´¾;¨}è\"¡&\u001cÐeEåæ\u000f¹0=Mú|g\u0011îcÄU´ÐbÚ?Y0P=Lÿ7=HsAÙóÉðûä>=@f3¤s\u0001\u001eK§7{ÿð\u0007Ó{@;l#¶¹7_=KD0ý\u0004çëX÷ñUUL^o<nèUiü55*ÓÙ9ä\u001c\u0016ºc¸=g:_a¢Ì]\u001eø\u0006.n8Ä[Ö1ñ: ²üÊA5´\u0007E\u0001ï+YF4Î¨\u001cÇ£*=èÕAR|Ò@¡ç=H 5ô¾²ð,PÖDT8ø9Z=Ì¼Ï=HÊð0ï©î}s%·ÜC\u0017M|Ò«²\u0006X\u0001ÓX\u00046KÚnjóS}ÐÍß,²ß,B\u0016}ÐQ}ÐÕd\u0011Wp¾e¥f\"¼º:Nªýfm\u0014±=H¯Äó\u0007Ûem\u0007qò\u0007«3Z\"³\u00100Bæèn£ä]\u0011®ìàRPè=@\u0003\u000fÙC=gÔ8;2;ÖLóÖP\u0017²=g¡\u001eQs=@È¿¯Ý²Ðë²|7íñZrE×ab,[¯5Ï\u0016|þ¼ÊS\u0015\u00160Üa¦´ë\"BIÛ°Ü\u0011@å/÷ã\u0007¹¥u9×\u001c\u0013a@L]ê~Rï#(=J{-¯§>=I\u0003È¦`G\u0010d+=I\u0006Â*t>U=I.=JØªF8.¥[\u0012¥m\u0001¦\"Ý4Ë\u001bf6¡gÌ\u0006?ðÔ\u0016âp®bp~ï$\u0011®¢\u0003÷MTî¢¿SÂ\u0007`À=JØ3¢dcp\u0011=g1×Õb¡²È\u00166§0ì\u000eM¼=ÿÏ£ÿîìxFj¹&\u0014V|ø\u001aÁ&ÎL*=g¨|3<H¢^ú°¡\u0012ÚÉR¾c!³©Ë÷w_só&oÆ³,=}ÿmj©Y(=I\u001fåø¥\u001a(ÊÖî$0úrX\u0017þ\u0005Ká\u000ed?y=gl5\u0014¶h^à¡)ñZøp ê63ÌBÒ=L~/lÅ#r\u0016Y\u0007,XW®\u0001S®úøã=@\u0019y}ì¸ÕpLæxYS2¨\u0016²ä°0\u0018=@¡ºÏ%îLä¦Ütút\u000e=KpF\u0015¬¾ÜKi°¸ù¶Þù>×¼\u000672+lþT\u001f!Q=KáËÑ§L2)ã(½³4ý\u0015[soJÒ2ÏµMR/\u0017§Öè\u0014\"êb\u001b¤ÑÝA1ÓN=Ir%X5þ5ÃÁ®iªLJ¸ØZt:ù,¼\u0003Wê2ëñsÈpÜà:]n=M®Zî;£\u0017æô?ª~;\u0013Ê=JÎÒ\u001dF¢ú%FòúùóåÃPV\u001eô×Á.VïÅØþõø\u001a{Ôç¤xÃ5¦êÄ\u0006\u0002=LcEx+öäV\u0001\u001fV¸&À\u000e=Ll\u0011\u0006!6hò+³®h\u001f²öåÃÎ\u000f.\u0018Tú\u0019P_®?©c>8qv=@³ÂàAyVå+jÿÍDNùÍÄÂ¢ÍkEødÖ5Û×\u0002\u0017¦ã/V\u0011÷0À`¸¢·µdÖ½=gç%7*eik16°-»·ü\u0019=}°h:CÒÁ^\u001aN\u0019Ø×T¡aÉY\u0014ú=gIyv¥7©,\u00184_ö,³2h\u001b¿«+ÁÚ]¿=M=LK\u000fi\u001a§»µ½OV©ámbH\u0016æ­rdå¿ð­Wþ\u001cþë28 mÏ=}§=H4ý/®.³±L(-JSÜ+ÓÒ*Àû\u000f@ªÉ«\u0019¥:7^_ZétæKK\u001a¬½=JZsIpÚåû-\u0006\u0019]_Á«6\u0010ï¾É÷{=J9dE:Iç9m±Uè°\u0017Ï*Òí\u000f.IÓëÍû_{jDL¼\u0003c¶¦Ô<á¾ýÞ2>\u0010``t¨\u0004{å,ôÌ\u001aqé¬ÃÛ\u000eÜ\u000e\u001c­õÐ^§%z,ôð`\u000e=LÀX®01Pö;CúpLÿõôGþ­÷,±Ý=Mä.\u00178;Ï=K)A/d¿«\u0002-kÖQÁÖ\u000f³­Ù$¥ =JäD©b,äÞ21C/¦¿p=Ià*\u0014¦mÑGûp\u0014é=KâÀ>ö[+vp? ©+>äo\u0013öZÜîÜO¥oÜ¿\u0007{`ù\u0014Ý3Ã÷\u0016¢+Ræ\u001d:ë÷x±ò©;QZï\"Ñà+dîNqå9úäé_§\u001bªgÂ;§ õ¡=LVho\u0005\u001aùEþpx\u0007s\u000f¨}°÷F¬\u0015¼ýªJ}\u000fõ\u0005¾ËÊ%\u0010àpÃL#§qV¦[\u0016ðR£:\u0017ÅÍûþ\u000f@4¬3\u0015:\u001dqu¼\u0011Ü+;Ýéø¤!úc=@\u001b@\u001bT!Ï(ñ`}1¬,°§rs{\u0007­e=Iô2÷\u001ecÔøy£Q®ÏÚ ýn-Cv=}í\u0002ÛqÂY=L\u0018¿²/¦a&=L=J\u0005\u0011AE=KNÌnSÙNÀ\u001a2iJBã~ÈTúHYÿ»6ö\u0014©W0ñ«üx#\u001bå==}ìJGùgZu^iAEö\u0017\u0013-[å=ßè=JüLr)ÌÙ! \u0018ï=@\u001b²\u0013.\u0018°Ãÿêõtû,\u0017d«¾=õ:(²o<*úwÿ=}~_Ôè\u0011äÿ_eël?Z=Jä \u000eõEFH\u001aÌÃ`µÏèçìoä=IÕ`õ#>,5û\u001bà­gkÑI5Èl÷Ã®\u00181Ú×Ñ»w\u000fç=H? é8?ðuüá+¼á¿\u00180]Éá»ë\u0019COÝÁ¯\u0012GìÐ·EÁ°§Âb²TÒ=JSn&7¾¯Z_½\u0002ù=I\"\u001dÝ\u0014ËB~xP`##yw%UjRûòwZ£H=M^Ê²²<òÉCQÃ-qÉC,I\u0014¶!etæ\u001cÃ¡Ò(#¡\u0017\u0010þÞ=KKM:Á2./¬<¡*Þ/T\u000f2ú7/¬¶ÜàÄK0²¨;è¢Éóôläÿ\u00123u__2WçãÌ¬lxw?¶¤½î0=M[¯þ9,ótòÊÊ\u0017É.Å¼ªÌ& #!¼\u0011»M»\u0019\u0017Êº/ª6t]§X=Ç°À_¯G_=Hµ´«=I°[§X]\u0007\u00159{ªz\u001dc$Ëðn\u0015\u0015ôBÇ¾6é\u0004\u0015)FÍ\u0005¤!áøO¾óä95Q=@®}ª}AÙ4êa¾ó£Þ°zeÉv\u0019[°ÑÞ\u001fÁãø|8Sy¯íôÃC\u0011üDaùó\u0018¶ÃLL\u000eø\u0004\u001cSõpÐÝÖik1Á³ákF´Ô\u0013´w\u001ewÓÈ\u001a¤îby*ú=L\"7»-°j2aYgN}/)À3x\u00170=Hàyax°«\u001eÇ_/£ð¢î\u0003J=K}\u001bh+½åpBïªza~ÜqrPô`&º{¬£ð3=gP#ÿö½e³«Hc¨,\u0010WiÆ(¥-C³·«³¬¯¥Âªÿ¥=}û½\u0010%ÑèC=@õF=M[zM%\u00061qÌv=gÝ\u0013%Ô®l\u0004%8J\u0019æK!±înJËÒüb3¦±ÄJ\u000eð²:32ÿ;ïÐ=JÈkjÊ=LI=¬*¿wx\u0011]E-/íÏ·µV=MUª]=MXëÒÌañp|ò|sr$û^´ZjÆ\u001c=KWNÑú;D\u00150(±ù¡w|ó´O¨JwÓ!·7Òé)rÞBV§`Ö>\u0016øF\u001eÏÝ =g¼\u001a;<¢kThDÝ@Ûí=@(\u001a2­K¼B`©ßáoK¼áWa½¤´áuA£Ñ4Vx®\u001b¾nWãøê1µ\u0012«-å\u001eÉ|xÐ|Ñz<eÚUâÚR³¶©m§\"p§qïè/ÅÊòf1\u00107\u001eÁlCÍb¨øjþ 0\"°Ó=M$NWËjÏ\u0001_¹\u0013vW]­9rÞ3?``j=MÓ{lÞ:£0Ê\u0019Â^5¸BÁ¹\u0005\u0011ñ\u0011\u0011å5>\u0015guÉ7?f§Úda?&¸åméÉ¡\"Ïÿà=gxñE*¨®¦\u0010=H\u0016ÚgærþyYkA`´r*ÝúË9îò3Ì\u000e=}\u001c^lF7¡Îü\u0014\u0015 `F\u0010J?T¬<På\u000f\u001cçÈh»^ípéÙ¾HÜ0)|\"¯ª\u0011eEùR©7°,!U@õÛÑÑXñ3`=K\u0007²ÐmsÙs\u00198 =KMM\u0006}Æ {{\u001bw\u0007Ò×WÙ«=K@&^rP`ÄkÒ-Òs;a­Eâ%6±¨b£¾\u0010BY\u0018ü?·M=L\u0001ç/¼·3[nqÐx*dòZgÚ\u001c©àoëþFj°Úµ4|-`p×:¦!`ñw4!ûæï¢±´ -`æ\u0010µÜ!Ê¬\u0015ÎªAïÜ\u0002ÝÃUÍê<7³H@ÞYv\u0001=L]óê:¸6\u001f\u0002¿cøË\u001cýËÁÅ$\u0010IÑ·õp£Ï=M>kc\u001e ýEU\u001dÒIâ¹(>Ã=K³\u0012=J;yÝYÆD>Jß?$Î¥|Hoò\u0012IdÎS½)WtbßEò7.ø¸µ\u0002\u0006#Ì|6·?~èÌ\u0014\u0012b\u0018!\u0006ãÌà¹??aäÆ-¹Áö¡Á|áe|ô~fäal6Ãg\u0004?\u0004·.\u0003\u001cZ\u0004¶ã\u0001lU\u001e2;3êH^\u001c$@®Á÷çÏ¼_¨Ö\u0010zVÜÚD\u001c~XZÃEl¶¦ÇÂ^8]+Á¦ÙÐ¾ò:G`=H=Kû|`Åß0ÞFúga·\u0017õ]\u0010ÿ1=MNZ¤ê7rz¦\u0019Í%î^y\u0014Ïà\u0014jçUív\u001dß=H¼j=Mµ\u001e~¶=}Á±öyðð?¥°áhõ¯i\u0018=JÔg½4¢hÿ\u0002\u0018´ÛáüÐwVÚ¦Xdµ\u0010ë\u001e0w\"BºNÀA#ø5!üx%ø:e«Rr=K ¡l¡\u0003)ÿÑ_«Ön ¤OÇL{=}çsÝÎå gI;ºÕ\u0001 A\u00144)Ì =L=i5ÒùUx\u0003R\u0001©w\u0003\u0010#Úw£\u0003j?Á¼qü^\u001dÙöÞñ OðS=HÚ\u0006¬f\u000f´[ÐG¾zQ=Ï\u0007ñ;¯5ªIô\u0013=}*ÈyÕwmwY­½*È]Z\u000e>Ù7Òj½CIÝ¼z¯u\u0004\u000f[Æ÷|èrÉÞñ>Qep·ó1¦<\u0017þÞü¼F¼)÷¾äÇ\u0002OVjÄ9é¸°ôÇ+Øq\u0016ø+{2a6Es_K\u0004{*÷8È1C\u0007]­ùn\u0017°Bkñ«1Ð¸+Ç*ß=MlÀ?õß\u001al=@XE×%§\u0003Í¾£áo\u0006NÐho\u0017©e\u0016¯zg¶ëÇeÐÄÇjSÞ]\u0007êî²ðSÝ\u0006úküA=Jæ5`v\u001cÔ=g=I&|1ýÙGB\u0013S©©²39]q\u0019ýrá7èrÚ§½\u001d!¯i½=L\u0018Fæ=g=g3D©?f?÷Ü\u001fÛË#iua\u001e\u0003ãoÇ°<ø´#ÐÄ)¯ytdF±U#\u0004qï#¸£§j.SÊø¾,¶/«fÅÓÅw(ímöK9¦þÝz\u001bÞÔdee>ð\u001c3K^ML3?\u0012GõÆy!üÞ\u0011\u0002ïar»7û«Îá#þ\u0013L¶å=L]F=@@ÀG±={DèÝæu\u0014ûG,EoàÀÒy®=J\u0014h`½Ð°\u0017@ZcbcÎ7/\u001fç}ôG-\u0019¬[±ò×Ì7)ïÎæÑõàË¬¯÷­µlÉ+òÀ+¶TAòÅ\u0017\u0017C.òÉ]IÔWxåç¨0B\u0012ÑH*ä\u0017x¦Ñ=KTJ{h`\u001e=}/ÙßÆ=IJ#\u0002Oäi6·Ã=L\u0006Î¨Ã`ðíÌ=HÏC =HRûàr ÇiN \u0015ðÍFU£`VV\u0014:UÐXø¿àìÂ=JâÆìÌ/àmó7¼`äÇR|×Høýn)!ß\u0013V3«\u0001¬o\u001emö¾\u0004%©ÝÐ§Nxùó\u0015höÖËù>\u001bïBÛF$ë³l=L}D¤t;_Kò=g\u0005ãqlÒÒ;)d\u0013Ì< MéóWN,!XÄ<¼Æ¼±_é*{P\u0013=Ko*\u001c\"´kOM±¦g>,e-r²<t\u001e?T=JXø0\u0015\u0014>G;òi¨n­\u0019=L%=Là=JÎ·sG\u0003\u0019â½\u001faéÒ:\u0011ê\u0010ö¿<«°ì\u001fmÍz&Qß±íRªT&ÞgNLC³?ÒP1Ð=Mü*x\u0016üî\u000f?·2Z\u0019À\u0015ñì½¼=Kø~ì =LÜ/Ã¹Å´,âáSÅí`Umî5µ½mhDÑrÕº?ð\u001a*ÿ£Ã¥d=Jö`ëH1B`\u001a3µ\u001b\u0011ªÉ\u001e\u0012\u001dê!-\u001eÞ7`ð=H­¾ÖV\u001dÐ·é%¨®<â\u0012G~\u0013ÖÿYö7Çw÷ó½ZÈíÅñä=@7uæU5Á`Ú¥X=L/êf\u00164µ^=I@¤=@|^\"ZÞá¢+Xhã¤49íÎÁD\u0001>=JÑK»\u000fWg\u0006C\u0007jOCÕßø ôjÕäµ+n¢ÛV1ñÞÂgY8OÓ=}rËJ¦µUÐ«c©Ú¢WçÂ=KöÕ=Kìq=L?4=g~n0)[2{ÛÃª¹°.X\u0012ë¯|Ú\u0011\u0005ë×¸¨`°hö+,©][mö?¸@ÕX-ª¾_´©}»\u0012Ð\u0005¦1 î=KØ-©åTËm[%g?\u0015ÛÑþjì\u001b¿Ñ\u0010P¯=&G Z½°ørtkÔ\u001a \u0011\u001fO³lSÑ1ÑLc\u001dJeÚÁ:üYG)\u001b=}üHýÂ=L\u0002\u0017©íj:Û¬Ü}ÀD¼\u001fê`[Iv\u001c-¯lÞ+ÿ0ÜÜyjsÈz¿=LûpÓn\u0013÷²m\u0002\u001f=K\u0018åêÔÅzfÂN\u001d\u001fÇ#Äét)\u0017o§\u001eiaÔùQû|\u0005\u0019Õ´wÒ6|\u0017]BB1 X\u0010lÇä?j¦­ê\u0017#Õ5½5Ûê\u0002x#·¹&=JÝÊóÎÚC*@»\u0013ü_¨l²i\u000eÍzËÒ÷N*âÐe«VlþÚØY\u0019¦\u0001¼¨=K1ï×°w¥~ %çâ!ÒÞV½\u001a7Ý-î^v\u0014þý½`cIH?Eé=I(ó[A«3ês6·\"±DÁÈ>ÿ Â2~Ài¡Qiª\u0014ÙÝC¹`E=Lh~ú¡t¾^Ý-=K\u0002¸*èÄ=Iq&=Lþ\u001b9®ìl a´\u0005±·o 0¥ì©,þ:ÌÚ{Ã§ï:ô{ØÄÆ\u000f.ãiêÙÛ¨´`EI¾E¾\u001fPøÎ\u000eWÚ*ülå=M°ó¬1Æùl=JmP\u000eÎ)!ÏÕÏ7yýeûzï\u0003ø7½ôjõj@d§<î¿=}=I§ÎÄ&F¨Íêqjìp\u0004=g(Ús÷6ëb\"¹4bÛUDO\u001c\u001a»a\u0012,òú4ébÀ=H\u0005òroaLú=L\u001fQÓ3Rº=H:bhºªÌ=@¬Ý¬\u001caïWîIRÕ©à®}\u0018ÄögjjsMÂµ©=} =É°\u000fDb\u0003ªcÌé0=HÝã\u0006=It1O¹D=ó\u001b)@v\u0012Fí¤W¸U`¸¹M]rË\u001b±<Q²!|MrkÍ\u0010$ÐÏíÄ] /[­@] ?÷.\u0002\u0013\u0019ò\u0004\u001cpcoL!lLéº[dZ2Yt±c¨]¿Õ@µÅ)Ï.¨%Ìvÿ=@}\u0017ú=Lc©xcéÉ\u001bZxp]¿\u0007¢zèÙ<\u0001÷sA=}ñãÍ\u0004=LîÎ\"ÂÊx-iZ$\u0004G·\u001a¸¸\u0014ÀM\u000e.ç[\u0010³6¶8¨[¿&\u0015KHÛ\u0018ý\u0002hþV{Õ\u0011¶Æ\u0017%n)YOM(À8O©b>Ò­{ö=Ii\u0019¤Ë=L=KßD\u0014=M»Np=JIÂÁ\u0002N«YÚ\u0017]|= ó!WíI½d&¸×2\u0015ÆÐhN\u0001µæ1¡ãÚ°¿X&¯@\u001bpbw\u0003tXXÞb ¥XíIÛ=M\u0014,|w»UH%M @MyÛ;i\u0012¤\u0015Ñ\u000f¿í]{PíP&=}l\u001b\u000fÈ³ò~Ð\u0014\u001cjÈø\u0019KfSaSÂ=LÖ4~c#ú´óy¦¹\u0001Å0Æ8¨«ò=K4Kùx\u0016\u001cùâ\u0013Q.¬ p5ëÔ*(w3ÅrÃìbs+ñ5S\u0007YÛÐflX¢¸NÊN\u0012CÆ\u001d+Ò\u001e£JXw/ù\u0018×\u001bD\u0015Ý=KÃY2å\u001bö*Ýús\u0002M¯ò\u001b\u0014¾îætgeàÂº=H!çL ]Ç(YæI\u0010êá=L]û@4ÈB;ï8ü=ágmQÕed3\u0017M÷ÚêNe(?#´\u001fFù\u0011ÍÕ§J×öR(7ë\u0019´[6w¶NkáG\u0005³>­UÃÌË\u0012YF¾>NöMÞ\u001bNç\u0017à\u0016ãþudù \u0007X2æ£ÖáA»t\u0012jÅ\u0016`\"ö>\u000eì}ú\u0004\u0007ûÂmWÄý\u0003ëXeA¤÷}êù1o[õÛ~Àò©H6¤½g­\u0014`V4#ôÁ»ÁÃäâ\u000e<øú<eb-\u0001÷¦äå2úK=HQ\u001f$Wé¦À\u000f¼Êâ@¯]\u0005Î¾4ìø&R/P¢éû¬ùGs~=gî1»Ò»&_\u0007¼B+x\u0016ëøXÄ1!ø\u0003Tøé®e\u0012Í*þÜJÆ=@ïò6ûÆey¦Ë¢D{å=@èf\u0005ÄV\u0005\u0015¤è\u0001p?_$cm¾o(bÅ:ä\u0019\u001cL\u0017\u001amÊ4ëq\u0006c£Ó\u0013MÎÜ\u0001¼=}ð­ì%¼nFÕ¥úÀ¢=gýí\u0019_õ¥lëêBô+þw*ä\u0019\u0016=g=K\u001c#TÙ~\u001f\u0018pæ_à­ô}¹\"~\u0001E`Ó/>\u000f©.Ñu=g\u001fùK©+J=K2]P\u0017½¼0R=@×UPBDjF1¹ñm:d*ÊøU<âAy6ä4Áh.H~õµn{n!ETþ»Ö×Dªèòïe®è¥u¶èòðe¶èz{Öpÿ-Á>pÿmÁ>rÿ<{fªèÞÚÄæOþNõ¬\u0005ÜühÛÙT\u001c\u0016Òò_htº=òÜ²^°eAñ|{ò/ÝØ±WèÝ¥Y\u000egIiV\u00154z\u0013xÉ­¿wmËþuçZ»ïIã\u0003¹ÉL>cfk(ë¡1kAsµImIÏ­1kd\u000f ²I\u000f`f×Ì\u0017fÓ|=Ï­\u00179Zs\u0015(Ú=Ï<(+²Iµ\u0016(ä1ëÍ\u0017Ù1JG\u0016\u0010XqÛ\"<Y!´ðIZÍl\u0006I¾ªÛÿaA/Må31Ùló8\u0013í\u0014Él\u0016<ÊH\u0001jä[A¶ïXp)u¡,H¦\u0005×¬C§EMâQaM=M^\u0010pÏa5 3=K,·«ò\u0016ý{¤âIà]uú©:=g\u0018Ü\u0017Òg»å¸£_móK¸·E)\u001dÑfWª±pìñ5â/#\u001b\u0002!ð\u000ejq¥øýVØE°¬×p¿pnõÚáåÕqÛ^;ñ[\u001cÜØ¯t\u0012IÄÎÉú%\u000e¯ÌjJB t%N\u0015å9bßó¹CÝ \u000eöÙ¢&¬Dø½Ì=L:\u001bÜ\u0016ýBÀ=LÍÜë4SÍ÷Òlaø¾à½àËÎzÜ\u001awK\u0007F9Òh\u0015 P&\u0004RB²\u001a¦/thÍØ=Tºy²ñ·U%\u000eT\u001d\u0013o¼=}!Ðv;TX© tª\u0011!=H=}\u0017»=L\u0011-\u0018\u0018\u000eÙ\u001eYäÄ¤mè\u0012¨AÌê³Ða=I\u0006þßÞß=Kð_+¯\u001e4PSÙ#\u0017\u0010.Y;Ù{®8Ë>×\u001fÎ:ÃÈ«ÌtÑjTî»!èd°=H{c·;Ä\u0010±B\u0001S^&/½¦\u0016DôÓSýÉ«\u0016ý w<CQ=Jaºð|*G²ì°®kÖe´=@oÍeíâ\u001dù\u00043A)ü3èôDÔ \u0016ï¢.çVçBÄW=Jã-%ÖWhYdßTæ J2þÏ\u0005òïOìçZÊ \u0005­H8Ñ¯M ç0\u0014Ï)¨\u001b©\u0002-\u0014ÈáV`b\u000fTªÞ*O\u0016wwß-ïÚkb¼Êl=L\u0005Ý\u000eg>°=}\u0011\u0007C^4Å®Ü®6z°fRSÚÄ\u001c0´qÊ÷=g\u000fz\u0001O®Ïªi¦C©=g~Ð\u001b\u0011YÛLcüñG+¶\u0015KÜ²=JX=@ñG(Ã]!ÊN\u001f\u0017Ö3{\u0014Æ¨m»WÃÕGÁ·ãlgv=g\u000fÍ§¸¤ºsDå¶è²\u0018=¡üZPëü\u0011û^ºø.ü ýo\"J:O#e<¢åÌøä&&³D98ù\u001a\u00057è$A\u0013;0v\u001f\u0019½+g\u0010\u0003¾Êr\u0017]áq*\u00140àôJ=I\u0010´=g¥|v&EaÞëª|û¸º±âáç»ÝÂ²\u000e\u0001íÂúëÈÃøòìIÂÿp5=Lå=HÙðºÇðW\u0012\u0010µÖÉ¦bç^=LëHÅÜ[\u0017\u0017êWX(=\"Rª=M©ÜBx\u000e~²¨¯ü<CÇÿì4N=Jåö%X=J§ü]t\u00016V±ìEæ¬@n 4)§\u0005N=J\u001cæÄ;=MDYï*¯ò¡¬ì1/×iÃ^\u0006ÜÅ0Nå\u0005\u0018½-=HR}!j=Jü~3\u0017\u0004±%Z¼¶Z³qR| G\u0003\u0018Íl~g.\u001að>Òtù¡·²Æ\u0005=g@zÏ[AïïÃ¹8­·ÁøÀ\u0006\u0019=KÞäwÈ?|ukéP\u0006µ<\u0012Y\"#À=í¹ôÀlñ\u0007õá¿kûÝH=L´\u001dèêì)J¡ÅËyËÑ@\u001fxW±VìûYUyY=Mq\u001cm\u001b9Ò¿½ØÙ0Øë\u0018^yòjÉK°**ÏØ/ü(WÂÀÂ=¦¬Ê¥zmè¿wð¤+ ýê¢øiÑJ°J\u0005ûæ\u001fÚ\u001f)5ÇxR}ìÜ,\u001c\u0014Âx¢àVYdGlÿ+H®Ù¹ß{¯U\u0011õÁw ø~Î7TÓïÆ,X4$ËJ^UîqWÙÿ*ÍË¹ÍÚÞÞ°Îf)¥¤r\u0015©õ%=J¥]É¢ÓV³¦#=M2\u0007VeÖÚ`ÖÕ\"ð;%ó,iO\"õ_\u0005YÅ\u0010¢9=JÑé\u000eÌWxÊñ¿Q\u0015½0\"·sEÛ\u0013kõrHA=}Ærã|äfC\u0004\u001ff\u0007á%Õlë·êÀóÀ\u0013\u0018Òë\u001eÐhr®\u0002x°*]õ¢êN¸sæÁüÅó}æ0Ö^î>üÔz\u0004(±oÐtZ]{f\u0012Ì²\"sP(qYCîÈ\u0010=J¼÷w\u001dÖûôd=Jîã6éPb!ÿ=Kç÷\u0010ètÒ=K5è#³Wæ\")\u0012^bc¹Õ\u0012°,=g\u0011vÄZ\u0018ÛèÛcv\u0015\u0005¡\u0017 =ghÿzIÔ>¦ë³d\u001f\u00152Ûú6Òë\u0019×/\u001a½JÓWTÇrN=Mã&tøe\u0007\u0006ïu¡Àù­BÅàvv4¦¡â\u0001çBºð\u0002N\u001e,YÃ¢îIfLG\u0013Ö.ÆÿÆ¨¥Ö¿éØ=@vîô÷\u0003=@&Úú7Cæîèvî\u001fCÖEa$î\u0006è\u0006*8Èú¥ÖÞð00d{¼\u0019¸[)Ú±ÌÞWTé+4_\u0016TÍ[ó\u001dCUù·,ø@ ô)¼|ª$=IèþõhVÒÈ«8=K(ô\u0016r)&ö0\u001c!k£GuT\u0017=@Ý§ûG¼¢esñ+´¦G]\u000e8Ø(S9×Y2\u0015Îaöè\u0014Þ=HLÀ^×UÍxx<c¹\u000e*nÙÇÄû-=K²;±:>\u0018\u0002×n\u0007Þ\u0001lÚÿ\u001c×g\u000f_9n´Â>CÔêO\u0018W=@=IqýBü¡4¥Ä¿±a=Ðò~ÜQt\u0017o`\u001dNRRªða°\u00144< 2Ü¨ÛZØÑ\"3ú­ãÛ\u0013þxÂ²?\u0004\"q6Hºow3Âl]#¿0r4Î=K\u001aAK¢Î+óÕbP®ùü<úiÚgBÃß?ÿ÷¸K\u001dÁ!ËSØ\u0010¯\u0004EÎÀyKq\u001c\u0006$l§¹x§=Mv\u00193Á[\u0005OW\u0007§\u0013NHº=Jg0Ü\"4¼Ô¹{.ÍùòÌÜÐ\u0019¥Ýo«xÇ¨0^]Y=Iõ¾2%\u000e\u001d&\u0014=K=I¡.\u001cÔ¯q¿ [bÒ©!§á1X¼nH=Îò1\u000eHÜ=M[ÛW_X\u0004[=K[¦=I±=MÈ\u001cÞ\u0017=JÜ©pï²å/K\u0011û]âmû?OsJ0þº\u001b\"\u0015\u0014q¦Î=H\u0004!S\u0014\u0014UÄ =LvñØü¨û-ïzÎ)ÊX`ÛAÓb\u001beîZ¢£:ÞO­OØ°or\u0003µ©c¸v@\u0001ÕÞ\u000e6úò\u0018DÌß%W¨øÔi\u0014Â¿m£ö!ÖHØËBºâ\u0002/\u000f2í\u001bÄó1\u000fts\u0011n>Â7ÂÍ°GQ\u0002°Ñi°0\u0006!ñ×(õw&B\u0014õ\u001f\u0005¥¢\u0005Ò\u001eõf3\u0004f=g\u001eÉ7Ôtå\u0019ÈÄ\u0002ù7Ä¹\u0013S·CÃÈ®Ë\u0005»¤¯$\u0006®¡\u0015¦hA\u0014BX¿Ü*¿=@\u0010\u001e`r3\u001e¸H`û°ñ\u0006\u0004²&\u0002½\u0015È\u001aêÞÛØLù*\u000fkù-*E­þ¢\u0018È=K I)\u001d²ÜP=KüZ¾Î\u0014äá¦lÌ~¥Ït0<9Ìn\u0005ìâÆ\u0018è\u0014ÈE$ê=M¿¹|)oJ÷ïÄå(=L°Ø]ý´Ö3Ù&§\u0004ÐÙ¸Ìbu÷\u0004ËYh+ÂTR\u0013U[¯[pñL\u0003ºå[6éþ¦ù\u0014YËöýÆvh\u0006®^£/$bÖaËL.QÎ¹L/Ôß\u0005$ã\u0014¬$@°Ö=}º&ê´UÖê)mO\u00185BÉmÌåG3¦³Ä4Aø§·_©s;ðRÆ¹Òë\u001a8k¡1C=K®*Mà\u001b\u000fÂ7hbdþ\u0004óæÂù\u0001^Ä\u0006=KßAÒæ:ó ¥o·S*f6ÒÉþoÀh¯ÊF\u0004\u00066í³RÒthp@\u0015RàHu\u0010íË¨\u0019,Ò¨ù±\u0001\u0011¼\"9¥\u0001.\u001ex­]©{,Ú\"£7î²»Øµj=L&ðÏþÿ¶=M>By\u0014f&U=H,ÝbÂ#åËqÜá\u0002T>øÝ &\u0001ÞÒ\u001byõ\u0019y$9U{rr ´-X½9î5Í£^8«\" ¶]±cMHþºqùÚÈM8Çnæ=@öè\u00057Øðÿ[âA,=J \u0013\u001fYîÁ{\u0011ñiS\u0002ÈæÎB½k^öÉûÔÜ~=@ofæéG\u001dæN@¥O\u0005¢l\u0001²ä¨\u001c«µb\u0004ãCõ.ÿ\u0015\u0010è.O=H&òdp\u0014\"u¸\u0012Jºið üùO¾<èm»\u0012Ø\u0015þ³ò:èe½.}Ñ>EÅZ)\u0015°Pæ}&$Öã[ÃPX\u001aº×Ä{&ÉTý\u0004HÃó.\u001c×ènS\u0004Ó`¬E¡7qõîpëÇ5Â5vêyOZd\u0005½=LG´>\u0001; Ã{)\u000fd=g\u0004e¹#r(qÁF+Òû#gÍu\u001a\u0015µcèì¨^¥NÌ\u000eÿÒ¢|à\u0016«¹¼©ô\u0012S~µ©{ f1Í|u\u0015^\u001d~à\u0013ðõùu7G\u000fÖ4µÙ®÷ä\"©|ü¼ µ>ÍþUå×oì\u001f\u0018[ËdnæÕm\u0001åHÞ¾Ü0\u001cloìÌ{eì|ò¼z1\u000f\u000fvú±êZs¶ó®»=&ª¨ÎËx´üÿ=\"t§\u0003xxY\u001d_vò¢9ÖIÒå-ìÓ\u0015A]TÊ¢ðV%¹i¹\u001b\u001e¬Àvë:üiu¦äQ¯\u0006À\"\u0012 T ota#1=IÎ!V*¼¤å«Æ¥á=L\u001aÕä¹·\u0017²1}ò÷ètº=@=K\u0014®¯)ÍußÚÞQ©@G\u0017\u001aêÕ»yB\u0005+i8\u0016S=H¬0-\u0001»6-¯ÓZ{ËÂÝ5ÿ=}ÖL\u001d×]ç=LàRm0qJ×#2\u000e\u0014=gü\u0019oÀöÙYF.ôøû\u0004089¥¬u<ú$\u0005xéw\u00037²òÍ0=J@*Eÿx=@§Ôê=M\u0011xa¹k^ú¯pvCo\u000f\u001aÀV¯¢7ßýõç=}õ´róîwl\u000fóæaÅ,g(õ<=@zg¬r=@ÓH\u0003Ó¢=@ÜÅóçHÃ=gV2:Î«ÖQ®NÜ$ÔÄ\u0007¯´Iwë\u0013é_qöäù²\u001eô8é¸=gXå5¿Ú÷°É\u0016\u0003©ÃÄ\u000fé\u0016\u0006úO>FØ\u0013ïéiñ6ö,ÿ?E=LÐCýÐõàx^èß±OÎ®ÍâÓ§nuwÈ5êøË8ZX-~¬uã=IÒ=K?Ô^Fd`ÄQþdÞÌÓØ1zÿ=}¾Ú9O{<:ÿµ¦Ý\u001a)7#¦\u0019§½=}ö¨ÊÄô=Jö;\u0013Ï(w\u001cF\u0010\u0015Î\u000fidÉ¶,J0`J\"\u00044§3)Mç$\u0017ï^\u0001Ðð Õ~×6c½¹¿.×\u0003)Ç\u0013=JÌÛEºTÉ]Ë¶Ë!c\u001f@Â´;\u000f¤i¥ùiQãÚ.BjÃçÖSLú=} \u001b:ÀDEîu±áb1¯ëpßÀ;W¶\u0017=g\u001eÛêvj=HWbQ\u0004aTí$d+ª£L\u001càÐ\u0014gk¾PÉ¯¿Á¨[lµ¥bé¯AXÌûGuç\u001aØåtºâ[wGà@ÌþéÄ/ÀÉ-{J>&aúp\u0017Â\u001d®õ\u0012¶\u001aö^Û¢d\u001bUûÌµì;¡n91=L·ik±y=J2=LÔF­Ü\u0002£H\" \u0016ÄÌï\u0010~hþOgÑ×vä^Áaïä=aZmY=Ll´\u001a\u0013V1Ì\u0010ºrE6=}ö;È5\u0001Ëc[\u001bÉ®ÏdòÜ\u0004=}I¢R÷Ã=M4­|v¬Î\u0013\u000e¬Äg8åw§\u0001\u0013`®­y.ÃM\u001e\u001eûF¨5Aïî!=Hàüû#ÍWùT.^\u0017\u001d¹r ËðRÄØ08ù#ð7,l8[Ð=}Xn`®ãyyó«%¿«&½­PX\u0016\u0001\u000eK$üì9Á­\u0002±+³Z %~øÐC\u001aa\u0012=HÒK=Lÿ8/\u001a=K4ËCjÁÓm6ãµ~Èºå{Ïy~×\u001aôXå°¡\u001as2¿¬=K=MXârG+xJüóa¾ìTý)a\u0016A3ö%¢Ö8¹wJ\u0015dl=Kp=I=M\u0001Ý×/§k´@ÒHÅºÕ\u0002G¡úèó\u0012=Iµ2«=g úHü+è\u0019\u000f±\u0011]WVL@=}\u000fyáýÍ3Ufn¨ë´ÅUÜ¢ÜÅ\u00068Ô$öiõm¶{A:Î\u0003wgì?¨@kp\u001bÙ=HXðà\u0010¤¡]Míb;ºoeþ2~¼íH\u001bz\u0015C\u0006g>\u001aõ5Ú\u0019u³=JË_¨Á=M\u0012l:\u0015\u0007²?æ®÷~=}^à¬_CbPÌ\"\u0011qßY~×´±1\u001dH#\u000fsÊ¯=}\u0011@è\u001cYÙVDsÝúµ¹ûFû\u0006Ý\u0016wZ\u0005\u0006ÙgÞ=HTt=H\u001fÇ6\u0014Ù\u0004ïØä=Mx\u0016SáõË\u0015·=LeO\u001fº=Hrä_JöØø3ó`Ö¨=gºð=Ml/¶ýø\u0004þB\u0004ö~Å:\u0006,:K \u00065&d=K:Y½®c\u0002~*8£ñMv\u0005ø¹¹é03½,õzàé1y&J-ìuvñ<Îtß8±rÌæ·Û%ýuVÿT\u00062õú©¾­Þ^\u0006u\u000eáÚá\u0014rhÆ=gAüØ¿\u0003w_Ó×&eþª*çSfÙ\u001f8ÅuA3Z(xVfwQ,µ;oñÂ\u0018ú=L7ZÐ8=}nQÄ\u0005Ï­1Ü\u0004qy·Þ\u0014ã\u0013Ð&a \u001egE=K\u00010<ÉS(âÊæº\u001dC5;{ÿÚ\u0005t&g 9´Åºuj\"CØ\u0015¾\u0011\"ò±a\u0004ËYêààî-ÄÝ.2&\u0016ÔÒyÌý[\u0019XiB»F3x.&?Í_ÍÉ=M¸FgåE=H¥èGÕîK\u001cÖv\u000e×d\u0004Ò&«È*\u001cÔÔ5Æ\u0014\u0012C/:8ü«\u0007m!?ÎJ%\u0018¦ÖÇuKuøÞ<¼\"÷¬\u000f¹=}ù¹`ÇZ_éJ-oUb=gNù¯M±påÀ\u001dßÔïÀPr\u001b5¹­Â\u0006ÕØ>lq»ÒþÛbÕ7Æ$þxØ=H7Ö££Ò¤õ0 4\u0001w{àÊ¯Ð÷CniÆû\u0003Ñ·«Fü\u001f\u0005õÇ¡\u001c7ªK\u0016B­\u0011ãÝrv©±\u0005=g°¬\u0017E\u0019Kº\u0005%:ó8C¬&v@Ã-î=}3y(~KJ3\u0002\u0012mñÀ´&4m^Ê\u0019z©ã­¸l¡#í¢h¦®m+ïÛi\u000eÞ0ááu\u0012Ò»²Öç\u0001=IF_ñH­ý\u0018ã¢4pz_¸Ñ?=}8¥Ü¥D?\u0018Õ\u0013)Î6\u0001 öVkVð¥T·_¤C\u0006=}uè_ëULR\u0002à5CÐñ½\u001e>\u001eå y]çÑ\u0003\u0004±Þ¦ßÊÖ.î$¯e;¸ÔèÒ×u« \u0018eäéµ¨^®÷Rfy92Ø\u001a%£kK_\u0017$\u0011j¶¸^TÞÌÇHH;kÙî40g-dw®ÌÐ)_Ù£Ýä\u0001Î1_÷4%ëáÁB3]¬1ñ\u000e\u0004ÉPÁ;hp\u0005= \u000f\u001dñÆR\u000ft&ÈÑkðÈ½bú²ç[B1¹$\u0006n2coGr\u000eÕ{Z¶^vOlªÞ^\u001d_Ç9tÙ?Neuô\u0014ú¼¯¶ëöð®=@·K¡\u0005®Í\u001aÐJÐ=K¦KßÇe0ÔÓA¨·=g)\u0014\u0003±Åzø=}ÓÎ`Ù±âª-÷\u0016ÊÓJ}®·°~\u001cí23ºÌE\u0001\u0016he:r{ñ?ô1M\"\"AEå»\u0014\u001d±Z5Rj·¾MÉaKe­ð@Í\u0011 ÙüàÁ¡\"h>\"©yïHt`+c¯Ky{^\u00039\u0018m±ßfm=\u0006¸\u000f5[¨ÊÞå>\u0002/¬A[?êöë°ÂgxB5ç´Ñ·÷vÝtÏfÒvÇ!=}\u0001Y¢\u0004\u0012ÞÈä[º¥úñ2£kJòú:=Iþ\u0003TÓï»\u001c\u001d\u0012\u001a\u0014\"\u001cÚ-f\u0016~Ë¿ÇVÿkQª`og/CVc\u0011æûÜn+ó®Lî4U{\u0011¥\u0012:¦À¯¨þÁN¬Êæ<¯ÒÜÎÒÙ½ÈPtc¼÷Ï¨úNgÐnýÚì\"áRgR:©Bv²~ãZk\u000er¹\u0005J®EÈ\u0003Â³øë ]y_×Ï°\u0016ÃiÄ^ÆPèS@>Âkè\u0007Vn_ïLV°Â&=I:®_®ï,ø¢âÀ¦X p=H\u0010·ç=H\"{jöà¦ 7.nÞ·UÑÙ#ÍRu²w\u0006ñÙê·=}<¼Ä\u0006<\u0011ÒËãÕët¥ÅW_÷Õ=}A33¶Èk*â\u0002ÜÎ=g>¿ÐyRtZ\u0010óEPÓgz*ÁM@Ûk¥DÓÆÍ5\u00193\u0012Òþz¢ß\u000eÞ\u0014e\u0015=@þ¿³=R±T*hF0¢?½:l\u0001w?ãUev\u0001©o\u0019ÃU õ¹jü\u0001Ón»·æ1ä\u001e-ÈU­Ë\u0002KîÒ\u0013¿·\u001b\u0003\u0005RûM\u00064ÚOï«âè[µtÂ\u0002=gsFÓëyÈ}=LþUÉºF9Â\u001dTÃ\u0013ÐÀóL¦©bË·¿£<Røã\u0005\u000fí°\u0018ðÛgÎW03ztÖe=KÛÖ_j.²­&t²=púú¥ú\u0010ä·¦5$éÿáÔVªLè4sÃKÐ\u001fmñà5p®æáÉ£ ìÆOSDg<ÂI¼ÜëK_©NrÃV¥ÒlÜs\u0006$ÂÊ\u0003A=}òØ¹ãÐ·¦!°ÁCýO=I#«I\u0013N¶gL0÷R>yç\u0001µ\u00146^É\u0019<ÁjÒí§µs?Ú¡-S$7Øl\u0016ãsOFca\u001e\u001f:=g&>!ÖB\u0016\u000eÎÙ¸Z=ÞÐµÊ¦£O«¼â5æ9Þ\u001dÓúæÿ\u0019\u001dk\u0004=@­Èéa=}¯\u0003ÊÏ=M_¯KÅD\u0015a^á=L®aØtbml±¾1ÃÚ¢ß¥Oô~Ê\u000fm«óÇÑ\u001c@óçÅ¥ËØ?ôW¬.\u0003ä¤=@\u0002û=g¿ÓÁ¡³ð½\u0004ù¸é\u0018VMÈxÍ»ïtù\u0001pw\u00188bøhuûI_iOûl=}üYèM\u0019=}ÂêÜA_sI\u0004µî\u00034\u000e!Z´1Â\u0002è)TY§þ3(\u0002;ÃãÃ*`,\u00025ÒlÈ2öÇ=I=Jaµ\u0003ðß\u0001î·K­ Õ¸âd=LúáÀ®Eh.ÖÞÊÀUÛ(\u0015å=L\u0002 Xî2\u0005Ûâ\u001bõ&G¼=}=}=K/3¯Q©©ÞJ+àjEÕ%±@\u00181ùz¤p=@£iT\u001dß\u0019^=@Î`g­ÚF·\u0001¤ø·ÛkÅBëF\u000e5z=gÈ®I=M#Vn÷OÖv½5²tM«qÖtlï´·k2E£\u0019L¦\u0002ÅD\u0015ú;Ðµ,ü>^d=Lh«üø4öbÄui$å>KÇíûfª¨ÎåÈ5ëØwò±«ÿ_#äÃùq»#µgðüÉËb\u0015¡ô\u0011£Ð5¦výÓg¸4Øyô}n\u001fZåÐì$\u0005wµ*°2`\u001e5\u0016 @r<zíw_ãÐ0DF%È¢ÙrtqÍß;\u0013c\u0007\u0012¯Rç­Ì°·Ó7sðìJ\"gÅ>=DÆ\u0004\u0004\u0002¤7V«Ãäóx\u001f%pRKr^c=L!ëÄ\u0006^vuýá=M¡=MEð<Jå]\u0005Ó2µÃÏõÚÙÜå|·Ó¡1ö\u0002ª¿\u0012í`Y\u0006ï==J<B÷Tñ÷û×\":z¼ªÉ²^?Ê¡Ð¢è\u0002Íý¬5ÛùSn\u0002\u000f?1Åä@üÈX7\"N\u001d!Ý[-Ô£ÏBþÒ\u0004jÉ\u000e\u0019Äâ&åÁµlõ{ðÄD6½Ç¡{¯ýæµ¡è\u0001hË|sc¬ÍpÀÔ¼®¦ï=}Ã=Mr\u0001\u0018ôPà5þè9\u001e!Å<V\u001f4újÏå`Ú¬fhÅ\u001cW^ÈBã\u0010. \u001aXÌ&,öÜA\u001c\u0005õISÆD\u0005éh\u0011:QËcOØQ._iQ6Âbß[=Mýá!æÛ>-\u0019\u001dÛyù´cVÐo\"ä\u001a?uT×3¿. s\u0014×Ã^¡\u0013ú=M×.Å#¾!\u001dh~õÆ×5ZäðêWL\u0006æ%\u0003½WØ\u000eÔe{ý©&\u0003Ê DGPLh#Ætô Stâ½D{v!P*¼½tâíÈá½@½Ôýâ=}6rî£f0öå+f=@}\u0004@=@)\u0004x=÷ÀP¯|\u0006Eá3\u0006\u0004kgËdt÷£\u0006\u0001\u0019ÙÖº\u0015¤\u0004Ã|\u0001Üx>7\u00192x=}õÍòß\u0007PgDMi,ÕÍäDHMÄä°avsV\u0013ÛzÓÛú\u001b\u0003Ìc*È#ªÕöóôÿ¦ÎZ¾úFÞÄa\u0001>ê°â¬aÆ{uÝMjï%\u00055Ñ}°ýké\u0006\"ò6j&î¸¿xOoE4úe)Lñ{¨Æõv,ià`tÀ®OÂþ}ø}Ìit BqS$<t£Ó4âØ·rààM¸r\u001d \u0018xé}3c{èAM¸\u001c:*hBmë`=@âDZ­Bµ@ß\u001fn*åwe¥ì\u001bìäi]\u0001R)\u0019\u0005K·µ]¤F¨\u0006§­fäÂÆ&ÈE¸ÈÅù¾o¼\u0010¦\u000eài³»íA?OO\u001d@^ÞSMAÙW=J<X\u0012à­t\u001d`X üþq\u0019õvKlCîø\u0011åËÿ\u0011æh4½h&\u0015¨\u001bOë»l§=M\u0013ûÉ7êµ\u001a`\u0018ºã\u001aÓ)¸\u0001\u0013ó6]fö©¦Å\u000f]T¢½W\u0001¤õ£ëfBàXµ<æÑ£@êëë\u0004Âüö2ªmVðêmS\u0006ðÉÂFfax©lÂèsZÃìî0NÄ0ÅtB8Úâø¥ÜñÅë4-t\u001flÛ¥Ü[¡\u0001¬ñ~1¼\u0011´c2J°]ê?ª?J?\u0004ßäßtß_=ÿ\u0015fè:~ø=MeÍz=Mè=Hã¢x\u00145Ê?$xë*\u00122·\u0007:8\u0010ª8\u001b\u0004Ø\u001ad×%(»I\u0012;ÞaÇG\"{Ùâ\u0016Ë\u001fÓÇ9ß?\u000e>é\u0010Ã®þÐRmbSb÷\u0015§D`dr÷\u0018Ùß#5Ç¯+9\u001a>hDAòIÃ«\u001b°¿%²×1=+¸%TÏ\u0005{£Nø=L\u0015=g*d« á¨=J\u0013ÛÉXÝÂh©,Ei¥C/íÆ\u0017cqO6T¸%¶¬ö\u001e_ì¤²\u0014jDÈÿWÃG=gµ.\u00178É× 7s*\u000f¾\u0017¸NáP\u00175A¯[ò=J£ÒQTäÒ?ÉWÃR°¤Qä¾¤jÂô½7?nYT\u0010Î\u0005üQºU°V\u000fÐ±<kw<î=H^\u0018=Kc\u0002=Júª\u0010ñ©\u001eUÈ5cÃß}!êUm\u0003ÞÓ\u001aâ§[Ní\u0015Xný=}-\u0012ðª\u000eD«ÆRïüNýÕ=HÁ¼,\u0011ÊæE.@DÐ°´=¾ÞÕrêcêà½t*½tâmánâ½tÆÃp9Þ½9²nmÖF\u0006óÍ}Ûå&Z¼ãâzE=<^\u0006²Vyè)|AÊV<·hD\u0003å=IdèýÈ÷QBÛKè¯XWÅ)CÁA£¹%óÄ0óÅ\u0014{õ\u0013\u001eö=LV&\u000f°Ê§\u0004?ßô[¿\u0001#êiÿö1/Â\u0010±õ=Kò=Húh?è0÷Ä\u000fÎÅ\u0015VÄ\u0012ö\u0013Ð6hÂöè¤f§ë6÷­=gp\u0011\u0004shÔchG¨3\u0018\u00050\u001eÅ³\u0019\u0015²\u001c%þ\u0010¾Þ\u0010ê!*\"t¢&[ÿ¡ÿè$Õyä¼ÄÂ[K¢Î¤!@íoBiÞ&%µ¾·Òï\u0013|-\u000fÜÌ\u0019HÂ§X\u000fT\u0007^©=J\u0015+Ø¥ýn¦`¸òàn¥P±¯êoÎb{|£ÿxY¸.)ñ?©\u001f=L\u0017\u0013\u0007/1­«\u001b§SÑ2¯³9±8=H>ç=H]ä\u0012u]8w&é¾\u000e£9=JEév=K£)=H­ÿ6=HÎ´n#${ñ=Ll/çSD\u0010ñÌÛ³Zm=IÚN\u0003×~\u0019yãÍØhî6¦UÔ9\u0007c\"\u001aZ5\u0005SÀ=@8løh1\u000eZ=}¤0\u0016ù)\u0006@ÏFÀÏ&Ï\u0016=@Ï\u000e=LO~(_Yû@¿Úrø7®òküRÆå£èîºj\u0003ÃûºÞFH¦Ün¶¹ÞFú¬\u00026z|¤8Æ`òûý\u0006¾{îî=@\u0001Y¦=MRÂ`F\u0014­Õn\u0002ºõæó÷H2ÛüYó¤\u0005ð=®¯=M÷=H=}\u0012ÿæ³Í&¼ü¬õ@=d\u0016\u0006q²¿A=@µèë.DûÇæ¾EçÂqâ\u0002vBgþ\u0002¡\u0007\u001cëq\u0012¢c\u00110¬\u0019&Tûl/\u0018ÍºEBz+ù\u000fæX.rÒ¬\u0019:cðm`½ôÔ43´³tïDßÆéR¬Y\u0015k¿YôÒ=@CÍFKës´·Ûó\u0003éyf\u0002\u0013ã:\u0017j`ôP/lÖ/øÉÔñx25¶toòöþ~Vð½-Âz-ä\u0003Gfàf»¢¬ã\u0011R²Ö·=}ÆY´ÕÝ#³Ã%é\u000eákNð\u001dj¹b­;fR\u0006ýrudD|t\u000ez*fØ5\u001eQ´]_}µùqï¤@\u0014y0¥Ñp==}lVîq¥çBql=@ee\u0017¶Ùaðm®¾a`bÞÙookÇ}ú:]0\u0016]Áþï²;D\u0011ÄÀ\u0003éñÁåÌ:|â¤ªÀÿy`X=u¼ZÂ\u001c^2>kûTä]mNUíe§dÕÝ¼ð´¹µö´tq¾ZÌB¢¶´ ~Úî.µæÊÀuÅ§YÀ£3öæo>=IMÏ/tuÁ¬¤á=M½Î]cæïpWÐG¬åúAàZEÖë\"=@Pitâð=@Tqe<g\u0007%Ç\u0014\u0012\u0017ÇÕWîêVxÍ_u¾âyî\u001eyyyW¡½ôÍuÀ]x8¯ôòø_=LÀ%3<q°øiW=J_À%Ò1]²Ä©]ÂÝ7LKôÉ;T\u00128S[k\u0005Û8×~/\u0007ûÞpõ±°úc³=@mä·\u0013vÝ=@:h)^×sÞóÄ\u001eÉ=g/ÍÈ×;<d¡­´ðÜÓ¢yå/wra¡@¡½­NÚØÓÚ=KÌx \u001d.Ð\u001e?\u0018X4\u0004\u00069ÆÚ6d\u001c(\u0006:i\u0015W3T\u001b\u0005Ý½\u0004s¶¦tâ½tâ½ô¼tnôäøÓaÄ¡Å\u0004\u0018ù{F&{^=kkLKíº¯\u0012\u0007³Ú-¬ëÖ~¨Cü}m.ñ,\u0006Ð/`¢SÙmÊæ±\"Í$ú|8<\u0001$²I\u001cr¤½¨tàJ?\u0006f>§I9û=g}¸Â\u0001ó[EêL\u0007a¬\u0014QLö\u0011Æ{\u000f\u000eÿ\u0003ülù\u0007Ñ«ë\u0005;Sê;fÀaªTáqºcÇ\u0010Oîz%Y>Öä@Ms{\u0015Y,á(¤{#tJ}R÷á\u0017ð\u001f-Ó«(¡\u00118!Ö®ÅÔû^=@\u0013Ú\u000fXbe]\u001cïUçÃËæ*áäµÕ¬YMSô?Õ¥¥Tb}Ê\u0004?=Mëo««½«C=}N±G\u0019VÊrcË!ê ¨P¡²c´Ù­\u001fÒ\u0010»NAÖq[ÐM.\u0018(,\u001c¹Âz³AÎ`\u0019,\u001d²*¼¼/CE®=HYFv·=@éD®ûÁo\u001d²[\"I5\u0016x\u001aÙckê&çMU¹²\u0002À\u0017ð=MA¹xþx)¨¥c».þ\u0019ùÙü[èu«r\u0013´µ4ÖêpÉ!,þÁ\u000e°=Jç%Å.¹²ærµ½Dy=}PÜ¤L«·-AAõ¿%½Bãê¶þ\u0002RRFpm2fr¹ºî=H¢.Ð¤+z«¿=gK(P\u0014·\u0003ê\u0001¦Ç=@½ÆÖjV«ø\u00113ÜÂt½\u0015cî=@ß!Î$ ýå¼=}m\u00161ÚßC¶È^Â)A÷ãÞQý \u0002Ø:þ`>õs\u0005üJýà\u0002ø\u0014¨Ñ¸ó$ü¥\u0006v}=LuÇzö¶\u0004=Ló q6.aÅTiÅ½ýtÙT9ñzCYl1kÐ¼8ÎÍc$·%Å\u0016Éa¯\u0018h>_Mäw+A-ëÄ0ÝùoÃ=J\u0015}\u0010/{¢^$W(d4Ä\u0001½{¶{1ä]>ð\u0014|Ø«[£8Ô\u0015Ñ_Ý·ÛåÃ¡pOR\u001f\u001d··¤°OÁX»Ìq\"Z\u001f[Ñ^íÂ\u0019«(3kã\u00024½=gTMñÑ]>¥éPY}¾\u0007°\u0012Ô\u0019¢À|¨ILcû=LúÔ½I«æ \u001b©Aý)=LsGA\u0011ð\u0014íX1¾&ÏºæÐîÛ\u0010<¥Ç\u0003mV¦g5nMKn\u0015N)\u0014G\u0001fá·it73¶L!OÅ=@ìøAÙ$ëaó2\u0015§=}YrÎ¿x=LÙs%>x£û!\u0004xò3EL\u0001âÍy=K\u0012=!þn\u0015¸FÙSaà\u0003\u00045nÔú\u001091µýVËpÓ7R4­*ÄÑÖTUn;ÙtûLA£\u0004sÛO5º\u0006EÃIRm²ß\u0001»;=Iðjq)\u0014NñÔ´¨]Fù\u000f(üI RøØ\u0002)\u0004Ç4Oæ*DÓR\u001dî\u0002O\u0016ø=gDàkÅ4ïhö±H~«\u0016@<ë/æ(dÉ\u000eO\u0002÷4:[#]²@æN|uíò\u0017È£Éý»:\u001e*ÄÇTÿïÄ9@B`=KÖ(\u0004¸æ\u001e©pÍBýÃ!v*¤Óú]Lök.yD(DRZí1Fy^Ný«\u0010ÿ\u0012¯\u0019éÆ¢\u0015OÞxÔ~E\u001f\u0012?=JC[®:lµ-1\u0015¤NçE1èïþ@âè\u0003¾\"ÕÊtpz¯\u001b\u0001&=HôñçÆXBàù²e\u0001¿û\u001eð´ðZû \u0012=K\u0015_m0\u0010ÝÑb}·=Kp\u001cÊ½*Tll·3­\"Ù=}ábQ i$è²¿î*õÐË\u0003ÈÂ®Y{8ò=I=M*äl$¨ì!·vÝ>0IÁ6=Iñ¦K1ë~Yy»\u0016¹îúºóq*N(tg%R\u001c\u0011?\u0017pDÙ¤³¬Snðz-E\u0017XôäGAÃÖòNABÓEcò\u0013=Jþ=HÝ*]×á]@Yt(dÈsy[\u001f2\u0004?êÕç<\u0019ã*üîZã\u0019øÊÓßVþ®\u001d´%ª¦ÔD=JðyÊþ\u001feãø:®*í=}\"Ú\u001eð\u001aJ÷è\u0011|¦;[Þ=gHFÙcÍ=Kì1ë¯E»K4Î\u0018£\u0006Êem=@ýD§®ü\u001dODÁzîk?Åîhú=Kô8é¹Ø\u0005<>º<©d¦ÕÚÝX±(dÓ\u0012SYu³ðåHÊÃû\u0015Y:åÍ3sLuöKï\u0010ÈÁ\u001eÖ)<ì wF=¥íI\"$=Vß\u001c¦:ÆòÇn\u0006\u0015Eü=Hò=ImÀÍÐÆªÅDR¼Q0À\u0011wóB\u0002\u000eíV\u0005dþ¼\u0012z$\u001e¿Æ4\u0001[+\u001cvç\u0005\u0006=K\u0002«\u001bÜæfð&ê\u0006½ð(ðV»W=@xÔÞMQåÍUj\u000eÙ7½bÔ\u0014èÎ¾÷\u001dõú\u001b0Êòm\u001bþð=sé3«sgYçÏªÏn\u0018p±2=Lò/ÌO,Ó\u0016\u0004m\u001c¬ý¨S¸\u0006L3«²ô4Þ\u0010d_gÖ¦ë~-Mí2 ÉÅ\u0012\u0018#O$á=g´j¡\u0011=JZ;P ë\u0012\u0011J\u001d=Jp%~)\u001c÷@hFð>=M)ì\u0015ç\u0013ö¡çOjp\u0015¦\u0018V<!Ç¶3\u0005Ì1þ\u001fYF­Ö Â=Hàd§y9\u0001÷®¸\u000eÐÅ=@\"\"­V>Rf%ì÷¯=5:\u0005}½\u0005N\u000f1Ý¸~ì=K\u00148ÊiB\u0013Nw2ÓqdJ!l\u0004hFò\u0013/8·Ey!ÄôÔ¾ù*ÄÉ\u0011cÑ\u0016óÛ\u001d¼g\u0013v*vèJ«Z=@åMÂ9ÿ\u0015î\u0003Rß¶;UR\u001c²¯\u0016¿ vwãFË\u0002Èò\u001b5é-Å¼¿¢ê\u0004È=@\u0006Ä×\u0010¹=@\u0006H±ØôùU÷=}.âÚî\u0007Îpæ+ÿ>òPãVZÂ-·|=\u0019ìªüEZ\u0015.éÿ\u0016îD\u0019=LG¯\u000eöÈÇfþ\u00070wØÅ\u0014K\u0003\u0002 ·\u0018_1²\u0001æqS\u0005d=g\"¯ÇÆø\u0006\u0018ðÞ;b\u0006\u0010=@âSâèEi\u00034)ù\u0010Î|þ7îXsÇ½Ô¹Õ{úa\u0011[.£,cXSÌC³*OJJ\u000eÉ)Z=H,µ=gc@¿uïò=L¾UéT«©§\u0014íNt=g!ð%üYî\"¦\u000f½NSÝ©Çöó[7=HðQ=M|ÑN\u0001.íN×\u0007ý-\u000ewk÷\u0015í=gìù Ý\u0014©\u0019wòùÆØ\u0005ÒjcX\u0006Z-NÆ*Ý´:\u0010óvÝ c\u0005.í\u0006=KÞþl9v\u0006Ú°ÐèhXCûZñ~­&®Ìalº?îBêb<S*#mêÂZ¤í½¡Ä8\u0003âÚNÿÏ\u0005Æ-Ø×=HÄ 9À5ïðö±ç\u001dZ\u0004æ\u001aVåA«*ç.sDç¥æw:å\u0012Ã\u0016Ãªiì\u0013\u0006Õ\u0006\u0004~8t\u0006óÆ^¯£2Jaþ6%Õ_TwÆw=Içå·ñU1ÇU\u0006õ>²¤ÿdüv^Û\u0007þ®o¨¾û±\u0016o¸ý\u001e¨ÿì®hßøüÊ)ÿ\u0016æÅ¹Ø6@\u0005z:ÅÜ§\u0015Y4q\u000e\u0014Zq£\u001c³ÒÝ»Âùíd±\u00078úAÛ=}f&ZñOÜ¯b²Wày°N=%°ã\u0006_·ª5\u0013=}êFb§±QWbq=g=K¬·\u000f=L<<\u001c©+,\u000f2½\u000fKØ+,°°Y=g=L©\u0007o¨3\u0010éO2QÞÌø\u0004¥îã£\u0002=J\u0017ejuð$ª(AMsÿøjÀï\u001f¸8éjÍ\u0005\u0006v\u0004H=K\u000f ÁÏ<¥\u00132RøË]\u0018È©H½<\u001cùz\u0003P©Tßuü4ðkB¨î@¦!Rj3Ká\u0017ö]n]Ó\u001aåÑJ=@í3Á\u0013 c\u001cþÛ@\u0002-S=L6=I$°BµÒ\u0001\u0017dÕ\u0015ïyÛ8\u001b¬¨CEÖØ®l;0® ½·øýNøêH|§\u0015éµÔív\u001eJÛÁ$Ð=ãNÎâ\u000e3úöêµ/8ò÷ÜÄ¢@>$\u0018zIê\"\u0003TðT~Nõ<A=Jn 1Ò\u001d®ê\u0004ÿ¡JøB?6ðOÛù¤=K>©ÿ¢,))¡[ßOø7ì>\u0003â¾é%`ÏÓY:%À=gåÜd\u0011NRÀ9ò\u001b2µ\u0012p\u0002Ò=MÉ\u000f©$oO¸]\u001e®Þ½wö\u001d\u0011ÒQôåJéî43¥ªN×\u0011\u0001\u0015Ò\u0019\u00174â\u0003\u0007¥HJÔ\u00160\u001a¹+Ò0 Ùi[4=Jh\u000eSð´MI=@ »¾HmT\u0007 Ðx3¸MÄÈN5T¤¬ö7Õî[÷±VnÇnýæ·LM±I\u0012\"ûò!P\u0015dÑ\u0003Û$øÊÊCJæÿ& =@¿KÔXcmÂ\u0018vòËÜ¶m=K=M<7~N=}ad\u0018Ã5ßQVð*}òêg_{RD\"üboP¨mµ\u0019Qhd»v»«ÃI\u0012¸Ù»$¯K­÷^\u0001l Ø½\u0010üð\u000fßMÀ\u0017Î=}x*àvEgÅÑ°µVP\u001a;wÔØ\u001f>®Î^Qép-)^E·à6RÌ(?\u0004#Õæî«DñúWÂ¹¤Q©\u0005óH¨Ï\u001cò[;ñ§YJ¸Z\u001b\u0019\u0016\u0004\u001f®=gp=I¬}¬\u0003Z½=IÒbÎH­¦a\u00134A\u001f=}\u001cù $bÞêþS>\u001fëÆÅgu~÷çº\u0019.j0ù=}Gd\u0003=}\u001a]ý\u001a5x{@Ûº\u001980Ífr(\u001a´D÷PÍÄz\u0015¡®ÿJ\u001cM»:×!H^s#ô¶JÞ*\u0003¤BAã\" =@ Sc}êôjS\u001dY~Àæ(UíVá²÷3-T\u001bi¼ßU[ævË34¡Ä¤æ^>¦V\u000eµçpõJ©{\u0016Îi¶\u0003*VÝbXD\u0005=Jy®¼ c$Ï´ôB\u0018\u001f?¹ãè\u0015L=KhÄU ,Õ;SLÒcTÆój~42>9HÃ\u000fÈdOÁCJXû#\u0015ê,ZÆuæ9\u0015\u0016Ðgè\u0007`ÌcUôY­Ãñ1 \"u~*Ã8=I=¦f ¦o3\u0004!e7³O¾~\u00115Ì\u001d?¾4*U\u0017É,Ê?SiN\u001b\u001d­X\u00128Áî\u0017L)ä_²EYR\u001d·@ÿCýÈ.A40d\u0014ó\u0015ÅUÚïqMVÈu6â5Rè[\u000e\u0018@Sd¥NÔx_óZëô¤;ÔÄÎÐ;)\u001b\u001dé#é¿Å=}jÇQ6\u0014àRÌc~Ô\u0011\u0019\u001bb©½\u00063=}xv\u001föN\u001d3ËJ:%äSX-ÑPØW¹ÈYÑ:]º­é9ÐR%øA=û_=KÍB ÀÄ=LæÏ%}%dÎwÚ\u0019µdO®=Q¸f¦êsðÉBès~ogrZà¯%uJ@óÒöNðK2ðÈ!¿Kkc¬\u001bfí×ÿQl¾·\u0004ø6{%ºÍÿ\u0014Úú×¥Lvá\u0016³äITØl-\u001fUhÚö>ë\u0006ØxKÏÿWlDCâð\u0012\u0010²=}Y\u0001C¢;c²²ù¤3>\u0002Û6©+Ê7úîy?V÷\u0007^\u001e)ÿö\u0013¢öúv\u000eØ\u0016í§Ù{RFðÈü:k³FÈ$âx/²l¹A?î©Ðÿ­TÍæõ=IÙ\u00191;n²ø¬j­vKë÷Ñ~>)°Ê\u001f=KxÏZÊª/ éë±Ñ73úÁÀä¤ÆCC@ð±mÈ-IòÔØoí¡\u0010F@4í¨Þj;1öY·+5)Ã\u0002\u001cýúÏö8j¢K\u0014@¢Jøy¹Çä­ÿ|I\u0003qÄàÖ¹Øõ2lÁ®*\u0015!¶?«¥ó´\u00195oð=g¤KþÔa«FÐúÞµ^/\u00018ø\u0002g©²¸ýØë5Îz\u0002éZ\u001dA.zÏpÖ2@\u00066\u0010TL«ÒëXxøVËã=}ªu4)Ý=KPýùI;\u0013Ð\u0010Õ£9éw\u0012ÖN[w\u0006ð\u0015\u0005\u0018\u0017õ\u0006MUÈæó{bÒ1\u001bÝáªý=@Eüý® wPXÏðd(ÐÝ\u0018PÊ¢=K6DP£\u0017å7%½ã¨gò=gB­(+ñUë²ã1\u0003\u001e2rzm¤ÓP¦\u00195ïZ¿8)Ô\u0005»´³iù\u001eñ1\u0005¨²æ\u0007î\u001d\u0019£\"oÓÞ+0µ=KÆ¼ó`Möúðëñ\u0004ð\u0013Z³þ@Y>nS@^Ü$Ãé$º\u0013x1DùÏ\"Aò\u0001 \"WÈ¥ê\u0018r2j»E\u0011V¾}uzI³\u0007Ä¿nãéî@\u0013\u00030¦íÍ®ñ[r,òh5à_Ør\u0019zîÚxg2\"7PQFnS+×,\u001d(lp\u0019þ\u000299ÔÑ%!=J|ÿ¶xANzz/\"M:LEÖ\u0019iÒ{oO¸(:,ñ±ÐOK¯¸Î}\u0018±=}\u0018ËFP¤c\u0015õbÙ7W@Ò;Î1M-³éÌÇ^ð×%­Ñ¢áW:Zð\u0006=KüÌ\u0016`¯òËY=@\u001c\u0003ßÿ\u0016\u0015îò1>\u001dÕqgm/ré*à7¾\u0011\u001còm\u0011Òò7ú\u001bFälÞPn\u001bó¾i¿õDHÚ­7<èÑH\u001dä^\"ú¥51=Kb½é3\u001fô%%ÑãÌpj=I6söj\u001cYUÈ[=Kåí¯Ô\u0019wÍ=Lë=T¸ò¶®x\u0006p\u0005åWÏá·6ß\u0013ÚøÎ<)íñ·;j5µ.¡¸õQê§ÉY1A\u001a·¡KÃýTYò.ºRß£$¾\u0010\u0011V-\u0003?¥ï=g&z\"\u0006²?d4ÖùËm¡Ô³¸^\u0016Þ¾ÍBÞÑaN\u0003dÏÄÁ&ò\u001e`\u0017E\u0016ªcróCÌ^\u0010JÞ3¶ðÿÂ\u001d¶Ò ¼Ê³0\u001cà$(ýÒ=I¥\u001d8¬³¡-\u0002rxÏk\"ùh\u0001¯\u0005\u0018Ò[®Ê¯\u0003éV·ñ\u0016\u001bO\u0017µ\u0017ÔöFNY\u0001-QüX\u001fïíò\u0018-Ì\u001b·êÙ=I¤¿PeÇ=K³¡X\u001bsnÞ\u0012=Hnin©¤\u0017ÐK@Ý£µÇòç}=I=Jí8,NëÈjOá{)æ.MÝ@\u001cý=Kay­\u001c`Jð#s´êÇ\u0010p¤öÍA\u001a\u0010À=H¦~%ïMôîçä[ã¼=}j±¿\u0010\u001dÄª=MF\u000e³\u0018¹º«ÔB\u001fªpI\u00062õ%gµª?¦Þ½tbJý£tjÏ¥¾óààµ@Þ£tâzjõ\u0004t¦\u0004xÕüw\u0004?\"E#=HHO=@mª\"7SeÛéDÍõô\u0016¶2³®,õÞms4E¸·ÕVÄ[JOñØñ±Ïe\u0014A\u0013·Ç\u0011\"ówÇ\u0010\u001eã÷Ç\u0012&\u0003\u000f=g\u0017É=g\u001féO=g\u001bÙÏGK=}/)\u000e[o×hÇ=L]ßg=JUw=@.ä%?~/éC§I5ÕIå\u0004qKX<ä74]âî\u0014ÂÊðyÃE=g\u001f\u0011N©¸) Qn¹ÀèîñL#X[ä© ÑøØ2«òùdl-\u0016öçèZ}ýêÁ-é40¹q­)¡kùL)\u001e¥\u001fXqÜ8=I?Â*¶ÿõ%Õ]->ëhÏðªÎp\u0018(Ýæ\u0006ÜúV*8$tòT²=MÙåaÌh;Ù½esÏ2í²=6|&\u0003\u000f=g\u0017É=g\u001fé\u0017G\u0019\u0015«M=M`ëN=HÌ÷Æ\u0003kx+XéÂ\u0005Ï©\u001bQÞfíÂú6\u0002\u001aî\u0006B\u0004;åÀex/ìÿý\u001fªªC\u001c7ÀÃ)v¯¯Ùÿ\u001cªøð\u0018vÃ~é×]=u\u0006%', new Uint8Array(96365)))});\n\nvar UTF8Decoder = new TextDecoder(\"utf8\");\n\nfunction UTF8ArrayToString(heap, idx, maxBytesToRead) {\n var endIdx = idx + maxBytesToRead;\n var endPtr = idx;\n while (heap[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n return UTF8Decoder.decode(heap.subarray ? heap.subarray(idx, endPtr) : new Uint8Array(heap.slice(idx, endPtr)));\n}\n\nfunction UTF8ToString(ptr, maxBytesToRead) {\n if (!ptr) return \"\";\n var maxPtr = ptr + maxBytesToRead;\n for (var end = ptr; !(end >= maxPtr) && HEAPU8[end]; ) ++end;\n return UTF8Decoder.decode(HEAPU8.subarray(ptr, end));\n}\n\nvar HEAP8, HEAP16, HEAP32, HEAPU8, HEAPU16, HEAPU32, HEAPF32, HEAPF64;\n\nvar wasmMemory, buffer, wasmTable;\n\nfunction updateGlobalBufferAndViews(b) {\n buffer = b;\n HEAP8 = new Int8Array(b);\n HEAP16 = new Int16Array(b);\n HEAP32 = new Int32Array(b);\n HEAPU8 = new Uint8Array(b);\n HEAPU16 = new Uint16Array(b);\n HEAPU32 = new Uint32Array(b);\n HEAPF32 = new Float32Array(b);\n HEAPF64 = new Float64Array(b);\n}\n\nfunction _INT123_compat_close() {\n err(\"missing function: INT123_compat_close\");\n abort(-1);\n}\n\nfunction _emscripten_memcpy_big(dest, src, num) {\n HEAPU8.copyWithin(dest, src, src + num);\n}\n\nfunction abortOnCannotGrowMemory(requestedSize) {\n abort(\"OOM\");\n}\n\nfunction _emscripten_resize_heap(requestedSize) {\n var oldSize = HEAPU8.length;\n requestedSize = requestedSize >>> 0;\n abortOnCannotGrowMemory(requestedSize);\n}\n\nvar SYSCALLS = {\n mappings: {},\n buffers: [ null, [], [] ],\n printChar: function(stream, curr) {\n  var buffer = SYSCALLS.buffers[stream];\n  if (curr === 0 || curr === 10) {\n   (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n   buffer.length = 0;\n  } else {\n   buffer.push(curr);\n  }\n },\n varargs: undefined,\n get: function() {\n  SYSCALLS.varargs += 4;\n  var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];\n  return ret;\n },\n getStr: function(ptr) {\n  var ret = UTF8ToString(ptr);\n  return ret;\n },\n get64: function(low, high) {\n  return low;\n }\n};\n\nfunction _fd_close(fd) {\n return 0;\n}\n\nfunction _fd_read(fd, iov, iovcnt, pnum) {\n var stream = SYSCALLS.getStreamFromFD(fd);\n var num = SYSCALLS.doReadv(stream, iov, iovcnt);\n HEAP32[pnum >> 2] = num;\n return 0;\n}\n\nfunction _fd_seek(fd, offset_low, offset_high, whence, newOffset) {}\n\nfunction _fd_write(fd, iov, iovcnt, pnum) {\n var num = 0;\n for (var i = 0; i < iovcnt; i++) {\n  var ptr = HEAP32[iov >> 2];\n  var len = HEAP32[iov + 4 >> 2];\n  iov += 8;\n  for (var j = 0; j < len; j++) {\n   SYSCALLS.printChar(fd, HEAPU8[ptr + j]);\n  }\n  num += len;\n }\n HEAP32[pnum >> 2] = num;\n return 0;\n}\n\nvar asmLibraryArg = {\n \"a\": _INT123_compat_close,\n \"f\": _emscripten_memcpy_big,\n \"e\": _emscripten_resize_heap,\n \"d\": _fd_close,\n \"b\": _fd_read,\n \"g\": _fd_seek,\n \"c\": _fd_write\n};\n\nfunction initRuntime(asm) {\n asm[\"i\"]();\n}\n\nvar imports = {\n \"a\": asmLibraryArg\n};\n\nvar _free, _malloc, _mpeg_frame_decoder_create, _mpeg_decode_interleaved, _mpeg_frame_decoder_destroy;\n\nEmscriptenWASM.compiled.then((wasm) => WebAssembly.instantiate(wasm, imports)).then(function(instance) {\n var asm = instance.exports;\n _free = asm[\"j\"];\n _malloc = asm[\"k\"];\n _mpeg_frame_decoder_create = asm[\"l\"];\n _mpeg_decode_interleaved = asm[\"m\"];\n _mpeg_frame_decoder_destroy = asm[\"n\"];\n wasmTable = asm[\"o\"];\n wasmMemory = asm[\"h\"];\n updateGlobalBufferAndViews(wasmMemory.buffer);\n initRuntime(asm);\n ready();\n});\n\nthis.ready = new Promise(resolve => {\n ready = resolve;\n}).then(() => {\n this.HEAP = buffer;\n this._malloc = _malloc;\n this._free = _free;\n this._mpeg_frame_decoder_create = _mpeg_frame_decoder_create;\n this._mpeg_decode_interleaved = _mpeg_decode_interleaved;\n this._mpeg_frame_decoder_destroy = _mpeg_frame_decoder_destroy;\n});\nreturn this;\n}","import { WASMAudioDecoderCommon } from \"@wasm-audio-decoders/common\";\n\nimport EmscriptenWASM from \"./EmscriptenWasm.js\";\n\nexport default function MPEGDecoder(options = {}) {\n  // injects dependencies when running as a web worker\n  // async\n  this._init = () => {\n    return new this._WASMAudioDecoderCommon(this).then((common) => {\n      this._common = common;\n\n      this._sampleRate = 0;\n\n      this._decodedBytes = this._common.allocateTypedArray(1, Uint32Array);\n      this._sampleRateBytes = this._common.allocateTypedArray(1, Uint32Array);\n\n      this._decoder = this._common.wasm._mpeg_frame_decoder_create();\n    });\n  };\n\n  Object.defineProperty(this, \"ready\", {\n    enumerable: true,\n    get: () => this._ready,\n  });\n\n  // async\n  this.reset = () => {\n    this.free();\n    return this._init();\n  };\n\n  this.free = () => {\n    this._common.wasm._mpeg_frame_decoder_destroy(this._decoder);\n    this._common.wasm._free(this._decoder);\n\n    this._common.free();\n  };\n\n  this._decode = (data, decodeInterval) => {\n    if (!(data instanceof Uint8Array))\n      throw Error(\n        `Data to decode must be Uint8Array. Instead got ${typeof data}`\n      );\n\n    this._input.buf.set(data);\n    this._decodedBytes.buf[0] = 0;\n\n    const samplesDecoded = this._common.wasm._mpeg_decode_interleaved(\n      this._decoder,\n      this._input.ptr,\n      data.length,\n      this._decodedBytes.ptr,\n      decodeInterval,\n      this._output.ptr,\n      this._outputChannelSize,\n      this._sampleRateBytes.ptr\n    );\n\n    this._sampleRate = this._sampleRateBytes.buf[0];\n\n    return this._WASMAudioDecoderCommon.getDecodedAudio(\n      [\n        this._output.buf.slice(0, samplesDecoded),\n        this._output.buf.slice(\n          this._outputChannelSize,\n          this._outputChannelSize + samplesDecoded\n        ),\n      ],\n      samplesDecoded,\n      this._sampleRate\n    );\n  };\n\n  this.decode = (data) => {\n    let output = [],\n      samples = 0;\n\n    for (\n      let offset = 0;\n      offset < data.length;\n      offset += this._decodedBytes.buf[0]\n    ) {\n      const decoded = this._decode(\n        data.subarray(offset, offset + this._input.len),\n        48\n      );\n\n      output.push(decoded.channelData);\n      samples += decoded.samplesDecoded;\n    }\n\n    return this._WASMAudioDecoderCommon.getDecodedAudioMultiChannel(\n      output,\n      2,\n      samples,\n      this._sampleRate\n    );\n  };\n\n  this.decodeFrame = (mpegFrame) => {\n    return this._decode(mpegFrame, mpegFrame.length);\n  };\n\n  this.decodeFrames = (mpegFrames) => {\n    let output = [],\n      samples = 0;\n\n    for (let i = 0; i < mpegFrames.length; i++) {\n      const decoded = this.decodeFrame(mpegFrames[i]);\n\n      output.push(decoded.channelData);\n      samples += decoded.samplesDecoded;\n    }\n\n    return this._WASMAudioDecoderCommon.getDecodedAudioMultiChannel(\n      output,\n      2,\n      samples,\n      this._sampleRate\n    );\n  };\n\n  // constructor\n\n  // injects dependencies when running as a web worker\n  this._isWebWorker = MPEGDecoder.isWebWorker;\n  this._WASMAudioDecoderCommon =\n    MPEGDecoder.WASMAudioDecoderCommon || WASMAudioDecoderCommon;\n  this._EmscriptenWASM = MPEGDecoder.EmscriptenWASM || EmscriptenWASM;\n\n  this._inputSize = 2 ** 18;\n  this._outputChannelSize = 1152 * 512;\n  this._outputChannels = 2;\n\n  this._ready = this._init();\n\n  return this;\n}\n","import { WASMAudioDecoderWorker } from \"@wasm-audio-decoders/common\";\nimport EmscriptenWASM from \"./EmscriptenWasm.js\";\nimport MPEGDecoder from \"./MPEGDecoder.js\";\n\nexport default class MPEGDecoderWebWorker extends WASMAudioDecoderWorker {\n  constructor(options) {\n    super(options, MPEGDecoder, EmscriptenWASM);\n  }\n\n  async decode(data) {\n    return this._postToDecoder(\"decode\", data);\n  }\n\n  async decodeFrame(data) {\n    return this._postToDecoder(\"decodeFrame\", data);\n  }\n\n  async decodeFrames(data) {\n    return this._postToDecoder(\"decodeFrames\", data);\n  }\n}\n","import { OpusDecoderWebWorker } from \"opus-decoder\";\nimport { MPEGDecoderWebWorker } from \"mpg123-decoder\";\n\nimport FrameQueue from \"../FrameQueue.js\";\nimport {\n  p,\n  audioContext,\n  state,\n  event,\n  SYNCED,\n  SYNCING,\n  NOT_SYNCED,\n  fireEvent,\n} from \"../global.js\";\nimport Player from \"./Player.js\";\n\nexport default class WebAudioPlayer extends Player {\n  constructor(icecast, inputMimeType, codec) {\n    super(icecast, inputMimeType, codec);\n\n    this._icecast.addEventListener(event.RETRY, () => {\n      this._syncState = NOT_SYNCED;\n    });\n    this._icecast.addEventListener(event.STREAM_START, () => {\n      if (!this._wasmDecoder) this._getWasmDecoder();\n    });\n\n    this._getWasmDecoder();\n\n    // set up audio context once\n    // audio context needs to be reused for the life of this instance for safari compatibility\n    this._initAudioContext();\n\n    this.reset();\n  }\n\n  static canPlayType(mimeType) {\n    const mapping = {\n      mpeg: [\"audio/mpeg\"],\n      ogg: {\n        opus: ['audio/ogg;codecs=\"opus\"'],\n      },\n    };\n\n    if (!WebAudioPlayer.isSupported) return \"\";\n\n    return super.canPlayType(\n      (codec) => codec === 'audio/ogg;codecs=\"opus\"' || codec === \"audio/mpeg\",\n      mimeType,\n      mapping\n    );\n  }\n\n  static get isSupported() {\n    return Boolean(\n      window.WebAssembly &&\n        (window.AudioContext || window.webkitAudioContext) &&\n        window.MediaStream\n    );\n  }\n\n  static get name() {\n    return \"webaudio\";\n  }\n\n  get isAudioPlayer() {\n    return true;\n  }\n\n  get metadataTimestamp() {\n    return this._currentTime / 1000;\n  }\n\n  get currentTime() {\n    return (performance.now() - this._playbackStartTime) / 1000 || 0;\n  }\n\n  _getWasmDecoder() {\n    switch (this._codec) {\n      case \"mpeg\":\n        this._wasmDecoder = new MPEGDecoderWebWorker();\n        break;\n      case \"opus\":\n        this._wasmDecoder = new OpusDecoderWebWorker();\n        break;\n    }\n\n    this._wasmReady = this._wasmDecoder.ready;\n  }\n\n  _initAudioContext() {\n    this._audioContext = p.get(this._icecast)[audioContext];\n\n    // hack for iOS to continue playing while locked\n    this._audioContext\n      .createScriptProcessor(2 ** 14, 2, 2)\n      .connect(this._audioContext.destination);\n\n    this._audioContext.resume();\n    this._audioContext.onstatechange = () => {\n      if (this._audioContext.state !== \"running\") this._audioContext.resume();\n    };\n  }\n\n  async reset() {\n    this._syncState = SYNCED;\n    this._syncSuccessful = false;\n    this._frameQueue = new FrameQueue(this._icecast);\n\n    this._currentTime = 0;\n    this._decodedSample = 0;\n    this._decodedSampleOffset = 0;\n    this._sampleRate = 0;\n    this._playbackStartTime = undefined;\n    this._firedPlay = false;\n\n    if (\n      this._icecast.state === state.STOPPING ||\n      this._icecast.state === state.STOPPED\n    ) {\n      if (this._wasmDecoder) {\n        const decoder = this._wasmDecoder;\n        this._wasmReady.then(() => {\n          decoder.free();\n        });\n        this._wasmDecoder = null;\n      }\n\n      if (this._mediaStream) {\n        // disconnect the currently playing media stream\n        this._mediaStream.disconnect();\n        this._mediaStream = null;\n      }\n\n      this._audioElement.srcObject = new MediaStream();\n    }\n  }\n\n  async onStream(oggPages) {\n    let frames = oggPages.flatMap((oggPage) => oggPage.codecFrames || oggPage);\n\n    switch (this._syncState) {\n      case NOT_SYNCED:\n        this._frameQueue.initSync();\n        this._syncState = SYNCING;\n      case SYNCING:\n        [frames, this._syncSuccessful] = this._frameQueue.sync(frames);\n\n        if (frames.length) {\n          this._syncState = SYNCED;\n\n          if (!this._syncSuccessful) await this.reset();\n        }\n      case SYNCED:\n        if (frames.length) {\n          this._currentTime = frames[frames.length - 1].totalDuration;\n\n          await this._wasmReady;\n          this._decodeAndPlay(frames);\n        }\n      default:\n        this._frameQueue.addAll(frames); // always add frames\n    }\n  }\n\n  async _decodeAndPlay(frames) {\n    const { channelData, samplesDecoded, sampleRate } =\n      await this._wasmDecoder.decodeFrames(frames.map((f) => f.data));\n\n    if (\n      this._icecast.state !== state.STOPPING &&\n      this._icecast.state !== state.STOPPED &&\n      samplesDecoded\n    ) {\n      this._icecast[fireEvent](event.STREAM, {\n        channelData,\n        samplesDecoded,\n        sampleRate,\n      });\n\n      if (!this._sampleRate) {\n        this._sampleRate = sampleRate;\n\n        this._mediaStream = this._audioContext.createMediaStreamDestination();\n        this._audioElement.srcObject = this._mediaStream.stream; // triggers canplay event\n      }\n\n      const decodeDuration =\n        (this._decodedSample + this._decodedSampleOffset) / this._sampleRate;\n\n      if (decodeDuration < this._audioContext.currentTime) {\n        // audio context time starts incrementing immediately when it's created\n        // offset needs to be accounted for to prevent overlapping sources\n        this._decodedSampleOffset += Math.floor(\n          this._audioContext.currentTime * this._sampleRate\n        );\n      }\n\n      const audioBuffer = this._audioContext.createBuffer(\n        channelData.length,\n        samplesDecoded,\n        this._sampleRate\n      );\n\n      channelData.forEach((channel, idx) =>\n        audioBuffer.getChannelData(idx).set(channel)\n      );\n\n      const source = this._audioContext.createBufferSource();\n      source.buffer = audioBuffer;\n      source.connect(this._mediaStream);\n      source.start(decodeDuration);\n\n      if (!this._firedPlay) {\n        if (this._bufferLength <= this.metadataTimestamp) {\n          this._icecast[fireEvent](event.PLAY);\n          this._playbackStartTime = performance.now();\n          this._firedPlay = true;\n        } else {\n          this._icecast[fireEvent](event.BUFFER, this.metadataTimestamp);\n        }\n      }\n\n      this._decodedSample += samplesDecoded;\n    }\n  }\n}\n","import { IcecastReadableStream } from \"icecast-metadata-js\";\nimport CodecParser from \"codec-parser\";\nimport {\n  p,\n  event,\n  audioElement,\n  endpoint,\n  enableLogging,\n  enableCodecUpdate,\n  metadataTypes,\n  icyMetaInt,\n  icyCharacterEncoding,\n  icyDetectionTimeout,\n  playbackMethod,\n  fireEvent,\n  hasIcy,\n  abortController,\n} from \"./global.js\";\n\nimport Player from \"./players/Player.js\";\nimport HTML5Player from \"./players/HTML5Player.js\";\nimport MediaSourcePlayer from \"./players/MediaSourcePlayer.js\";\nimport WebAudioPlayer from \"./players/WebAudioPlayer.js\";\n\nexport default class PlayerFactory {\n  constructor(icecast, preferredPlaybackMethod) {\n    const instanceVariables = p.get(icecast);\n\n    this._icecast = icecast;\n    this._enableLogging = instanceVariables[enableLogging];\n    this._enableCodecUpdate = instanceVariables[enableCodecUpdate];\n    this._audioElement = instanceVariables[audioElement];\n    this._endpoint = instanceVariables[endpoint];\n    this._metadataTypes = instanceVariables[metadataTypes];\n    this._icyMetaInt = instanceVariables[icyMetaInt];\n    this._icyCharacterEncoding = instanceVariables[icyCharacterEncoding];\n    this._icyDetectionTimeout = instanceVariables[icyDetectionTimeout];\n    this._hasIcy = instanceVariables[hasIcy];\n    this._preferredPlaybackMethod = instanceVariables[playbackMethod];\n\n    this._playbackMethod = \"\";\n    this._player = new Player(this._icecast);\n    this._player.enablePlayButton(PlayerFactory.supportedPlaybackMethods);\n\n    this._unprocessedFrames = [];\n    this._codecParser = undefined;\n    this._inputMimeType = \"\";\n    this._codec = \"\";\n  }\n\n  static get supportedPlaybackMethods() {\n    return [MediaSourcePlayer, WebAudioPlayer, HTML5Player].map((player) =>\n      player.isSupported ? player.name : \"\"\n    );\n  }\n\n  static canPlayType(type) {\n    return {\n      mediasource: MediaSourcePlayer.canPlayType(type),\n      html5: HTML5Player.canPlayType(type),\n      webaudio: WebAudioPlayer.canPlayType(type),\n    };\n  }\n\n  get player() {\n    return this._player;\n  }\n\n  get playbackMethod() {\n    return this._playbackMethod;\n  }\n\n  get icyMetaInt() {\n    return (\n      this._icecastReadableStream && this._icecastReadableStream.icyMetaInt\n    );\n  }\n\n  async playStream() {\n    return this.fetchStream().then(async (res) => {\n      this._icecast[fireEvent](event.STREAM_START);\n\n      return this.readIcecastResponse(res).finally(() => {\n        this._icecast[fireEvent](event.STREAM_END);\n      });\n    });\n  }\n\n  async fetchStream() {\n    const res = await fetch(this._endpoint, {\n      method: \"GET\",\n      headers: this._hasIcy ? { \"Icy-MetaData\": 1 } : {},\n      signal: p.get(this._icecast)[abortController].signal,\n    });\n\n    if (!res.ok) {\n      const error = new Error(`${res.status} received from ${res.url}`);\n      error.name = \"HTTP Response Error\";\n      throw error;\n    }\n\n    return res;\n  }\n\n  async readIcecastResponse(res) {\n    const inputMimeType = res.headers.get(\"content-type\");\n\n    const codecPromise = new Promise((onCodec) => {\n      this._codecParser = new CodecParser(inputMimeType, {\n        onCodecUpdate:\n          this._enableCodecUpdate &&\n          ((...args) => this._player.onCodecUpdate(...args)),\n        onCodec,\n        enableLogging: this._enableLogging,\n      });\n    });\n\n    this._icecastReadableStream = new IcecastReadableStream(res, {\n      onMetadata: async (metadata) => {\n        this._player.onMetadata(metadata);\n      },\n      onStream: async ({ stream }) => {\n        this._icecast[fireEvent](event.STREAM, stream);\n\n        const frames = [...this._codecParser.parseChunk(stream)];\n\n        if (this._player.isAudioPlayer) {\n          await this._player.onStream([...this._unprocessedFrames, ...frames]);\n\n          this._unprocessedFrames = [];\n        } else {\n          this._unprocessedFrames.push(...frames);\n        }\n      },\n      onError: (...args) => this._icecast[fireEvent](event.WARN, ...args),\n      metadataTypes: this._metadataTypes,\n      icyCharacterEncoding: this._icyCharacterEncoding,\n      icyDetectionTimeout: this._icyDetectionTimeout,\n      ...(this._icyMetaInt && { icyMetaInt: this._icyMetaInt }),\n    });\n\n    const icecastPromise = this._icecastReadableStream.startReading();\n\n    if (!this._player.isAudioPlayer) {\n      this._buildPlayer(inputMimeType, await codecPromise);\n    }\n\n    await icecastPromise;\n  }\n\n  _buildPlayer(inputMimeType, codec) {\n    // in order of preference\n    const { [this._preferredPlaybackMethod]: firstMethod, ...rest } = {\n      mediasource: MediaSourcePlayer,\n      webaudio: WebAudioPlayer,\n      html5: HTML5Player,\n    };\n\n    for (const player of Object.values({ firstMethod, ...rest })) {\n      const support = player.canPlayType(`${inputMimeType};codecs=\"${codec}\"`);\n\n      if (support === \"probably\" || support === \"maybe\") {\n        this._playbackMethod = player.name;\n        this._player = new player(this._icecast, inputMimeType, codec);\n        break;\n      }\n    }\n\n    if (!this._player) {\n      throw new Error(\n        `Your browser does not support this audio codec ${inputMimeType}${\n          codec && `;codecs=\"${codec}\"`\n        }`\n      );\n    }\n  }\n}\n","/**\n * @license\n * @see https://github.com/eshaz/icecast-metadata-js\n * @copyright 2021-2022 Ethan Halsall\n *  This file is part of icecast-metadata-player.\n *\n *  icecast-metadata-player free software: you can redistribute it and/or modify\n *  it under the terms of the GNU Lesser General Public License as published by\n *  the Free Software Foundation, either version 3 of the License, or\n *  (at your option) any later version.\n *\n *  icecast-metadata-player distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *  GNU Lesser General Public License for more details.\n *\n *  You should have received a copy of the GNU Lesser General Public License\n *  along with this program.  If not, see <https://www.gnu.org/licenses/>\n */\n\nimport { IcecastMetadataQueue } from \"icecast-metadata-js\";\nimport {\n  p,\n  noOp,\n  state,\n  event,\n  // options,\n  endpoint,\n  metadataTypes,\n  playbackMethod,\n  audioElement,\n  bufferLength,\n  icyMetaInt,\n  icyCharacterEncoding,\n  icyDetectionTimeout,\n  enableLogging,\n  enableCodecUpdate,\n  retryDelayMin,\n  retryDelayMax,\n  retryDelayRate,\n  retryTimeout,\n  // methods\n  fireEvent,\n  attachAudioElement,\n  shouldRetry,\n  logError,\n  // variables\n  hasIcy,\n  icecastMetadataQueue,\n  codecUpdateQueue,\n  abortController,\n} from \"./global.js\";\n\nimport EventTargetPolyfill from \"./EventTargetPolyfill.js\";\nimport PlayerFactory from \"./PlayerFactory.js\";\n\nconst EventClass = window.EventTarget || EventTargetPolyfill;\n\nconst playerFactory = Symbol();\nconst playerResetPromise = Symbol();\nconst events = Symbol();\nconst playerState = Symbol();\n\nconst onAudioPause = Symbol();\nconst onAudioPlay = Symbol();\nconst onPlay = Symbol();\nconst onAudioError = Symbol();\nconst onAudioWaiting = Symbol();\n\nconst resetPlayback = Symbol();\nconst retryAttempt = Symbol();\nconst retryTimeoutId = Symbol();\n\nexport default class IcecastMetadataPlayer extends EventClass {\n  /**\n   * @constructor\n   * @param {string} endpoint Endpoint of the Icecast compatible stream\n   * @param {object} options Options object\n   * @param {HTMLAudioElement} options.audioElement Audio element to play the stream\n   * @param {Array} options.metadataTypes Array of metadata types to parse\n   * @param {number} options.bufferLength Seconds of audio to buffer before starting playback\n   * @param {number} options.icyMetaInt ICY metadata interval\n   * @param {string} options.icyCharacterEncoding Character encoding to use for ICY metadata (defaults to \"utf-8\")\n   * @param {number} options.icyDetectionTimeout ICY metadata detection timeout\n   * @param {number} options.retryTimeout Number of seconds to wait before giving up on retries\n   * @param {number} options.retryDelayRate Percentage of seconds to increment after each retry (how quickly to increase the back-off)\n   * @param {number} options.retryDelayMin Minimum number of seconds between retries (start of the exponential back-off curve)\n   * @param {number} options.retryDelayMax Maximum number of seconds between retries (end of the exponential back-off curve)\n   * @param {boolean} options.enableLogging Set to `true` to enable warning and error logging to the console\n   * @param {string} options.playbackMethod Sets the preferred playback method (mediasource (default), html5, webaudio)\n   *\n   * @callback options.onMetadata Called with metadata when synchronized with the audio\n   * @callback options.onMetadataEnqueue Called with metadata when discovered on the response\n   * @callback options.onError Called with message(s) when a fallback or error condition is met\n   * @callback options.onWarn Called with message(s) when a warning condition is met\n   * @callback options.onPlay Called when the audio element begins playing\n   * @callback options.onLoad Called when stream request is started\n   * @callback options.onStreamStart Called when stream requests begins to return data\n   * @callback options.onBuffer Called when the audio buffer is being filled\n   * @callback options.onStream Called when stream data is sent to the audio element\n   * @callback options.onStreamEnd Called when the stream request completes\n   * @callback options.onStop Called when the stream is completely stopped and all cleanup operations are complete\n   * @callback options.onRetry Called when a connection retry is attempted\n   * @callback options.onRetryTimeout Called when when connections attempts have timed out\n   * @callback options.onCodecUpdate Called when the audio codec information has changed\n   */\n  constructor(url, options = {}) {\n    super();\n\n    p.set(this, {\n      // options\n      [endpoint]: url,\n      [audioElement]: options.audioElement || new Audio(),\n      [bufferLength]: options.bufferLength || 1,\n      [icyMetaInt]: options.icyMetaInt,\n      [icyCharacterEncoding]: options.icyCharacterEncoding,\n      [icyDetectionTimeout]: options.icyDetectionTimeout,\n      [metadataTypes]: options.metadataTypes || [\"icy\"],\n      [hasIcy]: (options.metadataTypes || [\"icy\"]).includes(\"icy\"),\n      [enableLogging]: options.enableLogging || false,\n      [enableCodecUpdate]:\n        Boolean(options.onCodecUpdate) || options.enableCodecUpdate,\n      [retryDelayRate]: (options.retryDelayRate || 0.1) + 1,\n      [retryDelayMin]: (options.retryDelayMin || 0.5) * 1000,\n      [retryDelayMax]: (options.retryDelayMax || 2) * 1000,\n      [retryTimeout]: (options.retryTimeout || 30) * 1000,\n      [playbackMethod]: options.playbackMethod || \"mediasource\",\n      // callbacks\n      [events]: {\n        [event.PLAY]: options.onPlay || noOp,\n        [event.LOAD]: options.onLoad || noOp,\n        [event.STREAM_START]: options.onStreamStart || noOp,\n        [event.BUFFER]: options.onBuffer || noOp,\n        [event.STREAM]: options.onStream || noOp,\n        [event.STREAM_END]: options.onStreamEnd || noOp,\n        [event.METADATA]: options.onMetadata || noOp,\n        [event.METADATA_ENQUEUE]: options.onMetadataEnqueue || noOp,\n        [event.CODEC_UPDATE]: options.onCodecUpdate || noOp,\n        [event.STOP]: options.onStop || noOp,\n        [event.RETRY]: options.onRetry || noOp,\n        [event.RETRY_TIMEOUT]: options.onRetryTimeout || noOp,\n        [event.WARN]: (...messages) => {\n          this[logError](console.warn, options.onWarn, messages);\n        },\n        [event.ERROR]: (...messages) => {\n          this[logError](console.error, options.onError, messages);\n        },\n      },\n      // variables\n      [icecastMetadataQueue]: new IcecastMetadataQueue({\n        onMetadataUpdate: (...args) => this[fireEvent](event.METADATA, ...args),\n        onMetadataEnqueue: (...args) =>\n          this[fireEvent](event.METADATA_ENQUEUE, ...args),\n        paused: true,\n      }),\n      [codecUpdateQueue]: new IcecastMetadataQueue({\n        onMetadataUpdate: (...args) =>\n          this[fireEvent](event.CODEC_UPDATE, ...args),\n        paused: true,\n      }),\n      [resetPlayback]: () => {\n        clearTimeout(p.get(this)[retryTimeoutId]);\n        this.removeEventListener(\n          event.STREAM_START,\n          p.get(this)[resetPlayback]\n        );\n        p.get(this)[audioElement].removeEventListener(\n          \"waiting\",\n          p.get(this)[onAudioWaiting]\n        );\n\n        if (this.state !== state.RETRYING) {\n          try {\n            p.get(this)[audioElement].pause();\n          } catch (e) {\n            p.get(this)[onAudioError](e);\n          }\n          p.get(this)[icecastMetadataQueue].purgeMetadataQueue();\n          p.get(this)[codecUpdateQueue].purgeMetadataQueue();\n          p.get(this)[playerResetPromise] = p\n            .get(this)\n            [playerFactory].player.reset();\n        }\n      },\n      // audio element event handlers\n      [onAudioPlay]: () => {\n        this.play();\n      },\n      [onAudioPause]: () => {\n        this.stop();\n      },\n      [onAudioError]: (e) => {\n        const errors = {\n          1: \" MEDIA_ERR_ABORTED The fetching of the associated resource was aborted by the user's request.\",\n          2: \" MEDIA_ERR_NETWORK Some kind of network error occurred which prevented the media from being successfully fetched, despite having previously been available.\",\n          3: \" MEDIA_ERR_DECODE Despite having previously been determined to be usable, an error occurred while trying to decode the media resource, resulting in an error.\",\n          4: \" MEDIA_ERR_SRC_NOT_SUPPORTED The associated resource or media provider object (such as a MediaStream) has been found to be unsuitable.\",\n          5: \" MEDIA_ERR_ENCRYPTED\",\n        };\n\n        const error = e?.target?.error || e;\n\n        if (this.state !== state.RETRYING) {\n          this[fireEvent](\n            event.ERROR,\n            \"The audio element encountered an error.\" +\n              (errors[error?.code] || \"\"),\n            error\n          );\n\n          this.stop();\n        } else {\n          p.get(this)[resetPlayback]();\n        }\n      },\n      [onPlay]: () => {\n        const audio = p.get(this)[audioElement];\n\n        if (\n          this.state === state.LOADING ||\n          (!audio.loop &&\n            this.state !== state.STOPPING &&\n            this.state !== state.STOPPED)\n        ) {\n          audio.play().catch((e) => {\n            p.get(this)[onAudioError](e);\n          });\n          this[playerState] = state.PLAYING;\n        }\n      },\n    });\n\n    this[attachAudioElement]();\n    this[playerState] = state.STOPPED;\n\n    p.get(this)[playerFactory] = new PlayerFactory(this);\n\n    this.addEventListener(event.PLAY, () => {\n      p.get(this)[icecastMetadataQueue].startQueue(\n        p.get(this)[playerFactory].player.currentTime\n      );\n    });\n\n    this.addEventListener(event.PLAY, () => {\n      p.get(this)[codecUpdateQueue].startQueue(\n        p.get(this)[playerFactory].player.currentTime\n      );\n    });\n  }\n\n  /**\n   * @description Checks for MediaSource, WebAudio, and HTML5 support for a given codec\n   * @param {string} type Codec / mime-type to check\n   * @returns {mediasource: string, webaudio: string, html5: string} Object indicating if the codec is supported by the playback method\n   */\n  static canPlayType(type) {\n    return PlayerFactory.canPlayType(type);\n  }\n\n  /**\n   * @returns {HTMLAudioElement} The audio element associated with this instance\n   */\n  get audioElement() {\n    return p.get(this)[audioElement];\n  }\n\n  /**\n   * @returns {number} The ICY metadata interval in number of bytes for this instance\n   */\n  get icyMetaInt() {\n    return p.get(this)[playerFactory].icyMetaInt;\n  }\n\n  /**\n   * @returns {Array<Metadata>} Array of enqueued metadata objects in FILO order\n   */\n  get metadataQueue() {\n    return p.get(this)[icecastMetadataQueue].metadataQueue;\n  }\n\n  /**\n   * @returns {string} The current state (\"loading\", \"playing\", \"stopping\", \"stopped\", \"retrying\")\n   */\n  get state() {\n    return p.get(this)[playerState];\n  }\n\n  /**\n   * @returns {string} The playback method (\"mediasource\", \"webaudio\", \"html5\")\n   */\n  get playbackMethod() {\n    return p.get(this)[playerFactory].playbackMethod;\n  }\n\n  set [playerState](_state) {\n    this.dispatchEvent(new CustomEvent(_state));\n    p.get(this)[playerState] = _state;\n  }\n\n  [attachAudioElement]() {\n    // audio events\n    const audio = p.get(this)[audioElement];\n    audio.addEventListener(\"pause\", p.get(this)[onAudioPause]);\n    audio.addEventListener(\"play\", p.get(this)[onAudioPlay]);\n    audio.addEventListener(\"error\", p.get(this)[onAudioError]);\n    this.addEventListener(\"play\", p.get(this)[onPlay]);\n  }\n\n  /**\n   * @description Remove event listeners from the audio element and this instance and stops playback\n   */\n  async detachAudioElement() {\n    const audio = p.get(this)[audioElement];\n    audio.removeEventListener(\"pause\", p.get(this)[onAudioPause]);\n    audio.removeEventListener(\"play\", p.get(this)[onAudioPlay]);\n    audio.removeEventListener(\"error\", p.get(this)[onAudioError]);\n    this.removeEventListener(\"play\", p.get(this)[onPlay]);\n\n    await this.stop();\n  }\n\n  /**\n   * @description Plays the Icecast stream\n   * @async Resolves when the audio element is playing\n   */\n  async play() {\n    if (this.state === state.STOPPED) {\n      p.get(this)[abortController] = new AbortController();\n      this[playerState] = state.LOADING;\n      this[fireEvent](event.LOAD);\n\n      // prettier-ignore\n      const tryFetching = async () =>\n        p.get(this)[playerFactory].playStream()\n          .catch(async (e) => {\n            if (e.name !== \"AbortError\") {\n              if (await this[shouldRetry](e)) {\n                this[fireEvent](event.RETRY);\n                return tryFetching();\n              }\n\n              p.get(this)[abortController].abort(); // stop fetch if is wasn't aborted\n\n              if (\n                p.get(this)[playerState] !== state.STOPPING &&\n                p.get(this)[playerState] !== state.STOPPED\n              ) {\n                this[fireEvent](\n                  event.ERROR,\n                  e.message.match(/network|fetch|offline|codec/i) ? e : e.stack,\n                  e\n                );\n              }\n            }\n          });\n\n      tryFetching().finally(() => {\n        p.get(this)[resetPlayback]();\n\n        this[fireEvent](event.STOP);\n        this[playerState] = state.STOPPED;\n      });\n\n      await new Promise((resolve) => {\n        this.addEventListener(event.PLAY, resolve, { once: true });\n      });\n    }\n  }\n\n  /**\n   * @description Stops playing the Icecast stream\n   * @async Resolves the icecast stream has stopped\n   */\n  async stop() {\n    if (this.state !== state.STOPPED && this.state !== state.STOPPING) {\n      this[playerState] = state.STOPPING;\n      p.get(this)[abortController].abort();\n\n      await new Promise((resolve) => {\n        this.addEventListener(event.STOP, resolve, { once: true });\n      });\n    }\n  }\n\n  async [shouldRetry](error) {\n    if (p.get(this)[retryTimeout] === 0) return false;\n\n    if (p.get(this)[playerState] === state.RETRYING) {\n      // wait for retry interval\n      await new Promise((resolve) => {\n        this.addEventListener(state.STOPPING, resolve, { once: true });\n\n        const delay = Math.min(\n          p.get(this)[retryDelayMin] *\n            p.get(this)[retryDelayRate] ** p.get(this)[retryAttempt]++,\n          p.get(this)[retryDelayMax]\n        ); // exponential backoff\n\n        setTimeout(() => {\n          this.removeEventListener(state.STOPPING, resolve);\n          resolve();\n        }, delay + delay * 0.3 * Math.random()); // jitter\n      });\n\n      // ensure the retry hasn't been cancelled while waiting\n      return p.get(this)[playerState] === state.RETRYING;\n    }\n\n    if (\n      p.get(this)[playerState] !== state.STOPPING &&\n      p.get(this)[playerState] !== state.STOPPED &&\n      (error.message.match(/network|fetch|offline|Error in body stream/i) ||\n        error.name === \"HTTP Response Error\")\n    ) {\n      this[fireEvent](event.ERROR, error.name, error);\n      this[playerState] = state.RETRYING;\n      this.addEventListener(event.STREAM_START, p.get(this)[resetPlayback], {\n        once: true,\n      });\n\n      if (p.get(this)[hasIcy]) {\n        this[fireEvent](\n          event.WARN,\n          \"This stream was requested with ICY metadata.\",\n          'If there is a CORS preflight failure, try removing \"icy\" from the metadataTypes option.',\n          \"See https://github.com/eshaz/icecast-metadata-js#cors for more details.\"\n        );\n      }\n\n      const audioWaiting = new Promise((resolve) => {\n        p.get(this)[onAudioWaiting] = resolve;\n        p.get(this)[audioElement].addEventListener(\n          \"waiting\",\n          p.get(this)[onAudioWaiting],\n          {\n            once: true,\n          }\n        );\n      });\n\n      // wait for whichever is longer, audio element waiting or retry timeout\n      p.get(this)[retryTimeoutId] = setTimeout(() => {\n        audioWaiting.then(() => {\n          if (p.get(this)[playerState] === state.RETRYING) {\n            this[fireEvent](event.RETRY_TIMEOUT);\n            this.stop();\n          }\n        });\n      }, p.get(this)[retryTimeout]);\n\n      p.get(this)[retryAttempt] = 0;\n      return true;\n    }\n\n    return false;\n  }\n\n  [fireEvent](event, ...args) {\n    this.dispatchEvent(new CustomEvent(event, { detail: args }));\n    p.get(this)[events][event](...args);\n  }\n\n  [logError](consoleFunction, callback, messages) {\n    if (p.get(this)[enableLogging]) {\n      consoleFunction(\n        \"icecast-metadata-js\",\n        messages.reduce((acc, message) => acc + \"\\n  \" + message, \"\")\n      );\n    }\n    if (callback) callback(...messages);\n  }\n}\n","// support for Safari 13\n// https://stackoverflow.com/a/58209729/14911733\n\nexport default class EventTargetPolyfill {\n  constructor() {\n    this._listeners = [];\n  }\n\n  hasEventListener(type, listener) {\n    return this._listeners.some(\n      (item) => item.type === type && item.listener === listener\n    );\n  }\n\n  addEventListener(type, listener, options = {}) {\n    if (!this.hasEventListener(type, listener)) {\n      this._listeners.push({ type, listener, options });\n    }\n    // console.log(`${this}-listeners:`,this._listeners);\n    return this;\n  }\n\n  removeEventListener(type, listener) {\n    const index = this._listeners.findIndex(\n      (item) => item.type === type && item.listener === listener\n    );\n    if (index >= 0) this._listeners.splice(index, 1);\n    return this;\n  }\n\n  removeEventListeners() {\n    this._listeners = [];\n    return this;\n  }\n\n  dispatchEvent(evt) {\n    this._listeners\n      .filter((item) => item.type === evt.type)\n      .forEach((item) => {\n        const {\n          type,\n          listener,\n          options: { once },\n        } = item;\n        listener.call(this, evt);\n        if (once === true) this.removeEventListener(type, listener);\n      });\n    return this;\n  }\n}\n"],"names":["module","exports","Worker","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","noOp","IcecastMetadataQueue","constructor","icyBr","onMetadataUpdate","onMetadataEnqueue","paused","this","_icyBr","_onMetadataUpdate","_onMetadataEnqueue","_initialPaused","_paused","_isInitialMetadata","_metadataQueue","metadataQueue","map","_timeoutId","rest","addMetadata","metadata","stats","timestampOffset","timestamp","metadataPayload","getTimeByBytes","currentStreamPosition","push","_enqueueMetadata","bytesRead","startQueue","forEach","u","purgeMetadataQueue","i","clearTimeout","payload","_dequeueMetadata","setTimeout","shift","p","WeakMap","state","endpoint","Symbol","metadataTypes","playbackMethod","audioElement","bufferLength","icyMetaInt","icyCharacterEncoding","icyDetectionTimeout","enableLogging","retryDelayRate","retryDelayMin","retryDelayMax","retryTimeout","enableCodecUpdate","fireEvent","attachAudioElement","shouldRetry","logError","audioContext","hasIcy","icecastMetadataQueue","codecUpdateQueue","abortController","SYNCED","SYNCING","NOT_SYNCED","concatBuffers","buffers","buffer","Uint8Array","reduce","acc","buf","length","offset","set","Stats","_totalBytesRead","_streamBytesRead","_metadataLengthBytesRead","_metadataBytesRead","_currentBytesRemaining","_currentStreamBytesRemaining","_currentMetadataBytesRemaining","totalBytesRead","streamBytesRead","metadataLengthBytesRead","metadataBytesRead","currentBytesRemaining","currentStreamBytesRemaining","currentMetadataBytesRemaining","bytes","addBytes","addStreamBytes","addMetadataLengthBytes","addMetadataBytes","addCurrentBytesRemaining","MetadataParser","params","_remainingData","_currentPosition","_buffer","_streamBuffer","_streamBufferLength","_stats","_onStream","onStream","_onMetadata","onMetadata","_onMetadataFailed","onMetadataFailed","_onError","onError","_enableLogging","_onStreamPromise","Promise","resolve","_onMetadataPromise","_generator","_passThroughParser","next","Infinity","_addStream","_getNextValue","_sendStream","static","_concatBuffersKnownLength","chunk","value","readAll","async","_logError","messages","console","warn","message","stream","streamPayload","minLength","_readData","_concatBuffers","subarray","data","IcyMetadataParser","super","_decoder","globalThis","TextDecoder","_icyMetaInt","_icyDetectionTimeout","_icyParser","_hasIcyMetadata","_getStream","_getMetadataLength","_getMetadata","metadataString","metadataRegex","metadataElement","match","RegExp","METADATA_SEARCH","startTime","Date","now","metaInt","detectMetadata","_sendMetadata","parseIcyMetadata","decode","OggMetadataParser","_oggParser","_isContinuePacket","_hasOggPage","codecMatcher","_identifyCodec","_getUint32","DataView","from","getUint32","_matchBytes","matchString","String","fromCharCode","syncBytes","baseOggPage","oggPageSegments","octet","regex","_readVorbisComment","vendorStringLength","vendorString","commentListLength","comments","commentLength","comment","delimiter","indexOf","toUpperCase","val","VENDOR_STRING","DualMetadataParser","_oggMetadataParser","_icyMetadataParser","iterator","asyncIterator","oggValue","asyncReadAll","IcecastMetadataReader","includes","hasOgg","_metadataParser","string","IcecastReadableStream","response","icecast","_readableStream","ReadableStream","controller","parseInt","headers","enqueue","body","close","_icecast","readableStream","e","name","reader","getReader","read","getCrcTable","crcTable","crcInitialValueFunction","crcFunction","byte","crc","bit","crc8Table","b","flacCrc16Table","Uint16Array","crc32Table","Uint32Array","j","bytesToString","reverseTable","reverse","BitReader","_data","_pos","position","bits","Math","floor","HeaderCache","onCodecUpdate","_onCodecUpdate","reset","enable","_isEnabled","_headerCache","Map","_codecUpdateData","_codecShouldUpdate","_bitrate","checkCodecUpdate","bitrate","totalDuration","_currentHeader","updateCurrentHeader","getHeader","header","setHeader","codecUpdateFields","headerStore","frameStore","Parser","codecParser","headerCache","_codecParser","frame","Frame","getFrame","incrementRawData","ignoreNextFrame","syncFrame","frameLength","_flushing","Header","mapFrameStats","logWarning","CodecFrame","readOffset","samples","readRawData","duration","sampleRate","frameNumber","totalBytesOut","totalSamples","reserved","bad","free","none","sixteenBitCRC","left","center","right","channelMappings","front","side","rear","x","flatMap","y","z","join","lfe","monophonic","stereo","channels","getChannelMapping","channelCount","mappings","vorbisOpusChannelMapping","rate48000","rate44100","rate32000","rate24000","rate22050","rate16000","rate8000","ID3v2","headerLength","version","unsynchronizationFlag","Boolean","extendedHeaderFlag","experimentalFlag","footerPresent","dataLength","CodecHeader","bitDepth","channelMode","bitrateMatrix","calcBitrate","idx","interval","intervalOffset","bands","to31","layer12ModeExtensions","intensityStereo","msStereo","on","off","description","framePadding","modeExtensions","v1","bitrateIndex","v2","mpegVersions","layers","sampleRates","protection","emphasis","channelModes","MPEGHeader","id3v2Header","getID3v2Header","cachedHeader","mpegVersion","layerBits","layer","isPrivate","channelModeBits","modeExtension","isCopyrighted","isOriginal","MPEGFrame","MPEGParser","onCodec","codec","fixedLengthFrameSync","profile","AACHeader","assign","protectionBit","profileBits","sampleRateBits","privateBit","isHome","copyrightId","copyrightIdStart","numberAACFrames","bufferFullnessBits","bufferFullness","audioSpecificConfig","setUint16","AACFrame","AACParser","FLACFrame","getFrameFooterCrc16","crcChunkSize","flacCrc16","streamInfo","crc16","getFromStreamInfo","blockingStrategy","blockSize","channelAssignments","FLACHeader","zeroMask","codecParserStub","blockingStrategyBits","blockSizeBits","channelAssignment","decodedUtf8","decodeUTF8Int","sampleNumber","crc8","FLACParser","secondByte","nextHeaderOffset","frameData","checkFrameFooterCrc16","_getNextFrameSyncOffset","parseOggPage","oggPage","pageSequenceNumber","_streamInfo","codecFrames","segments","segment","getHeaderFromUint8Array","filter","OggPageHeader","streamStructureVersion","isLastPage","isFirstPage","isContinuedPacket","view","absoluteGranulePosition","getBigInt64","streamSerialNumber","getInt32","pageChecksum","pageSegmentTableLength","pageSegmentTable","pageSegmentBytes","segmentLength","segmentByte","OggPage","totalLength","rawData","crc32","OpusFrame","frameSize","frameCount","channelMappingFamilies","slice","silkOnly","celtOnly","hybrid","narrowBand","mediumBand","wideBand","superWideBand","fullBand","configTable","mode","bandwidth","OpusHeader","packetData","channelMappingFamily","Error","packetMode","packetLength","substr","preSkip","getUint16","inputSampleRate","outputGain","getInt16","streamCount","coupledStreamCount","channelMappingTable","packetConfig","isVbr","hasOpusPadding","headerData","OpusParser","_identificationHeader","VorbisFrame","blockSizes","VorbisHeader","bitrateMaximum","bitrateNominal","bitrateMinimum","blocksize1","blocksize0","vorbisComments","vorbisSetup","VorbisParser","_mode","count","_prevBlockSize","_currBlockSize","_vorbisComments","_vorbisSetup","_parseSetupHeader","_getSamples","blockFlag","mask","prevMask","setup","bitReader","failedToParseVorbisStream","failedToParseVorbisModes","modeBits","mapping","log2","OggParser","_onCodec","_codec","_continuedPacket","_pageSequenceNumber","_updateCodec","_parser","_checkForIdentifier","idString","test","_checkPageSequenceNumber","oggPageStore","pop","mimeType","_inputMimeType","_getGenerator","parseAll","fileData","parseChunk","flush","_frameNumber","_currentReadPosition","_totalBytesIn","_totalBytesOut","_totalSamples","_sampleRate","_rawData","parseFrame","minSize","increment","mapCodecFrameStats","round","codecFrame","_log","logger","width","max","s","repeat","error","Player","inputMimeType","instanceVariables","_audioElement","_icecastMetadataQueue","_codecUpdateQueue","_endpoint","_bufferLength","_codecUpdateTimestamp","_codecUpdateOffset","codecChecker","matches","parseMimeType","checkCodecs","codecs","result","mime","groups","mimeMapping","Array","isArray","mimeCodecs","split","enablePlayButton","supportedSources","removeAttribute","srcObject","src","URL","createObjectURL","MediaSource","_mediaStream","MediaStream","loop","audioCtx","window","AudioContext","webkitAudioContext","latencyHint","events","unlock","resume","then","removeEventListener","addEventListener","isSupported","isAudioPlayer","metadataTimestamp","currentTime","frames","updateTimestamp","HTML5Player","crossOrigin","preload","canPlayType","type","Audio","_frame","_metadataTimestampOffset","_audioLoadedTimestamp","performance","_metadataLoadedTimestamp","_firedPlay","once","WEBM","MP3","MP4A_40_2","FLAC","VORBIS","OPUS","audio","AUDIO_MP4","AUDIO_WEBM","MSE_AUDIO_WRAPPER","ContainerElement","contents","children","_name","_contents","_children","char","charCodeAt","number","setFloat64","setBigUint64","BigInt","setUint32","setInt16","array","item","flatten","_buildContents","element","_buildLength","addChild","object","Box","_lengthBytes","stringToByteArray","_length","ESTag","tagNumber","tags","every","getLength","addTag","tag","ISOBMFFContainer","getCodecBox","getMp4a","getOpus","getFlaC","esdsCodec","streamDescriptorTag","getInitializationSegment","getSamplesPerFrame","getFrameData","getMediaSegment","xiphLacing","lacing","l","EBML","isUnknownLength","_isUnknownLength","getUint64","isNaN","_contentLength","getUintVariable","id","WEBMContainer","_codecId","_getCodecSpecificTrack","_timestampScale","getFloat64","offsetSamples","MSEAudioWrapper","options","PREFERRED_CONTAINER","preferredContainer","MIN_FRAMES","minFramesPerSegment","MAX_FRAMES","maxFramesPerSegment","MIN_FRAMES_LENGTH","minBytesPerSegment","MAX_SAMPLES_PER_SEGMENT","_onMimeType","onMimeType","_container","_getContainer","_mimeType","_frames","_processFrames","_groupFrames","_sentInitialSegment","frameGroup","currentGroup","FrameQueue","CACHE_DURATION","initSync","initQueue","_syncQueue","_alignIndex","_syncIndex","_queue","_queueDuration","add","addAll","sync","align_queues","syncQueue","sliceIndex","toFixed","newFrames","MediaSourcePlayer","_syncState","isTypeSupported","mpeg","aac","aacp","flac","ogg","opus","vorbis","_mediaSource","sourceBuffers","buffered","end","_frameQueue","_sourceBufferQueue","_mediaSourcePromise","_prepareMediaSource","_createMediaSource","_appendSourceBuffer","f","wrapper","fragments","_sourceBufferRemoved","addSourceBuffer","appendBuffer","_waitForSourceBuffer","BUFFER_INTERVAL","remove","WASMAudioDecoderCommon","caller","concatFloat32","defineProperties","ret","Float32Array","getDecodedAudio","channelData","samplesDecoded","getDecodedAudioMultiChannel","input","channelsDecoded","channel","inflateDynEncodeString","source","dest","output","substring","offsetReverse","escaped","byteIndex","inflate","uint8Array","uint16Array","Tree","t","trans","sltree","sdtree","length_bits","length_base","dist_bits","dist_base","clcidx","code_tree","lengths","tinf_build_bits_base","base","delta","first","sum","offs","tinf_build_tree","num","tinf_getbit","bitcount","tinf_read_bits","tinf_decode_symbol","cur","len","tinf_decode_trees","lt","dt","hlit","hdist","hclen","clen","sym","prev","tinf_inflate_block_data","destLen","dist","tinf_inflate_uncompressed_block","invlength","tinf_build_fixed_trees","ltree","dtree","bfinal","btype","res","_wasm","getOutputChannels","outputData","allocateTypedArray","TypedArray","ptr","_malloc","BYTES_PER_ELEMENT","_pointers","HEAP","_free","clear","_EmscriptenWASM","Set","ready","_input","_inputSize","_output","_outputChannels","_outputChannelSize","WASMAudioDecoderWorker","Decoder","EmscriptenWASM","webworkerSourceCode","_options","_Decoder","_WASMAudioDecoderCommon","isWebWorker","decoder","self","onmessage","command","postMessage","toString","JSON","stringify","Blob","Buffer","_id","Number","MIN_SAFE_INTEGER","_enqueuedOperations","delete","_postToDecoder","finally","terminate","HEAPU8","wasmMemory","base64ReverseLookup","compiled","WebAssembly","compile","_opus_frame_decoder_create","_opus_frame_decode_float_deinterleaved","_opus_frame_decoder_destroy","imports","cos","exp","copyWithin","requestedSize","what","abort","wasm","instantiate","instance","asm","Int8Array","Int16Array","Int32Array","Float64Array","initRuntime","OpusDecoder","errors","_init","common","_common","_channels","_channelMappingTable","_streamCount","_coupledStreamCount","_preSkip","_ready","_decode","opusFrame","decodeFrame","decodeFrames","opusFrames","outputBuffers","outputSamples","_isWebWorker","isNumber","param","OpusDecoderWebWorker","out","text","log","err","HEAP32","UTF8Decoder","SYSCALLS","printChar","curr","heap","maxBytesToRead","endIdx","endPtr","UTF8ArrayToString","varargs","getStr","maxPtr","UTF8ToString","get64","low","high","asmLibraryArg","fd","iov","iovcnt","pnum","getStreamFromFD","doReadv","offset_low","offset_high","whence","newOffset","_mpeg_frame_decoder_create","_mpeg_decode_interleaved","_mpeg_frame_decoder_destroy","MPEGDecoder","_decodedBytes","_sampleRateBytes","decodeInterval","decoded","mpegFrame","mpegFrames","MPEGDecoderWebWorker","WebAudioPlayer","_wasmDecoder","_getWasmDecoder","_initAudioContext","_currentTime","_playbackStartTime","_wasmReady","_audioContext","createScriptProcessor","connect","destination","onstatechange","_syncSuccessful","_decodedSample","_decodedSampleOffset","disconnect","oggPages","_decodeAndPlay","createMediaStreamDestination","decodeDuration","audioBuffer","createBuffer","getChannelData","createBufferSource","start","PlayerFactory","preferredPlaybackMethod","_enableCodecUpdate","_metadataTypes","_icyCharacterEncoding","_hasIcy","_preferredPlaybackMethod","_playbackMethod","_player","supportedPlaybackMethods","_unprocessedFrames","player","mediasource","html5","webaudio","_icecastReadableStream","fetchStream","readIcecastResponse","fetch","method","signal","ok","status","url","codecPromise","args","icecastPromise","startReading","_buildPlayer","firstMethod","values","support","EventClass","EventTarget","_listeners","hasEventListener","listener","some","index","findIndex","splice","removeEventListeners","dispatchEvent","evt","playerFactory","playerResetPromise","playerState","onAudioPause","onAudioPlay","onPlay","onAudioError","onAudioWaiting","resetPlayback","retryAttempt","retryTimeoutId","IcecastMetadataPlayer","onLoad","onStreamStart","onBuffer","onStreamEnd","onStop","onRetry","onRetryTimeout","onWarn","pause","play","stop","target","code","catch","_state","CustomEvent","AbortController","tryFetching","playStream","stack","delay","min","random","audioWaiting","event","detail","consoleFunction","callback"],"sourceRoot":""}